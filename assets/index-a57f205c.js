var w6=Object.defineProperty;var A6=(r,t,e)=>t in r?w6(r,t,{enumerable:!0,configurable:!0,writable:!0,value:e}):r[t]=e;var R6=(r,t)=>()=>(t||r((t={exports:{}}).exports,t),t.exports);var Dt=(r,t,e)=>(A6(r,typeof t!="symbol"?t+"":t,e),e),fa=(r,t,e)=>{if(!t.has(r))throw TypeError("Cannot "+e)};var yt=(r,t,e)=>(fa(r,t,"read from private field"),e?e.call(r):t.get(r)),Be=(r,t,e)=>{if(t.has(r))throw TypeError("Cannot add the same private member more than once");t instanceof WeakSet?t.add(r):t.set(r,e)},Oe=(r,t,e,n)=>(fa(r,t,"write to private field"),n?n.call(r,e):t.set(r,e),e);var eo=(r,t,e)=>(fa(r,t,"access private method"),e);var km=R6(rr=>{(function(){const t=document.createElement("link").relList;if(t&&t.supports&&t.supports("modulepreload"))return;for(const i of document.querySelectorAll('link[rel="modulepreload"]'))n(i);new MutationObserver(i=>{for(const s of i)if(s.type==="childList")for(const o of s.addedNodes)o.tagName==="LINK"&&o.rel==="modulepreload"&&n(o)}).observe(document,{childList:!0,subtree:!0});function e(i){const s={};return i.integrity&&(s.integrity=i.integrity),i.referrerPolicy&&(s.referrerPolicy=i.referrerPolicy),i.crossOrigin==="use-credentials"?s.credentials="include":i.crossOrigin==="anonymous"?s.credentials="omit":s.credentials="same-origin",s}function n(i){if(i.ep)return;i.ep=!0;const s=e(i);fetch(i.href,s)}})();/**
 * @license
 * Copyright 2010-2023 Three.js Authors
 * SPDX-License-Identifier: MIT
 */const z0="156",ur={LEFT:0,MIDDLE:1,RIGHT:2,ROTATE:0,DOLLY:1,PAN:2},hr={ROTATE:0,PAN:1,DOLLY_PAN:2,DOLLY_ROTATE:3},C6=0,b3=1,P6=2,Rl=1,L6=2,ei=3,wn=0,ze=1,fn=2,Si=0,kr=1,w3=2,A3=3,R3=4,D6=5,Ur=100,U6=101,I6=102,C3=103,P3=104,O6=200,N6=201,F6=202,z6=203,Cl=204,Pl=205,B6=206,k6=207,G6=208,H6=209,V6=210,W6=0,X6=1,q6=2,l0=3,Y6=4,j6=5,Z6=6,K6=7,Ll=0,$6=1,J6=2,Ei=0,Q6=1,t2=2,e2=3,n2=4,i2=5,Dl=300,$r=301,Jr=302,c0=303,u0=304,Jo=306,h0=1e3,Un=1001,f0=1002,Ze=1003,L3=1004,da=1005,yn=1006,r2=1007,Rs=1008,Ti=1009,s2=1010,o2=1011,B0=1012,Ul=1013,gi=1014,vi=1015,Cs=1016,Il=1017,Ol=1018,Wi=1020,a2=1021,In=1023,l2=1024,c2=1025,Xi=1026,Qr=1027,u2=1028,Nl=1029,h2=1030,Fl=1031,zl=1033,pa=33776,ma=33777,_a=33778,ga=33779,D3=35840,U3=35841,I3=35842,O3=35843,f2=36196,N3=37492,F3=37496,z3=37808,B3=37809,k3=37810,G3=37811,H3=37812,V3=37813,W3=37814,X3=37815,q3=37816,Y3=37817,j3=37818,Z3=37819,K3=37820,$3=37821,va=36492,J3=36494,Q3=36495,d2=36283,t1=36284,e1=36285,n1=36286,Bl=3e3,qi=3001,p2=3200,m2=3201,k0=0,_2=1,Yi="",ae="srgb",Hn="srgb-linear",Qo="display-p3",xa=7680,g2=519,v2=512,x2=513,y2=514,M2=515,S2=516,E2=517,T2=518,b2=519,i1=35044,r1="300 es",d0=1035,si=2e3,No=2001;class or{addEventListener(t,e){this._listeners===void 0&&(this._listeners={});const n=this._listeners;n[t]===void 0&&(n[t]=[]),n[t].indexOf(e)===-1&&n[t].push(e)}hasEventListener(t,e){if(this._listeners===void 0)return!1;const n=this._listeners;return n[t]!==void 0&&n[t].indexOf(e)!==-1}removeEventListener(t,e){if(this._listeners===void 0)return;const i=this._listeners[t];if(i!==void 0){const s=i.indexOf(e);s!==-1&&i.splice(s,1)}}dispatchEvent(t){if(this._listeners===void 0)return;const n=this._listeners[t.type];if(n!==void 0){t.target=this;const i=n.slice(0);for(let s=0,o=i.length;s<o;s++)i[s].call(this,t);t.target=null}}}const ke=["00","01","02","03","04","05","06","07","08","09","0a","0b","0c","0d","0e","0f","10","11","12","13","14","15","16","17","18","19","1a","1b","1c","1d","1e","1f","20","21","22","23","24","25","26","27","28","29","2a","2b","2c","2d","2e","2f","30","31","32","33","34","35","36","37","38","39","3a","3b","3c","3d","3e","3f","40","41","42","43","44","45","46","47","48","49","4a","4b","4c","4d","4e","4f","50","51","52","53","54","55","56","57","58","59","5a","5b","5c","5d","5e","5f","60","61","62","63","64","65","66","67","68","69","6a","6b","6c","6d","6e","6f","70","71","72","73","74","75","76","77","78","79","7a","7b","7c","7d","7e","7f","80","81","82","83","84","85","86","87","88","89","8a","8b","8c","8d","8e","8f","90","91","92","93","94","95","96","97","98","99","9a","9b","9c","9d","9e","9f","a0","a1","a2","a3","a4","a5","a6","a7","a8","a9","aa","ab","ac","ad","ae","af","b0","b1","b2","b3","b4","b5","b6","b7","b8","b9","ba","bb","bc","bd","be","bf","c0","c1","c2","c3","c4","c5","c6","c7","c8","c9","ca","cb","cc","cd","ce","cf","d0","d1","d2","d3","d4","d5","d6","d7","d8","d9","da","db","dc","dd","de","df","e0","e1","e2","e3","e4","e5","e6","e7","e8","e9","ea","eb","ec","ed","ee","ef","f0","f1","f2","f3","f4","f5","f6","f7","f8","f9","fa","fb","fc","fd","fe","ff"];let s1=1234567;const ys=Math.PI/180,Ps=180/Math.PI;function ar(){const r=Math.random()*4294967295|0,t=Math.random()*4294967295|0,e=Math.random()*4294967295|0,n=Math.random()*4294967295|0;return(ke[r&255]+ke[r>>8&255]+ke[r>>16&255]+ke[r>>24&255]+"-"+ke[t&255]+ke[t>>8&255]+"-"+ke[t>>16&15|64]+ke[t>>24&255]+"-"+ke[e&63|128]+ke[e>>8&255]+"-"+ke[e>>16&255]+ke[e>>24&255]+ke[n&255]+ke[n>>8&255]+ke[n>>16&255]+ke[n>>24&255]).toLowerCase()}function De(r,t,e){return Math.max(t,Math.min(e,r))}function G0(r,t){return(r%t+t)%t}function w2(r,t,e,n,i){return n+(r-t)*(i-n)/(e-t)}function A2(r,t,e){return r!==t?(e-r)/(t-r):0}function Ms(r,t,e){return(1-e)*r+e*t}function R2(r,t,e,n){return Ms(r,t,1-Math.exp(-e*n))}function C2(r,t=1){return t-Math.abs(G0(r,t*2)-t)}function P2(r,t,e){return r<=t?0:r>=e?1:(r=(r-t)/(e-t),r*r*(3-2*r))}function L2(r,t,e){return r<=t?0:r>=e?1:(r=(r-t)/(e-t),r*r*r*(r*(r*6-15)+10))}function D2(r,t){return r+Math.floor(Math.random()*(t-r+1))}function U2(r,t){return r+Math.random()*(t-r)}function I2(r){return r*(.5-Math.random())}function O2(r){r!==void 0&&(s1=r);let t=s1+=1831565813;return t=Math.imul(t^t>>>15,t|1),t^=t+Math.imul(t^t>>>7,t|61),((t^t>>>14)>>>0)/4294967296}function N2(r){return r*ys}function F2(r){return r*Ps}function p0(r){return(r&r-1)===0&&r!==0}function z2(r){return Math.pow(2,Math.ceil(Math.log(r)/Math.LN2))}function Fo(r){return Math.pow(2,Math.floor(Math.log(r)/Math.LN2))}function B2(r,t,e,n,i){const s=Math.cos,o=Math.sin,a=s(e/2),l=o(e/2),c=s((t+n)/2),u=o((t+n)/2),h=s((t-n)/2),f=o((t-n)/2),d=s((n-t)/2),g=o((n-t)/2);switch(i){case"XYX":r.set(a*u,l*h,l*f,a*c);break;case"YZY":r.set(l*f,a*u,l*h,a*c);break;case"ZXZ":r.set(l*h,l*f,a*u,a*c);break;case"XZX":r.set(a*u,l*g,l*d,a*c);break;case"YXY":r.set(l*d,a*u,l*g,a*c);break;case"ZYZ":r.set(l*g,l*d,a*u,a*c);break;default:console.warn("THREE.MathUtils: .setQuaternionFromProperEuler() encountered an unknown order: "+i)}}function Ir(r,t){switch(t.constructor){case Float32Array:return r;case Uint32Array:return r/4294967295;case Uint16Array:return r/65535;case Uint8Array:return r/255;case Int32Array:return Math.max(r/2147483647,-1);case Int16Array:return Math.max(r/32767,-1);case Int8Array:return Math.max(r/127,-1);default:throw new Error("Invalid component type.")}}function Ye(r,t){switch(t.constructor){case Float32Array:return r;case Uint32Array:return Math.round(r*4294967295);case Uint16Array:return Math.round(r*65535);case Uint8Array:return Math.round(r*255);case Int32Array:return Math.round(r*2147483647);case Int16Array:return Math.round(r*32767);case Int8Array:return Math.round(r*127);default:throw new Error("Invalid component type.")}}const ms={DEG2RAD:ys,RAD2DEG:Ps,generateUUID:ar,clamp:De,euclideanModulo:G0,mapLinear:w2,inverseLerp:A2,lerp:Ms,damp:R2,pingpong:C2,smoothstep:P2,smootherstep:L2,randInt:D2,randFloat:U2,randFloatSpread:I2,seededRandom:O2,degToRad:N2,radToDeg:F2,isPowerOfTwo:p0,ceilPowerOfTwo:z2,floorPowerOfTwo:Fo,setQuaternionFromProperEuler:B2,normalize:Ye,denormalize:Ir};class it{constructor(t=0,e=0){it.prototype.isVector2=!0,this.x=t,this.y=e}get width(){return this.x}set width(t){this.x=t}get height(){return this.y}set height(t){this.y=t}set(t,e){return this.x=t,this.y=e,this}setScalar(t){return this.x=t,this.y=t,this}setX(t){return this.x=t,this}setY(t){return this.y=t,this}setComponent(t,e){switch(t){case 0:this.x=e;break;case 1:this.y=e;break;default:throw new Error("index is out of range: "+t)}return this}getComponent(t){switch(t){case 0:return this.x;case 1:return this.y;default:throw new Error("index is out of range: "+t)}}clone(){return new this.constructor(this.x,this.y)}copy(t){return this.x=t.x,this.y=t.y,this}add(t){return this.x+=t.x,this.y+=t.y,this}addScalar(t){return this.x+=t,this.y+=t,this}addVectors(t,e){return this.x=t.x+e.x,this.y=t.y+e.y,this}addScaledVector(t,e){return this.x+=t.x*e,this.y+=t.y*e,this}sub(t){return this.x-=t.x,this.y-=t.y,this}subScalar(t){return this.x-=t,this.y-=t,this}subVectors(t,e){return this.x=t.x-e.x,this.y=t.y-e.y,this}multiply(t){return this.x*=t.x,this.y*=t.y,this}multiplyScalar(t){return this.x*=t,this.y*=t,this}divide(t){return this.x/=t.x,this.y/=t.y,this}divideScalar(t){return this.multiplyScalar(1/t)}applyMatrix3(t){const e=this.x,n=this.y,i=t.elements;return this.x=i[0]*e+i[3]*n+i[6],this.y=i[1]*e+i[4]*n+i[7],this}min(t){return this.x=Math.min(this.x,t.x),this.y=Math.min(this.y,t.y),this}max(t){return this.x=Math.max(this.x,t.x),this.y=Math.max(this.y,t.y),this}clamp(t,e){return this.x=Math.max(t.x,Math.min(e.x,this.x)),this.y=Math.max(t.y,Math.min(e.y,this.y)),this}clampScalar(t,e){return this.x=Math.max(t,Math.min(e,this.x)),this.y=Math.max(t,Math.min(e,this.y)),this}clampLength(t,e){const n=this.length();return this.divideScalar(n||1).multiplyScalar(Math.max(t,Math.min(e,n)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this}roundToZero(){return this.x=Math.trunc(this.x),this.y=Math.trunc(this.y),this}negate(){return this.x=-this.x,this.y=-this.y,this}dot(t){return this.x*t.x+this.y*t.y}cross(t){return this.x*t.y-this.y*t.x}lengthSq(){return this.x*this.x+this.y*this.y}length(){return Math.sqrt(this.x*this.x+this.y*this.y)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)}normalize(){return this.divideScalar(this.length()||1)}angle(){return Math.atan2(-this.y,-this.x)+Math.PI}angleTo(t){const e=Math.sqrt(this.lengthSq()*t.lengthSq());if(e===0)return Math.PI/2;const n=this.dot(t)/e;return Math.acos(De(n,-1,1))}distanceTo(t){return Math.sqrt(this.distanceToSquared(t))}distanceToSquared(t){const e=this.x-t.x,n=this.y-t.y;return e*e+n*n}manhattanDistanceTo(t){return Math.abs(this.x-t.x)+Math.abs(this.y-t.y)}setLength(t){return this.normalize().multiplyScalar(t)}lerp(t,e){return this.x+=(t.x-this.x)*e,this.y+=(t.y-this.y)*e,this}lerpVectors(t,e,n){return this.x=t.x+(e.x-t.x)*n,this.y=t.y+(e.y-t.y)*n,this}equals(t){return t.x===this.x&&t.y===this.y}fromArray(t,e=0){return this.x=t[e],this.y=t[e+1],this}toArray(t=[],e=0){return t[e]=this.x,t[e+1]=this.y,t}fromBufferAttribute(t,e){return this.x=t.getX(e),this.y=t.getY(e),this}rotateAround(t,e){const n=Math.cos(e),i=Math.sin(e),s=this.x-t.x,o=this.y-t.y;return this.x=s*n-o*i+t.x,this.y=s*i+o*n+t.y,this}random(){return this.x=Math.random(),this.y=Math.random(),this}*[Symbol.iterator](){yield this.x,yield this.y}}class zt{constructor(t,e,n,i,s,o,a,l,c){zt.prototype.isMatrix3=!0,this.elements=[1,0,0,0,1,0,0,0,1],t!==void 0&&this.set(t,e,n,i,s,o,a,l,c)}set(t,e,n,i,s,o,a,l,c){const u=this.elements;return u[0]=t,u[1]=i,u[2]=a,u[3]=e,u[4]=s,u[5]=l,u[6]=n,u[7]=o,u[8]=c,this}identity(){return this.set(1,0,0,0,1,0,0,0,1),this}copy(t){const e=this.elements,n=t.elements;return e[0]=n[0],e[1]=n[1],e[2]=n[2],e[3]=n[3],e[4]=n[4],e[5]=n[5],e[6]=n[6],e[7]=n[7],e[8]=n[8],this}extractBasis(t,e,n){return t.setFromMatrix3Column(this,0),e.setFromMatrix3Column(this,1),n.setFromMatrix3Column(this,2),this}setFromMatrix4(t){const e=t.elements;return this.set(e[0],e[4],e[8],e[1],e[5],e[9],e[2],e[6],e[10]),this}multiply(t){return this.multiplyMatrices(this,t)}premultiply(t){return this.multiplyMatrices(t,this)}multiplyMatrices(t,e){const n=t.elements,i=e.elements,s=this.elements,o=n[0],a=n[3],l=n[6],c=n[1],u=n[4],h=n[7],f=n[2],d=n[5],g=n[8],_=i[0],m=i[3],p=i[6],M=i[1],v=i[4],x=i[7],S=i[2],T=i[5],E=i[8];return s[0]=o*_+a*M+l*S,s[3]=o*m+a*v+l*T,s[6]=o*p+a*x+l*E,s[1]=c*_+u*M+h*S,s[4]=c*m+u*v+h*T,s[7]=c*p+u*x+h*E,s[2]=f*_+d*M+g*S,s[5]=f*m+d*v+g*T,s[8]=f*p+d*x+g*E,this}multiplyScalar(t){const e=this.elements;return e[0]*=t,e[3]*=t,e[6]*=t,e[1]*=t,e[4]*=t,e[7]*=t,e[2]*=t,e[5]*=t,e[8]*=t,this}determinant(){const t=this.elements,e=t[0],n=t[1],i=t[2],s=t[3],o=t[4],a=t[5],l=t[6],c=t[7],u=t[8];return e*o*u-e*a*c-n*s*u+n*a*l+i*s*c-i*o*l}invert(){const t=this.elements,e=t[0],n=t[1],i=t[2],s=t[3],o=t[4],a=t[5],l=t[6],c=t[7],u=t[8],h=u*o-a*c,f=a*l-u*s,d=c*s-o*l,g=e*h+n*f+i*d;if(g===0)return this.set(0,0,0,0,0,0,0,0,0);const _=1/g;return t[0]=h*_,t[1]=(i*c-u*n)*_,t[2]=(a*n-i*o)*_,t[3]=f*_,t[4]=(u*e-i*l)*_,t[5]=(i*s-a*e)*_,t[6]=d*_,t[7]=(n*l-c*e)*_,t[8]=(o*e-n*s)*_,this}transpose(){let t;const e=this.elements;return t=e[1],e[1]=e[3],e[3]=t,t=e[2],e[2]=e[6],e[6]=t,t=e[5],e[5]=e[7],e[7]=t,this}getNormalMatrix(t){return this.setFromMatrix4(t).invert().transpose()}transposeIntoArray(t){const e=this.elements;return t[0]=e[0],t[1]=e[3],t[2]=e[6],t[3]=e[1],t[4]=e[4],t[5]=e[7],t[6]=e[2],t[7]=e[5],t[8]=e[8],this}setUvTransform(t,e,n,i,s,o,a){const l=Math.cos(s),c=Math.sin(s);return this.set(n*l,n*c,-n*(l*o+c*a)+o+t,-i*c,i*l,-i*(-c*o+l*a)+a+e,0,0,1),this}scale(t,e){return this.premultiply(ya.makeScale(t,e)),this}rotate(t){return this.premultiply(ya.makeRotation(-t)),this}translate(t,e){return this.premultiply(ya.makeTranslation(t,e)),this}makeTranslation(t,e){return t.isVector2?this.set(1,0,t.x,0,1,t.y,0,0,1):this.set(1,0,t,0,1,e,0,0,1),this}makeRotation(t){const e=Math.cos(t),n=Math.sin(t);return this.set(e,-n,0,n,e,0,0,0,1),this}makeScale(t,e){return this.set(t,0,0,0,e,0,0,0,1),this}equals(t){const e=this.elements,n=t.elements;for(let i=0;i<9;i++)if(e[i]!==n[i])return!1;return!0}fromArray(t,e=0){for(let n=0;n<9;n++)this.elements[n]=t[n+e];return this}toArray(t=[],e=0){const n=this.elements;return t[e]=n[0],t[e+1]=n[1],t[e+2]=n[2],t[e+3]=n[3],t[e+4]=n[4],t[e+5]=n[5],t[e+6]=n[6],t[e+7]=n[7],t[e+8]=n[8],t}clone(){return new this.constructor().fromArray(this.elements)}}const ya=new zt;function kl(r){for(let t=r.length-1;t>=0;--t)if(r[t]>=65535)return!0;return!1}function Ls(r){return document.createElementNS("http://www.w3.org/1999/xhtml",r)}function k2(){const r=Ls("canvas");return r.style.display="block",r}const o1={};function Ss(r){r in o1||(o1[r]=!0,console.warn(r))}function Gr(r){return r<.04045?r*.0773993808:Math.pow(r*.9478672986+.0521327014,2.4)}function Ma(r){return r<.0031308?r*12.92:1.055*Math.pow(r,.41666)-.055}const G2=new zt().fromArray([.8224621,.0331941,.0170827,.177538,.9668058,.0723974,-1e-7,1e-7,.9105199]),H2=new zt().fromArray([1.2249401,-.0420569,-.0196376,-.2249404,1.0420571,-.0786361,1e-7,0,1.0982735]);function V2(r){return r.convertSRGBToLinear().applyMatrix3(H2)}function W2(r){return r.applyMatrix3(G2).convertLinearToSRGB()}const X2={[Hn]:r=>r,[ae]:r=>r.convertSRGBToLinear(),[Qo]:V2},q2={[Hn]:r=>r,[ae]:r=>r.convertLinearToSRGB(),[Qo]:W2},Rn={enabled:!0,get legacyMode(){return console.warn("THREE.ColorManagement: .legacyMode=false renamed to .enabled=true in r150."),!this.enabled},set legacyMode(r){console.warn("THREE.ColorManagement: .legacyMode=false renamed to .enabled=true in r150."),this.enabled=!r},get workingColorSpace(){return Hn},set workingColorSpace(r){console.warn("THREE.ColorManagement: .workingColorSpace is readonly.")},convert:function(r,t,e){if(this.enabled===!1||t===e||!t||!e)return r;const n=X2[t],i=q2[e];if(n===void 0||i===void 0)throw new Error(`Unsupported color space conversion, "${t}" to "${e}".`);return i(n(r))},fromWorkingColorSpace:function(r,t){return this.convert(r,this.workingColorSpace,t)},toWorkingColorSpace:function(r,t){return this.convert(r,t,this.workingColorSpace)}};let fr;class Gl{static getDataURL(t){if(/^data:/i.test(t.src)||typeof HTMLCanvasElement>"u")return t.src;let e;if(t instanceof HTMLCanvasElement)e=t;else{fr===void 0&&(fr=Ls("canvas")),fr.width=t.width,fr.height=t.height;const n=fr.getContext("2d");t instanceof ImageData?n.putImageData(t,0,0):n.drawImage(t,0,0,t.width,t.height),e=fr}return e.width>2048||e.height>2048?(console.warn("THREE.ImageUtils.getDataURL: Image converted to jpg for performance reasons",t),e.toDataURL("image/jpeg",.6)):e.toDataURL("image/png")}static sRGBToLinear(t){if(typeof HTMLImageElement<"u"&&t instanceof HTMLImageElement||typeof HTMLCanvasElement<"u"&&t instanceof HTMLCanvasElement||typeof ImageBitmap<"u"&&t instanceof ImageBitmap){const e=Ls("canvas");e.width=t.width,e.height=t.height;const n=e.getContext("2d");n.drawImage(t,0,0,t.width,t.height);const i=n.getImageData(0,0,t.width,t.height),s=i.data;for(let o=0;o<s.length;o++)s[o]=Gr(s[o]/255)*255;return n.putImageData(i,0,0),e}else if(t.data){const e=t.data.slice(0);for(let n=0;n<e.length;n++)e instanceof Uint8Array||e instanceof Uint8ClampedArray?e[n]=Math.floor(Gr(e[n]/255)*255):e[n]=Gr(e[n]);return{data:e,width:t.width,height:t.height}}else return console.warn("THREE.ImageUtils.sRGBToLinear(): Unsupported image type. No color space conversion applied."),t}}let Y2=0;class Hl{constructor(t=null){this.isSource=!0,Object.defineProperty(this,"id",{value:Y2++}),this.uuid=ar(),this.data=t,this.version=0}set needsUpdate(t){t===!0&&this.version++}toJSON(t){const e=t===void 0||typeof t=="string";if(!e&&t.images[this.uuid]!==void 0)return t.images[this.uuid];const n={uuid:this.uuid,url:""},i=this.data;if(i!==null){let s;if(Array.isArray(i)){s=[];for(let o=0,a=i.length;o<a;o++)i[o].isDataTexture?s.push(Sa(i[o].image)):s.push(Sa(i[o]))}else s=Sa(i);n.url=s}return e||(t.images[this.uuid]=n),n}}function Sa(r){return typeof HTMLImageElement<"u"&&r instanceof HTMLImageElement||typeof HTMLCanvasElement<"u"&&r instanceof HTMLCanvasElement||typeof ImageBitmap<"u"&&r instanceof ImageBitmap?Gl.getDataURL(r):r.data?{data:Array.from(r.data),width:r.width,height:r.height,type:r.data.constructor.name}:(console.warn("THREE.Texture: Unable to serialize Texture."),{})}let j2=0;class tn extends or{constructor(t=tn.DEFAULT_IMAGE,e=tn.DEFAULT_MAPPING,n=Un,i=Un,s=yn,o=Rs,a=In,l=Ti,c=tn.DEFAULT_ANISOTROPY,u=Yi){super(),this.isTexture=!0,Object.defineProperty(this,"id",{value:j2++}),this.uuid=ar(),this.name="",this.source=new Hl(t),this.mipmaps=[],this.mapping=e,this.channel=0,this.wrapS=n,this.wrapT=i,this.magFilter=s,this.minFilter=o,this.anisotropy=c,this.format=a,this.internalFormat=null,this.type=l,this.offset=new it(0,0),this.repeat=new it(1,1),this.center=new it(0,0),this.rotation=0,this.matrixAutoUpdate=!0,this.matrix=new zt,this.generateMipmaps=!0,this.premultiplyAlpha=!1,this.flipY=!0,this.unpackAlignment=4,typeof u=="string"?this.colorSpace=u:(Ss("THREE.Texture: Property .encoding has been replaced by .colorSpace."),this.colorSpace=u===qi?ae:Yi),this.userData={},this.version=0,this.onUpdate=null,this.isRenderTargetTexture=!1,this.needsPMREMUpdate=!1}get image(){return this.source.data}set image(t=null){this.source.data=t}updateMatrix(){this.matrix.setUvTransform(this.offset.x,this.offset.y,this.repeat.x,this.repeat.y,this.rotation,this.center.x,this.center.y)}clone(){return new this.constructor().copy(this)}copy(t){return this.name=t.name,this.source=t.source,this.mipmaps=t.mipmaps.slice(0),this.mapping=t.mapping,this.channel=t.channel,this.wrapS=t.wrapS,this.wrapT=t.wrapT,this.magFilter=t.magFilter,this.minFilter=t.minFilter,this.anisotropy=t.anisotropy,this.format=t.format,this.internalFormat=t.internalFormat,this.type=t.type,this.offset.copy(t.offset),this.repeat.copy(t.repeat),this.center.copy(t.center),this.rotation=t.rotation,this.matrixAutoUpdate=t.matrixAutoUpdate,this.matrix.copy(t.matrix),this.generateMipmaps=t.generateMipmaps,this.premultiplyAlpha=t.premultiplyAlpha,this.flipY=t.flipY,this.unpackAlignment=t.unpackAlignment,this.colorSpace=t.colorSpace,this.userData=JSON.parse(JSON.stringify(t.userData)),this.needsUpdate=!0,this}toJSON(t){const e=t===void 0||typeof t=="string";if(!e&&t.textures[this.uuid]!==void 0)return t.textures[this.uuid];const n={metadata:{version:4.6,type:"Texture",generator:"Texture.toJSON"},uuid:this.uuid,name:this.name,image:this.source.toJSON(t).uuid,mapping:this.mapping,channel:this.channel,repeat:[this.repeat.x,this.repeat.y],offset:[this.offset.x,this.offset.y],center:[this.center.x,this.center.y],rotation:this.rotation,wrap:[this.wrapS,this.wrapT],format:this.format,internalFormat:this.internalFormat,type:this.type,colorSpace:this.colorSpace,minFilter:this.minFilter,magFilter:this.magFilter,anisotropy:this.anisotropy,flipY:this.flipY,generateMipmaps:this.generateMipmaps,premultiplyAlpha:this.premultiplyAlpha,unpackAlignment:this.unpackAlignment};return Object.keys(this.userData).length>0&&(n.userData=this.userData),e||(t.textures[this.uuid]=n),n}dispose(){this.dispatchEvent({type:"dispose"})}transformUv(t){if(this.mapping!==Dl)return t;if(t.applyMatrix3(this.matrix),t.x<0||t.x>1)switch(this.wrapS){case h0:t.x=t.x-Math.floor(t.x);break;case Un:t.x=t.x<0?0:1;break;case f0:Math.abs(Math.floor(t.x)%2)===1?t.x=Math.ceil(t.x)-t.x:t.x=t.x-Math.floor(t.x);break}if(t.y<0||t.y>1)switch(this.wrapT){case h0:t.y=t.y-Math.floor(t.y);break;case Un:t.y=t.y<0?0:1;break;case f0:Math.abs(Math.floor(t.y)%2)===1?t.y=Math.ceil(t.y)-t.y:t.y=t.y-Math.floor(t.y);break}return this.flipY&&(t.y=1-t.y),t}set needsUpdate(t){t===!0&&(this.version++,this.source.needsUpdate=!0)}get encoding(){return Ss("THREE.Texture: Property .encoding has been replaced by .colorSpace."),this.colorSpace===ae?qi:Bl}set encoding(t){Ss("THREE.Texture: Property .encoding has been replaced by .colorSpace."),this.colorSpace=t===qi?ae:Yi}}tn.DEFAULT_IMAGE=null;tn.DEFAULT_MAPPING=Dl;tn.DEFAULT_ANISOTROPY=1;class Ue{constructor(t=0,e=0,n=0,i=1){Ue.prototype.isVector4=!0,this.x=t,this.y=e,this.z=n,this.w=i}get width(){return this.z}set width(t){this.z=t}get height(){return this.w}set height(t){this.w=t}set(t,e,n,i){return this.x=t,this.y=e,this.z=n,this.w=i,this}setScalar(t){return this.x=t,this.y=t,this.z=t,this.w=t,this}setX(t){return this.x=t,this}setY(t){return this.y=t,this}setZ(t){return this.z=t,this}setW(t){return this.w=t,this}setComponent(t,e){switch(t){case 0:this.x=e;break;case 1:this.y=e;break;case 2:this.z=e;break;case 3:this.w=e;break;default:throw new Error("index is out of range: "+t)}return this}getComponent(t){switch(t){case 0:return this.x;case 1:return this.y;case 2:return this.z;case 3:return this.w;default:throw new Error("index is out of range: "+t)}}clone(){return new this.constructor(this.x,this.y,this.z,this.w)}copy(t){return this.x=t.x,this.y=t.y,this.z=t.z,this.w=t.w!==void 0?t.w:1,this}add(t){return this.x+=t.x,this.y+=t.y,this.z+=t.z,this.w+=t.w,this}addScalar(t){return this.x+=t,this.y+=t,this.z+=t,this.w+=t,this}addVectors(t,e){return this.x=t.x+e.x,this.y=t.y+e.y,this.z=t.z+e.z,this.w=t.w+e.w,this}addScaledVector(t,e){return this.x+=t.x*e,this.y+=t.y*e,this.z+=t.z*e,this.w+=t.w*e,this}sub(t){return this.x-=t.x,this.y-=t.y,this.z-=t.z,this.w-=t.w,this}subScalar(t){return this.x-=t,this.y-=t,this.z-=t,this.w-=t,this}subVectors(t,e){return this.x=t.x-e.x,this.y=t.y-e.y,this.z=t.z-e.z,this.w=t.w-e.w,this}multiply(t){return this.x*=t.x,this.y*=t.y,this.z*=t.z,this.w*=t.w,this}multiplyScalar(t){return this.x*=t,this.y*=t,this.z*=t,this.w*=t,this}applyMatrix4(t){const e=this.x,n=this.y,i=this.z,s=this.w,o=t.elements;return this.x=o[0]*e+o[4]*n+o[8]*i+o[12]*s,this.y=o[1]*e+o[5]*n+o[9]*i+o[13]*s,this.z=o[2]*e+o[6]*n+o[10]*i+o[14]*s,this.w=o[3]*e+o[7]*n+o[11]*i+o[15]*s,this}divideScalar(t){return this.multiplyScalar(1/t)}setAxisAngleFromQuaternion(t){this.w=2*Math.acos(t.w);const e=Math.sqrt(1-t.w*t.w);return e<1e-4?(this.x=1,this.y=0,this.z=0):(this.x=t.x/e,this.y=t.y/e,this.z=t.z/e),this}setAxisAngleFromRotationMatrix(t){let e,n,i,s;const l=t.elements,c=l[0],u=l[4],h=l[8],f=l[1],d=l[5],g=l[9],_=l[2],m=l[6],p=l[10];if(Math.abs(u-f)<.01&&Math.abs(h-_)<.01&&Math.abs(g-m)<.01){if(Math.abs(u+f)<.1&&Math.abs(h+_)<.1&&Math.abs(g+m)<.1&&Math.abs(c+d+p-3)<.1)return this.set(1,0,0,0),this;e=Math.PI;const v=(c+1)/2,x=(d+1)/2,S=(p+1)/2,T=(u+f)/4,E=(h+_)/4,A=(g+m)/4;return v>x&&v>S?v<.01?(n=0,i=.707106781,s=.707106781):(n=Math.sqrt(v),i=T/n,s=E/n):x>S?x<.01?(n=.707106781,i=0,s=.707106781):(i=Math.sqrt(x),n=T/i,s=A/i):S<.01?(n=.707106781,i=.707106781,s=0):(s=Math.sqrt(S),n=E/s,i=A/s),this.set(n,i,s,e),this}let M=Math.sqrt((m-g)*(m-g)+(h-_)*(h-_)+(f-u)*(f-u));return Math.abs(M)<.001&&(M=1),this.x=(m-g)/M,this.y=(h-_)/M,this.z=(f-u)/M,this.w=Math.acos((c+d+p-1)/2),this}min(t){return this.x=Math.min(this.x,t.x),this.y=Math.min(this.y,t.y),this.z=Math.min(this.z,t.z),this.w=Math.min(this.w,t.w),this}max(t){return this.x=Math.max(this.x,t.x),this.y=Math.max(this.y,t.y),this.z=Math.max(this.z,t.z),this.w=Math.max(this.w,t.w),this}clamp(t,e){return this.x=Math.max(t.x,Math.min(e.x,this.x)),this.y=Math.max(t.y,Math.min(e.y,this.y)),this.z=Math.max(t.z,Math.min(e.z,this.z)),this.w=Math.max(t.w,Math.min(e.w,this.w)),this}clampScalar(t,e){return this.x=Math.max(t,Math.min(e,this.x)),this.y=Math.max(t,Math.min(e,this.y)),this.z=Math.max(t,Math.min(e,this.z)),this.w=Math.max(t,Math.min(e,this.w)),this}clampLength(t,e){const n=this.length();return this.divideScalar(n||1).multiplyScalar(Math.max(t,Math.min(e,n)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this.w=Math.floor(this.w),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this.w=Math.ceil(this.w),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this.w=Math.round(this.w),this}roundToZero(){return this.x=Math.trunc(this.x),this.y=Math.trunc(this.y),this.z=Math.trunc(this.z),this.w=Math.trunc(this.w),this}negate(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this.w=-this.w,this}dot(t){return this.x*t.x+this.y*t.y+this.z*t.z+this.w*t.w}lengthSq(){return this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w}length(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)+Math.abs(this.w)}normalize(){return this.divideScalar(this.length()||1)}setLength(t){return this.normalize().multiplyScalar(t)}lerp(t,e){return this.x+=(t.x-this.x)*e,this.y+=(t.y-this.y)*e,this.z+=(t.z-this.z)*e,this.w+=(t.w-this.w)*e,this}lerpVectors(t,e,n){return this.x=t.x+(e.x-t.x)*n,this.y=t.y+(e.y-t.y)*n,this.z=t.z+(e.z-t.z)*n,this.w=t.w+(e.w-t.w)*n,this}equals(t){return t.x===this.x&&t.y===this.y&&t.z===this.z&&t.w===this.w}fromArray(t,e=0){return this.x=t[e],this.y=t[e+1],this.z=t[e+2],this.w=t[e+3],this}toArray(t=[],e=0){return t[e]=this.x,t[e+1]=this.y,t[e+2]=this.z,t[e+3]=this.w,t}fromBufferAttribute(t,e){return this.x=t.getX(e),this.y=t.getY(e),this.z=t.getZ(e),this.w=t.getW(e),this}random(){return this.x=Math.random(),this.y=Math.random(),this.z=Math.random(),this.w=Math.random(),this}*[Symbol.iterator](){yield this.x,yield this.y,yield this.z,yield this.w}}class Z2 extends or{constructor(t=1,e=1,n={}){super(),this.isRenderTarget=!0,this.width=t,this.height=e,this.depth=1,this.scissor=new Ue(0,0,t,e),this.scissorTest=!1,this.viewport=new Ue(0,0,t,e);const i={width:t,height:e,depth:1};n.encoding!==void 0&&(Ss("THREE.WebGLRenderTarget: option.encoding has been replaced by option.colorSpace."),n.colorSpace=n.encoding===qi?ae:Yi),this.texture=new tn(i,n.mapping,n.wrapS,n.wrapT,n.magFilter,n.minFilter,n.format,n.type,n.anisotropy,n.colorSpace),this.texture.isRenderTargetTexture=!0,this.texture.flipY=!1,this.texture.generateMipmaps=n.generateMipmaps!==void 0?n.generateMipmaps:!1,this.texture.internalFormat=n.internalFormat!==void 0?n.internalFormat:null,this.texture.minFilter=n.minFilter!==void 0?n.minFilter:yn,this.depthBuffer=n.depthBuffer!==void 0?n.depthBuffer:!0,this.stencilBuffer=n.stencilBuffer!==void 0?n.stencilBuffer:!1,this.depthTexture=n.depthTexture!==void 0?n.depthTexture:null,this.samples=n.samples!==void 0?n.samples:0}setSize(t,e,n=1){(this.width!==t||this.height!==e||this.depth!==n)&&(this.width=t,this.height=e,this.depth=n,this.texture.image.width=t,this.texture.image.height=e,this.texture.image.depth=n,this.dispose()),this.viewport.set(0,0,t,e),this.scissor.set(0,0,t,e)}clone(){return new this.constructor().copy(this)}copy(t){this.width=t.width,this.height=t.height,this.depth=t.depth,this.scissor.copy(t.scissor),this.scissorTest=t.scissorTest,this.viewport.copy(t.viewport),this.texture=t.texture.clone(),this.texture.isRenderTargetTexture=!0;const e=Object.assign({},t.texture.image);return this.texture.source=new Hl(e),this.depthBuffer=t.depthBuffer,this.stencilBuffer=t.stencilBuffer,t.depthTexture!==null&&(this.depthTexture=t.depthTexture.clone()),this.samples=t.samples,this}dispose(){this.dispatchEvent({type:"dispose"})}}class tr extends Z2{constructor(t=1,e=1,n={}){super(t,e,n),this.isWebGLRenderTarget=!0}}class Vl extends tn{constructor(t=null,e=1,n=1,i=1){super(null),this.isDataArrayTexture=!0,this.image={data:t,width:e,height:n,depth:i},this.magFilter=Ze,this.minFilter=Ze,this.wrapR=Un,this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1}}class K2 extends tn{constructor(t=null,e=1,n=1,i=1){super(null),this.isData3DTexture=!0,this.image={data:t,width:e,height:n,depth:i},this.magFilter=Ze,this.minFilter=Ze,this.wrapR=Un,this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1}}class er{constructor(t=0,e=0,n=0,i=1){this.isQuaternion=!0,this._x=t,this._y=e,this._z=n,this._w=i}static slerpFlat(t,e,n,i,s,o,a){let l=n[i+0],c=n[i+1],u=n[i+2],h=n[i+3];const f=s[o+0],d=s[o+1],g=s[o+2],_=s[o+3];if(a===0){t[e+0]=l,t[e+1]=c,t[e+2]=u,t[e+3]=h;return}if(a===1){t[e+0]=f,t[e+1]=d,t[e+2]=g,t[e+3]=_;return}if(h!==_||l!==f||c!==d||u!==g){let m=1-a;const p=l*f+c*d+u*g+h*_,M=p>=0?1:-1,v=1-p*p;if(v>Number.EPSILON){const S=Math.sqrt(v),T=Math.atan2(S,p*M);m=Math.sin(m*T)/S,a=Math.sin(a*T)/S}const x=a*M;if(l=l*m+f*x,c=c*m+d*x,u=u*m+g*x,h=h*m+_*x,m===1-a){const S=1/Math.sqrt(l*l+c*c+u*u+h*h);l*=S,c*=S,u*=S,h*=S}}t[e]=l,t[e+1]=c,t[e+2]=u,t[e+3]=h}static multiplyQuaternionsFlat(t,e,n,i,s,o){const a=n[i],l=n[i+1],c=n[i+2],u=n[i+3],h=s[o],f=s[o+1],d=s[o+2],g=s[o+3];return t[e]=a*g+u*h+l*d-c*f,t[e+1]=l*g+u*f+c*h-a*d,t[e+2]=c*g+u*d+a*f-l*h,t[e+3]=u*g-a*h-l*f-c*d,t}get x(){return this._x}set x(t){this._x=t,this._onChangeCallback()}get y(){return this._y}set y(t){this._y=t,this._onChangeCallback()}get z(){return this._z}set z(t){this._z=t,this._onChangeCallback()}get w(){return this._w}set w(t){this._w=t,this._onChangeCallback()}set(t,e,n,i){return this._x=t,this._y=e,this._z=n,this._w=i,this._onChangeCallback(),this}clone(){return new this.constructor(this._x,this._y,this._z,this._w)}copy(t){return this._x=t.x,this._y=t.y,this._z=t.z,this._w=t.w,this._onChangeCallback(),this}setFromEuler(t,e){const n=t._x,i=t._y,s=t._z,o=t._order,a=Math.cos,l=Math.sin,c=a(n/2),u=a(i/2),h=a(s/2),f=l(n/2),d=l(i/2),g=l(s/2);switch(o){case"XYZ":this._x=f*u*h+c*d*g,this._y=c*d*h-f*u*g,this._z=c*u*g+f*d*h,this._w=c*u*h-f*d*g;break;case"YXZ":this._x=f*u*h+c*d*g,this._y=c*d*h-f*u*g,this._z=c*u*g-f*d*h,this._w=c*u*h+f*d*g;break;case"ZXY":this._x=f*u*h-c*d*g,this._y=c*d*h+f*u*g,this._z=c*u*g+f*d*h,this._w=c*u*h-f*d*g;break;case"ZYX":this._x=f*u*h-c*d*g,this._y=c*d*h+f*u*g,this._z=c*u*g-f*d*h,this._w=c*u*h+f*d*g;break;case"YZX":this._x=f*u*h+c*d*g,this._y=c*d*h+f*u*g,this._z=c*u*g-f*d*h,this._w=c*u*h-f*d*g;break;case"XZY":this._x=f*u*h-c*d*g,this._y=c*d*h-f*u*g,this._z=c*u*g+f*d*h,this._w=c*u*h+f*d*g;break;default:console.warn("THREE.Quaternion: .setFromEuler() encountered an unknown order: "+o)}return e!==!1&&this._onChangeCallback(),this}setFromAxisAngle(t,e){const n=e/2,i=Math.sin(n);return this._x=t.x*i,this._y=t.y*i,this._z=t.z*i,this._w=Math.cos(n),this._onChangeCallback(),this}setFromRotationMatrix(t){const e=t.elements,n=e[0],i=e[4],s=e[8],o=e[1],a=e[5],l=e[9],c=e[2],u=e[6],h=e[10],f=n+a+h;if(f>0){const d=.5/Math.sqrt(f+1);this._w=.25/d,this._x=(u-l)*d,this._y=(s-c)*d,this._z=(o-i)*d}else if(n>a&&n>h){const d=2*Math.sqrt(1+n-a-h);this._w=(u-l)/d,this._x=.25*d,this._y=(i+o)/d,this._z=(s+c)/d}else if(a>h){const d=2*Math.sqrt(1+a-n-h);this._w=(s-c)/d,this._x=(i+o)/d,this._y=.25*d,this._z=(l+u)/d}else{const d=2*Math.sqrt(1+h-n-a);this._w=(o-i)/d,this._x=(s+c)/d,this._y=(l+u)/d,this._z=.25*d}return this._onChangeCallback(),this}setFromUnitVectors(t,e){let n=t.dot(e)+1;return n<Number.EPSILON?(n=0,Math.abs(t.x)>Math.abs(t.z)?(this._x=-t.y,this._y=t.x,this._z=0,this._w=n):(this._x=0,this._y=-t.z,this._z=t.y,this._w=n)):(this._x=t.y*e.z-t.z*e.y,this._y=t.z*e.x-t.x*e.z,this._z=t.x*e.y-t.y*e.x,this._w=n),this.normalize()}angleTo(t){return 2*Math.acos(Math.abs(De(this.dot(t),-1,1)))}rotateTowards(t,e){const n=this.angleTo(t);if(n===0)return this;const i=Math.min(1,e/n);return this.slerp(t,i),this}identity(){return this.set(0,0,0,1)}invert(){return this.conjugate()}conjugate(){return this._x*=-1,this._y*=-1,this._z*=-1,this._onChangeCallback(),this}dot(t){return this._x*t._x+this._y*t._y+this._z*t._z+this._w*t._w}lengthSq(){return this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w}length(){return Math.sqrt(this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w)}normalize(){let t=this.length();return t===0?(this._x=0,this._y=0,this._z=0,this._w=1):(t=1/t,this._x=this._x*t,this._y=this._y*t,this._z=this._z*t,this._w=this._w*t),this._onChangeCallback(),this}multiply(t){return this.multiplyQuaternions(this,t)}premultiply(t){return this.multiplyQuaternions(t,this)}multiplyQuaternions(t,e){const n=t._x,i=t._y,s=t._z,o=t._w,a=e._x,l=e._y,c=e._z,u=e._w;return this._x=n*u+o*a+i*c-s*l,this._y=i*u+o*l+s*a-n*c,this._z=s*u+o*c+n*l-i*a,this._w=o*u-n*a-i*l-s*c,this._onChangeCallback(),this}slerp(t,e){if(e===0)return this;if(e===1)return this.copy(t);const n=this._x,i=this._y,s=this._z,o=this._w;let a=o*t._w+n*t._x+i*t._y+s*t._z;if(a<0?(this._w=-t._w,this._x=-t._x,this._y=-t._y,this._z=-t._z,a=-a):this.copy(t),a>=1)return this._w=o,this._x=n,this._y=i,this._z=s,this;const l=1-a*a;if(l<=Number.EPSILON){const d=1-e;return this._w=d*o+e*this._w,this._x=d*n+e*this._x,this._y=d*i+e*this._y,this._z=d*s+e*this._z,this.normalize(),this._onChangeCallback(),this}const c=Math.sqrt(l),u=Math.atan2(c,a),h=Math.sin((1-e)*u)/c,f=Math.sin(e*u)/c;return this._w=o*h+this._w*f,this._x=n*h+this._x*f,this._y=i*h+this._y*f,this._z=s*h+this._z*f,this._onChangeCallback(),this}slerpQuaternions(t,e,n){return this.copy(t).slerp(e,n)}random(){const t=Math.random(),e=Math.sqrt(1-t),n=Math.sqrt(t),i=2*Math.PI*Math.random(),s=2*Math.PI*Math.random();return this.set(e*Math.cos(i),n*Math.sin(s),n*Math.cos(s),e*Math.sin(i))}equals(t){return t._x===this._x&&t._y===this._y&&t._z===this._z&&t._w===this._w}fromArray(t,e=0){return this._x=t[e],this._y=t[e+1],this._z=t[e+2],this._w=t[e+3],this._onChangeCallback(),this}toArray(t=[],e=0){return t[e]=this._x,t[e+1]=this._y,t[e+2]=this._z,t[e+3]=this._w,t}fromBufferAttribute(t,e){return this._x=t.getX(e),this._y=t.getY(e),this._z=t.getZ(e),this._w=t.getW(e),this}toJSON(){return this.toArray()}_onChange(t){return this._onChangeCallback=t,this}_onChangeCallback(){}*[Symbol.iterator](){yield this._x,yield this._y,yield this._z,yield this._w}}class P{constructor(t=0,e=0,n=0){P.prototype.isVector3=!0,this.x=t,this.y=e,this.z=n}set(t,e,n){return n===void 0&&(n=this.z),this.x=t,this.y=e,this.z=n,this}setScalar(t){return this.x=t,this.y=t,this.z=t,this}setX(t){return this.x=t,this}setY(t){return this.y=t,this}setZ(t){return this.z=t,this}setComponent(t,e){switch(t){case 0:this.x=e;break;case 1:this.y=e;break;case 2:this.z=e;break;default:throw new Error("index is out of range: "+t)}return this}getComponent(t){switch(t){case 0:return this.x;case 1:return this.y;case 2:return this.z;default:throw new Error("index is out of range: "+t)}}clone(){return new this.constructor(this.x,this.y,this.z)}copy(t){return this.x=t.x,this.y=t.y,this.z=t.z,this}add(t){return this.x+=t.x,this.y+=t.y,this.z+=t.z,this}addScalar(t){return this.x+=t,this.y+=t,this.z+=t,this}addVectors(t,e){return this.x=t.x+e.x,this.y=t.y+e.y,this.z=t.z+e.z,this}addScaledVector(t,e){return this.x+=t.x*e,this.y+=t.y*e,this.z+=t.z*e,this}sub(t){return this.x-=t.x,this.y-=t.y,this.z-=t.z,this}subScalar(t){return this.x-=t,this.y-=t,this.z-=t,this}subVectors(t,e){return this.x=t.x-e.x,this.y=t.y-e.y,this.z=t.z-e.z,this}multiply(t){return this.x*=t.x,this.y*=t.y,this.z*=t.z,this}multiplyScalar(t){return this.x*=t,this.y*=t,this.z*=t,this}multiplyVectors(t,e){return this.x=t.x*e.x,this.y=t.y*e.y,this.z=t.z*e.z,this}applyEuler(t){return this.applyQuaternion(a1.setFromEuler(t))}applyAxisAngle(t,e){return this.applyQuaternion(a1.setFromAxisAngle(t,e))}applyMatrix3(t){const e=this.x,n=this.y,i=this.z,s=t.elements;return this.x=s[0]*e+s[3]*n+s[6]*i,this.y=s[1]*e+s[4]*n+s[7]*i,this.z=s[2]*e+s[5]*n+s[8]*i,this}applyNormalMatrix(t){return this.applyMatrix3(t).normalize()}applyMatrix4(t){const e=this.x,n=this.y,i=this.z,s=t.elements,o=1/(s[3]*e+s[7]*n+s[11]*i+s[15]);return this.x=(s[0]*e+s[4]*n+s[8]*i+s[12])*o,this.y=(s[1]*e+s[5]*n+s[9]*i+s[13])*o,this.z=(s[2]*e+s[6]*n+s[10]*i+s[14])*o,this}applyQuaternion(t){const e=this.x,n=this.y,i=this.z,s=t.x,o=t.y,a=t.z,l=t.w,c=l*e+o*i-a*n,u=l*n+a*e-s*i,h=l*i+s*n-o*e,f=-s*e-o*n-a*i;return this.x=c*l+f*-s+u*-a-h*-o,this.y=u*l+f*-o+h*-s-c*-a,this.z=h*l+f*-a+c*-o-u*-s,this}project(t){return this.applyMatrix4(t.matrixWorldInverse).applyMatrix4(t.projectionMatrix)}unproject(t){return this.applyMatrix4(t.projectionMatrixInverse).applyMatrix4(t.matrixWorld)}transformDirection(t){const e=this.x,n=this.y,i=this.z,s=t.elements;return this.x=s[0]*e+s[4]*n+s[8]*i,this.y=s[1]*e+s[5]*n+s[9]*i,this.z=s[2]*e+s[6]*n+s[10]*i,this.normalize()}divide(t){return this.x/=t.x,this.y/=t.y,this.z/=t.z,this}divideScalar(t){return this.multiplyScalar(1/t)}min(t){return this.x=Math.min(this.x,t.x),this.y=Math.min(this.y,t.y),this.z=Math.min(this.z,t.z),this}max(t){return this.x=Math.max(this.x,t.x),this.y=Math.max(this.y,t.y),this.z=Math.max(this.z,t.z),this}clamp(t,e){return this.x=Math.max(t.x,Math.min(e.x,this.x)),this.y=Math.max(t.y,Math.min(e.y,this.y)),this.z=Math.max(t.z,Math.min(e.z,this.z)),this}clampScalar(t,e){return this.x=Math.max(t,Math.min(e,this.x)),this.y=Math.max(t,Math.min(e,this.y)),this.z=Math.max(t,Math.min(e,this.z)),this}clampLength(t,e){const n=this.length();return this.divideScalar(n||1).multiplyScalar(Math.max(t,Math.min(e,n)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this}roundToZero(){return this.x=Math.trunc(this.x),this.y=Math.trunc(this.y),this.z=Math.trunc(this.z),this}negate(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this}dot(t){return this.x*t.x+this.y*t.y+this.z*t.z}lengthSq(){return this.x*this.x+this.y*this.y+this.z*this.z}length(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)}normalize(){return this.divideScalar(this.length()||1)}setLength(t){return this.normalize().multiplyScalar(t)}lerp(t,e){return this.x+=(t.x-this.x)*e,this.y+=(t.y-this.y)*e,this.z+=(t.z-this.z)*e,this}lerpVectors(t,e,n){return this.x=t.x+(e.x-t.x)*n,this.y=t.y+(e.y-t.y)*n,this.z=t.z+(e.z-t.z)*n,this}cross(t){return this.crossVectors(this,t)}crossVectors(t,e){const n=t.x,i=t.y,s=t.z,o=e.x,a=e.y,l=e.z;return this.x=i*l-s*a,this.y=s*o-n*l,this.z=n*a-i*o,this}projectOnVector(t){const e=t.lengthSq();if(e===0)return this.set(0,0,0);const n=t.dot(this)/e;return this.copy(t).multiplyScalar(n)}projectOnPlane(t){return Ea.copy(this).projectOnVector(t),this.sub(Ea)}reflect(t){return this.sub(Ea.copy(t).multiplyScalar(2*this.dot(t)))}angleTo(t){const e=Math.sqrt(this.lengthSq()*t.lengthSq());if(e===0)return Math.PI/2;const n=this.dot(t)/e;return Math.acos(De(n,-1,1))}distanceTo(t){return Math.sqrt(this.distanceToSquared(t))}distanceToSquared(t){const e=this.x-t.x,n=this.y-t.y,i=this.z-t.z;return e*e+n*n+i*i}manhattanDistanceTo(t){return Math.abs(this.x-t.x)+Math.abs(this.y-t.y)+Math.abs(this.z-t.z)}setFromSpherical(t){return this.setFromSphericalCoords(t.radius,t.phi,t.theta)}setFromSphericalCoords(t,e,n){const i=Math.sin(e)*t;return this.x=i*Math.sin(n),this.y=Math.cos(e)*t,this.z=i*Math.cos(n),this}setFromCylindrical(t){return this.setFromCylindricalCoords(t.radius,t.theta,t.y)}setFromCylindricalCoords(t,e,n){return this.x=t*Math.sin(e),this.y=n,this.z=t*Math.cos(e),this}setFromMatrixPosition(t){const e=t.elements;return this.x=e[12],this.y=e[13],this.z=e[14],this}setFromMatrixScale(t){const e=this.setFromMatrixColumn(t,0).length(),n=this.setFromMatrixColumn(t,1).length(),i=this.setFromMatrixColumn(t,2).length();return this.x=e,this.y=n,this.z=i,this}setFromMatrixColumn(t,e){return this.fromArray(t.elements,e*4)}setFromMatrix3Column(t,e){return this.fromArray(t.elements,e*3)}setFromEuler(t){return this.x=t._x,this.y=t._y,this.z=t._z,this}setFromColor(t){return this.x=t.r,this.y=t.g,this.z=t.b,this}equals(t){return t.x===this.x&&t.y===this.y&&t.z===this.z}fromArray(t,e=0){return this.x=t[e],this.y=t[e+1],this.z=t[e+2],this}toArray(t=[],e=0){return t[e]=this.x,t[e+1]=this.y,t[e+2]=this.z,t}fromBufferAttribute(t,e){return this.x=t.getX(e),this.y=t.getY(e),this.z=t.getZ(e),this}random(){return this.x=Math.random(),this.y=Math.random(),this.z=Math.random(),this}randomDirection(){const t=(Math.random()-.5)*2,e=Math.random()*Math.PI*2,n=Math.sqrt(1-t**2);return this.x=n*Math.cos(e),this.y=n*Math.sin(e),this.z=t,this}*[Symbol.iterator](){yield this.x,yield this.y,yield this.z}}const Ea=new P,a1=new er;class js{constructor(t=new P(1/0,1/0,1/0),e=new P(-1/0,-1/0,-1/0)){this.isBox3=!0,this.min=t,this.max=e}set(t,e){return this.min.copy(t),this.max.copy(e),this}setFromArray(t){this.makeEmpty();for(let e=0,n=t.length;e<n;e+=3)this.expandByPoint(Zn.fromArray(t,e));return this}setFromBufferAttribute(t){this.makeEmpty();for(let e=0,n=t.count;e<n;e++)this.expandByPoint(Zn.fromBufferAttribute(t,e));return this}setFromPoints(t){this.makeEmpty();for(let e=0,n=t.length;e<n;e++)this.expandByPoint(t[e]);return this}setFromCenterAndSize(t,e){const n=Zn.copy(e).multiplyScalar(.5);return this.min.copy(t).sub(n),this.max.copy(t).add(n),this}setFromObject(t,e=!1){return this.makeEmpty(),this.expandByObject(t,e)}clone(){return new this.constructor().copy(this)}copy(t){return this.min.copy(t.min),this.max.copy(t.max),this}makeEmpty(){return this.min.x=this.min.y=this.min.z=1/0,this.max.x=this.max.y=this.max.z=-1/0,this}isEmpty(){return this.max.x<this.min.x||this.max.y<this.min.y||this.max.z<this.min.z}getCenter(t){return this.isEmpty()?t.set(0,0,0):t.addVectors(this.min,this.max).multiplyScalar(.5)}getSize(t){return this.isEmpty()?t.set(0,0,0):t.subVectors(this.max,this.min)}expandByPoint(t){return this.min.min(t),this.max.max(t),this}expandByVector(t){return this.min.sub(t),this.max.add(t),this}expandByScalar(t){return this.min.addScalar(-t),this.max.addScalar(t),this}expandByObject(t,e=!1){if(t.updateWorldMatrix(!1,!1),t.boundingBox!==void 0)t.boundingBox===null&&t.computeBoundingBox(),dr.copy(t.boundingBox),dr.applyMatrix4(t.matrixWorld),this.union(dr);else{const i=t.geometry;if(i!==void 0)if(e&&i.attributes!==void 0&&i.attributes.position!==void 0){const s=i.attributes.position;for(let o=0,a=s.count;o<a;o++)Zn.fromBufferAttribute(s,o).applyMatrix4(t.matrixWorld),this.expandByPoint(Zn)}else i.boundingBox===null&&i.computeBoundingBox(),dr.copy(i.boundingBox),dr.applyMatrix4(t.matrixWorld),this.union(dr)}const n=t.children;for(let i=0,s=n.length;i<s;i++)this.expandByObject(n[i],e);return this}containsPoint(t){return!(t.x<this.min.x||t.x>this.max.x||t.y<this.min.y||t.y>this.max.y||t.z<this.min.z||t.z>this.max.z)}containsBox(t){return this.min.x<=t.min.x&&t.max.x<=this.max.x&&this.min.y<=t.min.y&&t.max.y<=this.max.y&&this.min.z<=t.min.z&&t.max.z<=this.max.z}getParameter(t,e){return e.set((t.x-this.min.x)/(this.max.x-this.min.x),(t.y-this.min.y)/(this.max.y-this.min.y),(t.z-this.min.z)/(this.max.z-this.min.z))}intersectsBox(t){return!(t.max.x<this.min.x||t.min.x>this.max.x||t.max.y<this.min.y||t.min.y>this.max.y||t.max.z<this.min.z||t.min.z>this.max.z)}intersectsSphere(t){return this.clampPoint(t.center,Zn),Zn.distanceToSquared(t.center)<=t.radius*t.radius}intersectsPlane(t){let e,n;return t.normal.x>0?(e=t.normal.x*this.min.x,n=t.normal.x*this.max.x):(e=t.normal.x*this.max.x,n=t.normal.x*this.min.x),t.normal.y>0?(e+=t.normal.y*this.min.y,n+=t.normal.y*this.max.y):(e+=t.normal.y*this.max.y,n+=t.normal.y*this.min.y),t.normal.z>0?(e+=t.normal.z*this.min.z,n+=t.normal.z*this.max.z):(e+=t.normal.z*this.max.z,n+=t.normal.z*this.min.z),e<=-t.constant&&n>=-t.constant}intersectsTriangle(t){if(this.isEmpty())return!1;this.getCenter(cs),no.subVectors(this.max,cs),pr.subVectors(t.a,cs),mr.subVectors(t.b,cs),_r.subVectors(t.c,cs),ci.subVectors(mr,pr),ui.subVectors(_r,mr),Di.subVectors(pr,_r);let e=[0,-ci.z,ci.y,0,-ui.z,ui.y,0,-Di.z,Di.y,ci.z,0,-ci.x,ui.z,0,-ui.x,Di.z,0,-Di.x,-ci.y,ci.x,0,-ui.y,ui.x,0,-Di.y,Di.x,0];return!Ta(e,pr,mr,_r,no)||(e=[1,0,0,0,1,0,0,0,1],!Ta(e,pr,mr,_r,no))?!1:(io.crossVectors(ci,ui),e=[io.x,io.y,io.z],Ta(e,pr,mr,_r,no))}clampPoint(t,e){return e.copy(t).clamp(this.min,this.max)}distanceToPoint(t){return this.clampPoint(t,Zn).distanceTo(t)}getBoundingSphere(t){return this.isEmpty()?t.makeEmpty():(this.getCenter(t.center),t.radius=this.getSize(Zn).length()*.5),t}intersect(t){return this.min.max(t.min),this.max.min(t.max),this.isEmpty()&&this.makeEmpty(),this}union(t){return this.min.min(t.min),this.max.max(t.max),this}applyMatrix4(t){return this.isEmpty()?this:(jn[0].set(this.min.x,this.min.y,this.min.z).applyMatrix4(t),jn[1].set(this.min.x,this.min.y,this.max.z).applyMatrix4(t),jn[2].set(this.min.x,this.max.y,this.min.z).applyMatrix4(t),jn[3].set(this.min.x,this.max.y,this.max.z).applyMatrix4(t),jn[4].set(this.max.x,this.min.y,this.min.z).applyMatrix4(t),jn[5].set(this.max.x,this.min.y,this.max.z).applyMatrix4(t),jn[6].set(this.max.x,this.max.y,this.min.z).applyMatrix4(t),jn[7].set(this.max.x,this.max.y,this.max.z).applyMatrix4(t),this.setFromPoints(jn),this)}translate(t){return this.min.add(t),this.max.add(t),this}equals(t){return t.min.equals(this.min)&&t.max.equals(this.max)}}const jn=[new P,new P,new P,new P,new P,new P,new P,new P],Zn=new P,dr=new js,pr=new P,mr=new P,_r=new P,ci=new P,ui=new P,Di=new P,cs=new P,no=new P,io=new P,Ui=new P;function Ta(r,t,e,n,i){for(let s=0,o=r.length-3;s<=o;s+=3){Ui.fromArray(r,s);const a=i.x*Math.abs(Ui.x)+i.y*Math.abs(Ui.y)+i.z*Math.abs(Ui.z),l=t.dot(Ui),c=e.dot(Ui),u=n.dot(Ui);if(Math.max(-Math.max(l,c,u),Math.min(l,c,u))>a)return!1}return!0}const $2=new js,us=new P,ba=new P;class Zs{constructor(t=new P,e=-1){this.center=t,this.radius=e}set(t,e){return this.center.copy(t),this.radius=e,this}setFromPoints(t,e){const n=this.center;e!==void 0?n.copy(e):$2.setFromPoints(t).getCenter(n);let i=0;for(let s=0,o=t.length;s<o;s++)i=Math.max(i,n.distanceToSquared(t[s]));return this.radius=Math.sqrt(i),this}copy(t){return this.center.copy(t.center),this.radius=t.radius,this}isEmpty(){return this.radius<0}makeEmpty(){return this.center.set(0,0,0),this.radius=-1,this}containsPoint(t){return t.distanceToSquared(this.center)<=this.radius*this.radius}distanceToPoint(t){return t.distanceTo(this.center)-this.radius}intersectsSphere(t){const e=this.radius+t.radius;return t.center.distanceToSquared(this.center)<=e*e}intersectsBox(t){return t.intersectsSphere(this)}intersectsPlane(t){return Math.abs(t.distanceToPoint(this.center))<=this.radius}clampPoint(t,e){const n=this.center.distanceToSquared(t);return e.copy(t),n>this.radius*this.radius&&(e.sub(this.center).normalize(),e.multiplyScalar(this.radius).add(this.center)),e}getBoundingBox(t){return this.isEmpty()?(t.makeEmpty(),t):(t.set(this.center,this.center),t.expandByScalar(this.radius),t)}applyMatrix4(t){return this.center.applyMatrix4(t),this.radius=this.radius*t.getMaxScaleOnAxis(),this}translate(t){return this.center.add(t),this}expandByPoint(t){if(this.isEmpty())return this.center.copy(t),this.radius=0,this;us.subVectors(t,this.center);const e=us.lengthSq();if(e>this.radius*this.radius){const n=Math.sqrt(e),i=(n-this.radius)*.5;this.center.addScaledVector(us,i/n),this.radius+=i}return this}union(t){return t.isEmpty()?this:this.isEmpty()?(this.copy(t),this):(this.center.equals(t.center)===!0?this.radius=Math.max(this.radius,t.radius):(ba.subVectors(t.center,this.center).setLength(t.radius),this.expandByPoint(us.copy(t.center).add(ba)),this.expandByPoint(us.copy(t.center).sub(ba))),this)}equals(t){return t.center.equals(this.center)&&t.radius===this.radius}clone(){return new this.constructor().copy(this)}}const Kn=new P,wa=new P,ro=new P,hi=new P,Aa=new P,so=new P,Ra=new P;class Ks{constructor(t=new P,e=new P(0,0,-1)){this.origin=t,this.direction=e}set(t,e){return this.origin.copy(t),this.direction.copy(e),this}copy(t){return this.origin.copy(t.origin),this.direction.copy(t.direction),this}at(t,e){return e.copy(this.origin).addScaledVector(this.direction,t)}lookAt(t){return this.direction.copy(t).sub(this.origin).normalize(),this}recast(t){return this.origin.copy(this.at(t,Kn)),this}closestPointToPoint(t,e){e.subVectors(t,this.origin);const n=e.dot(this.direction);return n<0?e.copy(this.origin):e.copy(this.origin).addScaledVector(this.direction,n)}distanceToPoint(t){return Math.sqrt(this.distanceSqToPoint(t))}distanceSqToPoint(t){const e=Kn.subVectors(t,this.origin).dot(this.direction);return e<0?this.origin.distanceToSquared(t):(Kn.copy(this.origin).addScaledVector(this.direction,e),Kn.distanceToSquared(t))}distanceSqToSegment(t,e,n,i){wa.copy(t).add(e).multiplyScalar(.5),ro.copy(e).sub(t).normalize(),hi.copy(this.origin).sub(wa);const s=t.distanceTo(e)*.5,o=-this.direction.dot(ro),a=hi.dot(this.direction),l=-hi.dot(ro),c=hi.lengthSq(),u=Math.abs(1-o*o);let h,f,d,g;if(u>0)if(h=o*l-a,f=o*a-l,g=s*u,h>=0)if(f>=-g)if(f<=g){const _=1/u;h*=_,f*=_,d=h*(h+o*f+2*a)+f*(o*h+f+2*l)+c}else f=s,h=Math.max(0,-(o*f+a)),d=-h*h+f*(f+2*l)+c;else f=-s,h=Math.max(0,-(o*f+a)),d=-h*h+f*(f+2*l)+c;else f<=-g?(h=Math.max(0,-(-o*s+a)),f=h>0?-s:Math.min(Math.max(-s,-l),s),d=-h*h+f*(f+2*l)+c):f<=g?(h=0,f=Math.min(Math.max(-s,-l),s),d=f*(f+2*l)+c):(h=Math.max(0,-(o*s+a)),f=h>0?s:Math.min(Math.max(-s,-l),s),d=-h*h+f*(f+2*l)+c);else f=o>0?-s:s,h=Math.max(0,-(o*f+a)),d=-h*h+f*(f+2*l)+c;return n&&n.copy(this.origin).addScaledVector(this.direction,h),i&&i.copy(wa).addScaledVector(ro,f),d}intersectSphere(t,e){Kn.subVectors(t.center,this.origin);const n=Kn.dot(this.direction),i=Kn.dot(Kn)-n*n,s=t.radius*t.radius;if(i>s)return null;const o=Math.sqrt(s-i),a=n-o,l=n+o;return l<0?null:a<0?this.at(l,e):this.at(a,e)}intersectsSphere(t){return this.distanceSqToPoint(t.center)<=t.radius*t.radius}distanceToPlane(t){const e=t.normal.dot(this.direction);if(e===0)return t.distanceToPoint(this.origin)===0?0:null;const n=-(this.origin.dot(t.normal)+t.constant)/e;return n>=0?n:null}intersectPlane(t,e){const n=this.distanceToPlane(t);return n===null?null:this.at(n,e)}intersectsPlane(t){const e=t.distanceToPoint(this.origin);return e===0||t.normal.dot(this.direction)*e<0}intersectBox(t,e){let n,i,s,o,a,l;const c=1/this.direction.x,u=1/this.direction.y,h=1/this.direction.z,f=this.origin;return c>=0?(n=(t.min.x-f.x)*c,i=(t.max.x-f.x)*c):(n=(t.max.x-f.x)*c,i=(t.min.x-f.x)*c),u>=0?(s=(t.min.y-f.y)*u,o=(t.max.y-f.y)*u):(s=(t.max.y-f.y)*u,o=(t.min.y-f.y)*u),n>o||s>i||((s>n||isNaN(n))&&(n=s),(o<i||isNaN(i))&&(i=o),h>=0?(a=(t.min.z-f.z)*h,l=(t.max.z-f.z)*h):(a=(t.max.z-f.z)*h,l=(t.min.z-f.z)*h),n>l||a>i)||((a>n||n!==n)&&(n=a),(l<i||i!==i)&&(i=l),i<0)?null:this.at(n>=0?n:i,e)}intersectsBox(t){return this.intersectBox(t,Kn)!==null}intersectTriangle(t,e,n,i,s){Aa.subVectors(e,t),so.subVectors(n,t),Ra.crossVectors(Aa,so);let o=this.direction.dot(Ra),a;if(o>0){if(i)return null;a=1}else if(o<0)a=-1,o=-o;else return null;hi.subVectors(this.origin,t);const l=a*this.direction.dot(so.crossVectors(hi,so));if(l<0)return null;const c=a*this.direction.dot(Aa.cross(hi));if(c<0||l+c>o)return null;const u=-a*hi.dot(Ra);return u<0?null:this.at(u/o,s)}applyMatrix4(t){return this.origin.applyMatrix4(t),this.direction.transformDirection(t),this}equals(t){return t.origin.equals(this.origin)&&t.direction.equals(this.direction)}clone(){return new this.constructor().copy(this)}}class ge{constructor(t,e,n,i,s,o,a,l,c,u,h,f,d,g,_,m){ge.prototype.isMatrix4=!0,this.elements=[1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1],t!==void 0&&this.set(t,e,n,i,s,o,a,l,c,u,h,f,d,g,_,m)}set(t,e,n,i,s,o,a,l,c,u,h,f,d,g,_,m){const p=this.elements;return p[0]=t,p[4]=e,p[8]=n,p[12]=i,p[1]=s,p[5]=o,p[9]=a,p[13]=l,p[2]=c,p[6]=u,p[10]=h,p[14]=f,p[3]=d,p[7]=g,p[11]=_,p[15]=m,this}identity(){return this.set(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1),this}clone(){return new ge().fromArray(this.elements)}copy(t){const e=this.elements,n=t.elements;return e[0]=n[0],e[1]=n[1],e[2]=n[2],e[3]=n[3],e[4]=n[4],e[5]=n[5],e[6]=n[6],e[7]=n[7],e[8]=n[8],e[9]=n[9],e[10]=n[10],e[11]=n[11],e[12]=n[12],e[13]=n[13],e[14]=n[14],e[15]=n[15],this}copyPosition(t){const e=this.elements,n=t.elements;return e[12]=n[12],e[13]=n[13],e[14]=n[14],this}setFromMatrix3(t){const e=t.elements;return this.set(e[0],e[3],e[6],0,e[1],e[4],e[7],0,e[2],e[5],e[8],0,0,0,0,1),this}extractBasis(t,e,n){return t.setFromMatrixColumn(this,0),e.setFromMatrixColumn(this,1),n.setFromMatrixColumn(this,2),this}makeBasis(t,e,n){return this.set(t.x,e.x,n.x,0,t.y,e.y,n.y,0,t.z,e.z,n.z,0,0,0,0,1),this}extractRotation(t){const e=this.elements,n=t.elements,i=1/gr.setFromMatrixColumn(t,0).length(),s=1/gr.setFromMatrixColumn(t,1).length(),o=1/gr.setFromMatrixColumn(t,2).length();return e[0]=n[0]*i,e[1]=n[1]*i,e[2]=n[2]*i,e[3]=0,e[4]=n[4]*s,e[5]=n[5]*s,e[6]=n[6]*s,e[7]=0,e[8]=n[8]*o,e[9]=n[9]*o,e[10]=n[10]*o,e[11]=0,e[12]=0,e[13]=0,e[14]=0,e[15]=1,this}makeRotationFromEuler(t){const e=this.elements,n=t.x,i=t.y,s=t.z,o=Math.cos(n),a=Math.sin(n),l=Math.cos(i),c=Math.sin(i),u=Math.cos(s),h=Math.sin(s);if(t.order==="XYZ"){const f=o*u,d=o*h,g=a*u,_=a*h;e[0]=l*u,e[4]=-l*h,e[8]=c,e[1]=d+g*c,e[5]=f-_*c,e[9]=-a*l,e[2]=_-f*c,e[6]=g+d*c,e[10]=o*l}else if(t.order==="YXZ"){const f=l*u,d=l*h,g=c*u,_=c*h;e[0]=f+_*a,e[4]=g*a-d,e[8]=o*c,e[1]=o*h,e[5]=o*u,e[9]=-a,e[2]=d*a-g,e[6]=_+f*a,e[10]=o*l}else if(t.order==="ZXY"){const f=l*u,d=l*h,g=c*u,_=c*h;e[0]=f-_*a,e[4]=-o*h,e[8]=g+d*a,e[1]=d+g*a,e[5]=o*u,e[9]=_-f*a,e[2]=-o*c,e[6]=a,e[10]=o*l}else if(t.order==="ZYX"){const f=o*u,d=o*h,g=a*u,_=a*h;e[0]=l*u,e[4]=g*c-d,e[8]=f*c+_,e[1]=l*h,e[5]=_*c+f,e[9]=d*c-g,e[2]=-c,e[6]=a*l,e[10]=o*l}else if(t.order==="YZX"){const f=o*l,d=o*c,g=a*l,_=a*c;e[0]=l*u,e[4]=_-f*h,e[8]=g*h+d,e[1]=h,e[5]=o*u,e[9]=-a*u,e[2]=-c*u,e[6]=d*h+g,e[10]=f-_*h}else if(t.order==="XZY"){const f=o*l,d=o*c,g=a*l,_=a*c;e[0]=l*u,e[4]=-h,e[8]=c*u,e[1]=f*h+_,e[5]=o*u,e[9]=d*h-g,e[2]=g*h-d,e[6]=a*u,e[10]=_*h+f}return e[3]=0,e[7]=0,e[11]=0,e[12]=0,e[13]=0,e[14]=0,e[15]=1,this}makeRotationFromQuaternion(t){return this.compose(J2,t,Q2)}lookAt(t,e,n){const i=this.elements;return ln.subVectors(t,e),ln.lengthSq()===0&&(ln.z=1),ln.normalize(),fi.crossVectors(n,ln),fi.lengthSq()===0&&(Math.abs(n.z)===1?ln.x+=1e-4:ln.z+=1e-4,ln.normalize(),fi.crossVectors(n,ln)),fi.normalize(),oo.crossVectors(ln,fi),i[0]=fi.x,i[4]=oo.x,i[8]=ln.x,i[1]=fi.y,i[5]=oo.y,i[9]=ln.y,i[2]=fi.z,i[6]=oo.z,i[10]=ln.z,this}multiply(t){return this.multiplyMatrices(this,t)}premultiply(t){return this.multiplyMatrices(t,this)}multiplyMatrices(t,e){const n=t.elements,i=e.elements,s=this.elements,o=n[0],a=n[4],l=n[8],c=n[12],u=n[1],h=n[5],f=n[9],d=n[13],g=n[2],_=n[6],m=n[10],p=n[14],M=n[3],v=n[7],x=n[11],S=n[15],T=i[0],E=i[4],A=i[8],y=i[12],b=i[1],F=i[5],z=i[9],I=i[13],O=i[2],N=i[6],X=i[10],k=i[14],Y=i[3],Q=i[7],$=i[11],B=i[15];return s[0]=o*T+a*b+l*O+c*Y,s[4]=o*E+a*F+l*N+c*Q,s[8]=o*A+a*z+l*X+c*$,s[12]=o*y+a*I+l*k+c*B,s[1]=u*T+h*b+f*O+d*Y,s[5]=u*E+h*F+f*N+d*Q,s[9]=u*A+h*z+f*X+d*$,s[13]=u*y+h*I+f*k+d*B,s[2]=g*T+_*b+m*O+p*Y,s[6]=g*E+_*F+m*N+p*Q,s[10]=g*A+_*z+m*X+p*$,s[14]=g*y+_*I+m*k+p*B,s[3]=M*T+v*b+x*O+S*Y,s[7]=M*E+v*F+x*N+S*Q,s[11]=M*A+v*z+x*X+S*$,s[15]=M*y+v*I+x*k+S*B,this}multiplyScalar(t){const e=this.elements;return e[0]*=t,e[4]*=t,e[8]*=t,e[12]*=t,e[1]*=t,e[5]*=t,e[9]*=t,e[13]*=t,e[2]*=t,e[6]*=t,e[10]*=t,e[14]*=t,e[3]*=t,e[7]*=t,e[11]*=t,e[15]*=t,this}determinant(){const t=this.elements,e=t[0],n=t[4],i=t[8],s=t[12],o=t[1],a=t[5],l=t[9],c=t[13],u=t[2],h=t[6],f=t[10],d=t[14],g=t[3],_=t[7],m=t[11],p=t[15];return g*(+s*l*h-i*c*h-s*a*f+n*c*f+i*a*d-n*l*d)+_*(+e*l*d-e*c*f+s*o*f-i*o*d+i*c*u-s*l*u)+m*(+e*c*h-e*a*d-s*o*h+n*o*d+s*a*u-n*c*u)+p*(-i*a*u-e*l*h+e*a*f+i*o*h-n*o*f+n*l*u)}transpose(){const t=this.elements;let e;return e=t[1],t[1]=t[4],t[4]=e,e=t[2],t[2]=t[8],t[8]=e,e=t[6],t[6]=t[9],t[9]=e,e=t[3],t[3]=t[12],t[12]=e,e=t[7],t[7]=t[13],t[13]=e,e=t[11],t[11]=t[14],t[14]=e,this}setPosition(t,e,n){const i=this.elements;return t.isVector3?(i[12]=t.x,i[13]=t.y,i[14]=t.z):(i[12]=t,i[13]=e,i[14]=n),this}invert(){const t=this.elements,e=t[0],n=t[1],i=t[2],s=t[3],o=t[4],a=t[5],l=t[6],c=t[7],u=t[8],h=t[9],f=t[10],d=t[11],g=t[12],_=t[13],m=t[14],p=t[15],M=h*m*c-_*f*c+_*l*d-a*m*d-h*l*p+a*f*p,v=g*f*c-u*m*c-g*l*d+o*m*d+u*l*p-o*f*p,x=u*_*c-g*h*c+g*a*d-o*_*d-u*a*p+o*h*p,S=g*h*l-u*_*l-g*a*f+o*_*f+u*a*m-o*h*m,T=e*M+n*v+i*x+s*S;if(T===0)return this.set(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0);const E=1/T;return t[0]=M*E,t[1]=(_*f*s-h*m*s-_*i*d+n*m*d+h*i*p-n*f*p)*E,t[2]=(a*m*s-_*l*s+_*i*c-n*m*c-a*i*p+n*l*p)*E,t[3]=(h*l*s-a*f*s-h*i*c+n*f*c+a*i*d-n*l*d)*E,t[4]=v*E,t[5]=(u*m*s-g*f*s+g*i*d-e*m*d-u*i*p+e*f*p)*E,t[6]=(g*l*s-o*m*s-g*i*c+e*m*c+o*i*p-e*l*p)*E,t[7]=(o*f*s-u*l*s+u*i*c-e*f*c-o*i*d+e*l*d)*E,t[8]=x*E,t[9]=(g*h*s-u*_*s-g*n*d+e*_*d+u*n*p-e*h*p)*E,t[10]=(o*_*s-g*a*s+g*n*c-e*_*c-o*n*p+e*a*p)*E,t[11]=(u*a*s-o*h*s-u*n*c+e*h*c+o*n*d-e*a*d)*E,t[12]=S*E,t[13]=(u*_*i-g*h*i+g*n*f-e*_*f-u*n*m+e*h*m)*E,t[14]=(g*a*i-o*_*i-g*n*l+e*_*l+o*n*m-e*a*m)*E,t[15]=(o*h*i-u*a*i+u*n*l-e*h*l-o*n*f+e*a*f)*E,this}scale(t){const e=this.elements,n=t.x,i=t.y,s=t.z;return e[0]*=n,e[4]*=i,e[8]*=s,e[1]*=n,e[5]*=i,e[9]*=s,e[2]*=n,e[6]*=i,e[10]*=s,e[3]*=n,e[7]*=i,e[11]*=s,this}getMaxScaleOnAxis(){const t=this.elements,e=t[0]*t[0]+t[1]*t[1]+t[2]*t[2],n=t[4]*t[4]+t[5]*t[5]+t[6]*t[6],i=t[8]*t[8]+t[9]*t[9]+t[10]*t[10];return Math.sqrt(Math.max(e,n,i))}makeTranslation(t,e,n){return t.isVector3?this.set(1,0,0,t.x,0,1,0,t.y,0,0,1,t.z,0,0,0,1):this.set(1,0,0,t,0,1,0,e,0,0,1,n,0,0,0,1),this}makeRotationX(t){const e=Math.cos(t),n=Math.sin(t);return this.set(1,0,0,0,0,e,-n,0,0,n,e,0,0,0,0,1),this}makeRotationY(t){const e=Math.cos(t),n=Math.sin(t);return this.set(e,0,n,0,0,1,0,0,-n,0,e,0,0,0,0,1),this}makeRotationZ(t){const e=Math.cos(t),n=Math.sin(t);return this.set(e,-n,0,0,n,e,0,0,0,0,1,0,0,0,0,1),this}makeRotationAxis(t,e){const n=Math.cos(e),i=Math.sin(e),s=1-n,o=t.x,a=t.y,l=t.z,c=s*o,u=s*a;return this.set(c*o+n,c*a-i*l,c*l+i*a,0,c*a+i*l,u*a+n,u*l-i*o,0,c*l-i*a,u*l+i*o,s*l*l+n,0,0,0,0,1),this}makeScale(t,e,n){return this.set(t,0,0,0,0,e,0,0,0,0,n,0,0,0,0,1),this}makeShear(t,e,n,i,s,o){return this.set(1,n,s,0,t,1,o,0,e,i,1,0,0,0,0,1),this}compose(t,e,n){const i=this.elements,s=e._x,o=e._y,a=e._z,l=e._w,c=s+s,u=o+o,h=a+a,f=s*c,d=s*u,g=s*h,_=o*u,m=o*h,p=a*h,M=l*c,v=l*u,x=l*h,S=n.x,T=n.y,E=n.z;return i[0]=(1-(_+p))*S,i[1]=(d+x)*S,i[2]=(g-v)*S,i[3]=0,i[4]=(d-x)*T,i[5]=(1-(f+p))*T,i[6]=(m+M)*T,i[7]=0,i[8]=(g+v)*E,i[9]=(m-M)*E,i[10]=(1-(f+_))*E,i[11]=0,i[12]=t.x,i[13]=t.y,i[14]=t.z,i[15]=1,this}decompose(t,e,n){const i=this.elements;let s=gr.set(i[0],i[1],i[2]).length();const o=gr.set(i[4],i[5],i[6]).length(),a=gr.set(i[8],i[9],i[10]).length();this.determinant()<0&&(s=-s),t.x=i[12],t.y=i[13],t.z=i[14],Cn.copy(this);const c=1/s,u=1/o,h=1/a;return Cn.elements[0]*=c,Cn.elements[1]*=c,Cn.elements[2]*=c,Cn.elements[4]*=u,Cn.elements[5]*=u,Cn.elements[6]*=u,Cn.elements[8]*=h,Cn.elements[9]*=h,Cn.elements[10]*=h,e.setFromRotationMatrix(Cn),n.x=s,n.y=o,n.z=a,this}makePerspective(t,e,n,i,s,o,a=si){const l=this.elements,c=2*s/(e-t),u=2*s/(n-i),h=(e+t)/(e-t),f=(n+i)/(n-i);let d,g;if(a===si)d=-(o+s)/(o-s),g=-2*o*s/(o-s);else if(a===No)d=-o/(o-s),g=-o*s/(o-s);else throw new Error("THREE.Matrix4.makePerspective(): Invalid coordinate system: "+a);return l[0]=c,l[4]=0,l[8]=h,l[12]=0,l[1]=0,l[5]=u,l[9]=f,l[13]=0,l[2]=0,l[6]=0,l[10]=d,l[14]=g,l[3]=0,l[7]=0,l[11]=-1,l[15]=0,this}makeOrthographic(t,e,n,i,s,o,a=si){const l=this.elements,c=1/(e-t),u=1/(n-i),h=1/(o-s),f=(e+t)*c,d=(n+i)*u;let g,_;if(a===si)g=(o+s)*h,_=-2*h;else if(a===No)g=s*h,_=-1*h;else throw new Error("THREE.Matrix4.makeOrthographic(): Invalid coordinate system: "+a);return l[0]=2*c,l[4]=0,l[8]=0,l[12]=-f,l[1]=0,l[5]=2*u,l[9]=0,l[13]=-d,l[2]=0,l[6]=0,l[10]=_,l[14]=-g,l[3]=0,l[7]=0,l[11]=0,l[15]=1,this}equals(t){const e=this.elements,n=t.elements;for(let i=0;i<16;i++)if(e[i]!==n[i])return!1;return!0}fromArray(t,e=0){for(let n=0;n<16;n++)this.elements[n]=t[n+e];return this}toArray(t=[],e=0){const n=this.elements;return t[e]=n[0],t[e+1]=n[1],t[e+2]=n[2],t[e+3]=n[3],t[e+4]=n[4],t[e+5]=n[5],t[e+6]=n[6],t[e+7]=n[7],t[e+8]=n[8],t[e+9]=n[9],t[e+10]=n[10],t[e+11]=n[11],t[e+12]=n[12],t[e+13]=n[13],t[e+14]=n[14],t[e+15]=n[15],t}}const gr=new P,Cn=new ge,J2=new P(0,0,0),Q2=new P(1,1,1),fi=new P,oo=new P,ln=new P,l1=new ge,c1=new er;class ta{constructor(t=0,e=0,n=0,i=ta.DEFAULT_ORDER){this.isEuler=!0,this._x=t,this._y=e,this._z=n,this._order=i}get x(){return this._x}set x(t){this._x=t,this._onChangeCallback()}get y(){return this._y}set y(t){this._y=t,this._onChangeCallback()}get z(){return this._z}set z(t){this._z=t,this._onChangeCallback()}get order(){return this._order}set order(t){this._order=t,this._onChangeCallback()}set(t,e,n,i=this._order){return this._x=t,this._y=e,this._z=n,this._order=i,this._onChangeCallback(),this}clone(){return new this.constructor(this._x,this._y,this._z,this._order)}copy(t){return this._x=t._x,this._y=t._y,this._z=t._z,this._order=t._order,this._onChangeCallback(),this}setFromRotationMatrix(t,e=this._order,n=!0){const i=t.elements,s=i[0],o=i[4],a=i[8],l=i[1],c=i[5],u=i[9],h=i[2],f=i[6],d=i[10];switch(e){case"XYZ":this._y=Math.asin(De(a,-1,1)),Math.abs(a)<.9999999?(this._x=Math.atan2(-u,d),this._z=Math.atan2(-o,s)):(this._x=Math.atan2(f,c),this._z=0);break;case"YXZ":this._x=Math.asin(-De(u,-1,1)),Math.abs(u)<.9999999?(this._y=Math.atan2(a,d),this._z=Math.atan2(l,c)):(this._y=Math.atan2(-h,s),this._z=0);break;case"ZXY":this._x=Math.asin(De(f,-1,1)),Math.abs(f)<.9999999?(this._y=Math.atan2(-h,d),this._z=Math.atan2(-o,c)):(this._y=0,this._z=Math.atan2(l,s));break;case"ZYX":this._y=Math.asin(-De(h,-1,1)),Math.abs(h)<.9999999?(this._x=Math.atan2(f,d),this._z=Math.atan2(l,s)):(this._x=0,this._z=Math.atan2(-o,c));break;case"YZX":this._z=Math.asin(De(l,-1,1)),Math.abs(l)<.9999999?(this._x=Math.atan2(-u,c),this._y=Math.atan2(-h,s)):(this._x=0,this._y=Math.atan2(a,d));break;case"XZY":this._z=Math.asin(-De(o,-1,1)),Math.abs(o)<.9999999?(this._x=Math.atan2(f,c),this._y=Math.atan2(a,s)):(this._x=Math.atan2(-u,d),this._y=0);break;default:console.warn("THREE.Euler: .setFromRotationMatrix() encountered an unknown order: "+e)}return this._order=e,n===!0&&this._onChangeCallback(),this}setFromQuaternion(t,e,n){return l1.makeRotationFromQuaternion(t),this.setFromRotationMatrix(l1,e,n)}setFromVector3(t,e=this._order){return this.set(t.x,t.y,t.z,e)}reorder(t){return c1.setFromEuler(this),this.setFromQuaternion(c1,t)}equals(t){return t._x===this._x&&t._y===this._y&&t._z===this._z&&t._order===this._order}fromArray(t){return this._x=t[0],this._y=t[1],this._z=t[2],t[3]!==void 0&&(this._order=t[3]),this._onChangeCallback(),this}toArray(t=[],e=0){return t[e]=this._x,t[e+1]=this._y,t[e+2]=this._z,t[e+3]=this._order,t}_onChange(t){return this._onChangeCallback=t,this}_onChangeCallback(){}*[Symbol.iterator](){yield this._x,yield this._y,yield this._z,yield this._order}}ta.DEFAULT_ORDER="XYZ";class H0{constructor(){this.mask=1}set(t){this.mask=(1<<t|0)>>>0}enable(t){this.mask|=1<<t|0}enableAll(){this.mask=-1}toggle(t){this.mask^=1<<t|0}disable(t){this.mask&=~(1<<t|0)}disableAll(){this.mask=0}test(t){return(this.mask&t.mask)!==0}isEnabled(t){return(this.mask&(1<<t|0))!==0}}let tu=0;const u1=new P,vr=new er,$n=new ge,ao=new P,hs=new P,eu=new P,nu=new er,h1=new P(1,0,0),f1=new P(0,1,0),d1=new P(0,0,1),iu={type:"added"},ru={type:"removed"};class pe extends or{constructor(){super(),this.isObject3D=!0,Object.defineProperty(this,"id",{value:tu++}),this.uuid=ar(),this.name="",this.type="Object3D",this.parent=null,this.children=[],this.up=pe.DEFAULT_UP.clone();const t=new P,e=new ta,n=new er,i=new P(1,1,1);function s(){n.setFromEuler(e,!1)}function o(){e.setFromQuaternion(n,void 0,!1)}e._onChange(s),n._onChange(o),Object.defineProperties(this,{position:{configurable:!0,enumerable:!0,value:t},rotation:{configurable:!0,enumerable:!0,value:e},quaternion:{configurable:!0,enumerable:!0,value:n},scale:{configurable:!0,enumerable:!0,value:i},modelViewMatrix:{value:new ge},normalMatrix:{value:new zt}}),this.matrix=new ge,this.matrixWorld=new ge,this.matrixAutoUpdate=pe.DEFAULT_MATRIX_AUTO_UPDATE,this.matrixWorldNeedsUpdate=!1,this.matrixWorldAutoUpdate=pe.DEFAULT_MATRIX_WORLD_AUTO_UPDATE,this.layers=new H0,this.visible=!0,this.castShadow=!1,this.receiveShadow=!1,this.frustumCulled=!0,this.renderOrder=0,this.animations=[],this.userData={}}onBeforeRender(){}onAfterRender(){}applyMatrix4(t){this.matrixAutoUpdate&&this.updateMatrix(),this.matrix.premultiply(t),this.matrix.decompose(this.position,this.quaternion,this.scale)}applyQuaternion(t){return this.quaternion.premultiply(t),this}setRotationFromAxisAngle(t,e){this.quaternion.setFromAxisAngle(t,e)}setRotationFromEuler(t){this.quaternion.setFromEuler(t,!0)}setRotationFromMatrix(t){this.quaternion.setFromRotationMatrix(t)}setRotationFromQuaternion(t){this.quaternion.copy(t)}rotateOnAxis(t,e){return vr.setFromAxisAngle(t,e),this.quaternion.multiply(vr),this}rotateOnWorldAxis(t,e){return vr.setFromAxisAngle(t,e),this.quaternion.premultiply(vr),this}rotateX(t){return this.rotateOnAxis(h1,t)}rotateY(t){return this.rotateOnAxis(f1,t)}rotateZ(t){return this.rotateOnAxis(d1,t)}translateOnAxis(t,e){return u1.copy(t).applyQuaternion(this.quaternion),this.position.add(u1.multiplyScalar(e)),this}translateX(t){return this.translateOnAxis(h1,t)}translateY(t){return this.translateOnAxis(f1,t)}translateZ(t){return this.translateOnAxis(d1,t)}localToWorld(t){return this.updateWorldMatrix(!0,!1),t.applyMatrix4(this.matrixWorld)}worldToLocal(t){return this.updateWorldMatrix(!0,!1),t.applyMatrix4($n.copy(this.matrixWorld).invert())}lookAt(t,e,n){t.isVector3?ao.copy(t):ao.set(t,e,n);const i=this.parent;this.updateWorldMatrix(!0,!1),hs.setFromMatrixPosition(this.matrixWorld),this.isCamera||this.isLight?$n.lookAt(hs,ao,this.up):$n.lookAt(ao,hs,this.up),this.quaternion.setFromRotationMatrix($n),i&&($n.extractRotation(i.matrixWorld),vr.setFromRotationMatrix($n),this.quaternion.premultiply(vr.invert()))}add(t){if(arguments.length>1){for(let e=0;e<arguments.length;e++)this.add(arguments[e]);return this}return t===this?(console.error("THREE.Object3D.add: object can't be added as a child of itself.",t),this):(t&&t.isObject3D?(t.parent!==null&&t.parent.remove(t),t.parent=this,this.children.push(t),t.dispatchEvent(iu)):console.error("THREE.Object3D.add: object not an instance of THREE.Object3D.",t),this)}remove(t){if(arguments.length>1){for(let n=0;n<arguments.length;n++)this.remove(arguments[n]);return this}const e=this.children.indexOf(t);return e!==-1&&(t.parent=null,this.children.splice(e,1),t.dispatchEvent(ru)),this}removeFromParent(){const t=this.parent;return t!==null&&t.remove(this),this}clear(){return this.remove(...this.children)}attach(t){return this.updateWorldMatrix(!0,!1),$n.copy(this.matrixWorld).invert(),t.parent!==null&&(t.parent.updateWorldMatrix(!0,!1),$n.multiply(t.parent.matrixWorld)),t.applyMatrix4($n),this.add(t),t.updateWorldMatrix(!1,!0),this}getObjectById(t){return this.getObjectByProperty("id",t)}getObjectByName(t){return this.getObjectByProperty("name",t)}getObjectByProperty(t,e){if(this[t]===e)return this;for(let n=0,i=this.children.length;n<i;n++){const o=this.children[n].getObjectByProperty(t,e);if(o!==void 0)return o}}getObjectsByProperty(t,e){let n=[];this[t]===e&&n.push(this);for(let i=0,s=this.children.length;i<s;i++){const o=this.children[i].getObjectsByProperty(t,e);o.length>0&&(n=n.concat(o))}return n}getWorldPosition(t){return this.updateWorldMatrix(!0,!1),t.setFromMatrixPosition(this.matrixWorld)}getWorldQuaternion(t){return this.updateWorldMatrix(!0,!1),this.matrixWorld.decompose(hs,t,eu),t}getWorldScale(t){return this.updateWorldMatrix(!0,!1),this.matrixWorld.decompose(hs,nu,t),t}getWorldDirection(t){this.updateWorldMatrix(!0,!1);const e=this.matrixWorld.elements;return t.set(e[8],e[9],e[10]).normalize()}raycast(){}traverse(t){t(this);const e=this.children;for(let n=0,i=e.length;n<i;n++)e[n].traverse(t)}traverseVisible(t){if(this.visible===!1)return;t(this);const e=this.children;for(let n=0,i=e.length;n<i;n++)e[n].traverseVisible(t)}traverseAncestors(t){const e=this.parent;e!==null&&(t(e),e.traverseAncestors(t))}updateMatrix(){this.matrix.compose(this.position,this.quaternion,this.scale),this.matrixWorldNeedsUpdate=!0}updateMatrixWorld(t){this.matrixAutoUpdate&&this.updateMatrix(),(this.matrixWorldNeedsUpdate||t)&&(this.parent===null?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix),this.matrixWorldNeedsUpdate=!1,t=!0);const e=this.children;for(let n=0,i=e.length;n<i;n++){const s=e[n];(s.matrixWorldAutoUpdate===!0||t===!0)&&s.updateMatrixWorld(t)}}updateWorldMatrix(t,e){const n=this.parent;if(t===!0&&n!==null&&n.matrixWorldAutoUpdate===!0&&n.updateWorldMatrix(!0,!1),this.matrixAutoUpdate&&this.updateMatrix(),this.parent===null?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix),e===!0){const i=this.children;for(let s=0,o=i.length;s<o;s++){const a=i[s];a.matrixWorldAutoUpdate===!0&&a.updateWorldMatrix(!1,!0)}}}toJSON(t){const e=t===void 0||typeof t=="string",n={};e&&(t={geometries:{},materials:{},textures:{},images:{},shapes:{},skeletons:{},animations:{},nodes:{}},n.metadata={version:4.6,type:"Object",generator:"Object3D.toJSON"});const i={};i.uuid=this.uuid,i.type=this.type,this.name!==""&&(i.name=this.name),this.castShadow===!0&&(i.castShadow=!0),this.receiveShadow===!0&&(i.receiveShadow=!0),this.visible===!1&&(i.visible=!1),this.frustumCulled===!1&&(i.frustumCulled=!1),this.renderOrder!==0&&(i.renderOrder=this.renderOrder),Object.keys(this.userData).length>0&&(i.userData=this.userData),i.layers=this.layers.mask,i.matrix=this.matrix.toArray(),i.up=this.up.toArray(),this.matrixAutoUpdate===!1&&(i.matrixAutoUpdate=!1),this.isInstancedMesh&&(i.type="InstancedMesh",i.count=this.count,i.instanceMatrix=this.instanceMatrix.toJSON(),this.instanceColor!==null&&(i.instanceColor=this.instanceColor.toJSON()));function s(a,l){return a[l.uuid]===void 0&&(a[l.uuid]=l.toJSON(t)),l.uuid}if(this.isScene)this.background&&(this.background.isColor?i.background=this.background.toJSON():this.background.isTexture&&(i.background=this.background.toJSON(t).uuid)),this.environment&&this.environment.isTexture&&this.environment.isRenderTargetTexture!==!0&&(i.environment=this.environment.toJSON(t).uuid);else if(this.isMesh||this.isLine||this.isPoints){i.geometry=s(t.geometries,this.geometry);const a=this.geometry.parameters;if(a!==void 0&&a.shapes!==void 0){const l=a.shapes;if(Array.isArray(l))for(let c=0,u=l.length;c<u;c++){const h=l[c];s(t.shapes,h)}else s(t.shapes,l)}}if(this.isSkinnedMesh&&(i.bindMode=this.bindMode,i.bindMatrix=this.bindMatrix.toArray(),this.skeleton!==void 0&&(s(t.skeletons,this.skeleton),i.skeleton=this.skeleton.uuid)),this.material!==void 0)if(Array.isArray(this.material)){const a=[];for(let l=0,c=this.material.length;l<c;l++)a.push(s(t.materials,this.material[l]));i.material=a}else i.material=s(t.materials,this.material);if(this.children.length>0){i.children=[];for(let a=0;a<this.children.length;a++)i.children.push(this.children[a].toJSON(t).object)}if(this.animations.length>0){i.animations=[];for(let a=0;a<this.animations.length;a++){const l=this.animations[a];i.animations.push(s(t.animations,l))}}if(e){const a=o(t.geometries),l=o(t.materials),c=o(t.textures),u=o(t.images),h=o(t.shapes),f=o(t.skeletons),d=o(t.animations),g=o(t.nodes);a.length>0&&(n.geometries=a),l.length>0&&(n.materials=l),c.length>0&&(n.textures=c),u.length>0&&(n.images=u),h.length>0&&(n.shapes=h),f.length>0&&(n.skeletons=f),d.length>0&&(n.animations=d),g.length>0&&(n.nodes=g)}return n.object=i,n;function o(a){const l=[];for(const c in a){const u=a[c];delete u.metadata,l.push(u)}return l}}clone(t){return new this.constructor().copy(this,t)}copy(t,e=!0){if(this.name=t.name,this.up.copy(t.up),this.position.copy(t.position),this.rotation.order=t.rotation.order,this.quaternion.copy(t.quaternion),this.scale.copy(t.scale),this.matrix.copy(t.matrix),this.matrixWorld.copy(t.matrixWorld),this.matrixAutoUpdate=t.matrixAutoUpdate,this.matrixWorldNeedsUpdate=t.matrixWorldNeedsUpdate,this.matrixWorldAutoUpdate=t.matrixWorldAutoUpdate,this.layers.mask=t.layers.mask,this.visible=t.visible,this.castShadow=t.castShadow,this.receiveShadow=t.receiveShadow,this.frustumCulled=t.frustumCulled,this.renderOrder=t.renderOrder,this.animations=t.animations.slice(),this.userData=JSON.parse(JSON.stringify(t.userData)),e===!0)for(let n=0;n<t.children.length;n++){const i=t.children[n];this.add(i.clone())}return this}}pe.DEFAULT_UP=new P(0,1,0);pe.DEFAULT_MATRIX_AUTO_UPDATE=!0;pe.DEFAULT_MATRIX_WORLD_AUTO_UPDATE=!0;const Pn=new P,Jn=new P,Ca=new P,Qn=new P,xr=new P,yr=new P,p1=new P,Pa=new P,La=new P,Da=new P;let lo=!1;class Mn{constructor(t=new P,e=new P,n=new P){this.a=t,this.b=e,this.c=n}static getNormal(t,e,n,i){i.subVectors(n,e),Pn.subVectors(t,e),i.cross(Pn);const s=i.lengthSq();return s>0?i.multiplyScalar(1/Math.sqrt(s)):i.set(0,0,0)}static getBarycoord(t,e,n,i,s){Pn.subVectors(i,e),Jn.subVectors(n,e),Ca.subVectors(t,e);const o=Pn.dot(Pn),a=Pn.dot(Jn),l=Pn.dot(Ca),c=Jn.dot(Jn),u=Jn.dot(Ca),h=o*c-a*a;if(h===0)return s.set(-2,-1,-1);const f=1/h,d=(c*l-a*u)*f,g=(o*u-a*l)*f;return s.set(1-d-g,g,d)}static containsPoint(t,e,n,i){return this.getBarycoord(t,e,n,i,Qn),Qn.x>=0&&Qn.y>=0&&Qn.x+Qn.y<=1}static getUV(t,e,n,i,s,o,a,l){return lo===!1&&(console.warn("THREE.Triangle.getUV() has been renamed to THREE.Triangle.getInterpolation()."),lo=!0),this.getInterpolation(t,e,n,i,s,o,a,l)}static getInterpolation(t,e,n,i,s,o,a,l){return this.getBarycoord(t,e,n,i,Qn),l.setScalar(0),l.addScaledVector(s,Qn.x),l.addScaledVector(o,Qn.y),l.addScaledVector(a,Qn.z),l}static isFrontFacing(t,e,n,i){return Pn.subVectors(n,e),Jn.subVectors(t,e),Pn.cross(Jn).dot(i)<0}set(t,e,n){return this.a.copy(t),this.b.copy(e),this.c.copy(n),this}setFromPointsAndIndices(t,e,n,i){return this.a.copy(t[e]),this.b.copy(t[n]),this.c.copy(t[i]),this}setFromAttributeAndIndices(t,e,n,i){return this.a.fromBufferAttribute(t,e),this.b.fromBufferAttribute(t,n),this.c.fromBufferAttribute(t,i),this}clone(){return new this.constructor().copy(this)}copy(t){return this.a.copy(t.a),this.b.copy(t.b),this.c.copy(t.c),this}getArea(){return Pn.subVectors(this.c,this.b),Jn.subVectors(this.a,this.b),Pn.cross(Jn).length()*.5}getMidpoint(t){return t.addVectors(this.a,this.b).add(this.c).multiplyScalar(1/3)}getNormal(t){return Mn.getNormal(this.a,this.b,this.c,t)}getPlane(t){return t.setFromCoplanarPoints(this.a,this.b,this.c)}getBarycoord(t,e){return Mn.getBarycoord(t,this.a,this.b,this.c,e)}getUV(t,e,n,i,s){return lo===!1&&(console.warn("THREE.Triangle.getUV() has been renamed to THREE.Triangle.getInterpolation()."),lo=!0),Mn.getInterpolation(t,this.a,this.b,this.c,e,n,i,s)}getInterpolation(t,e,n,i,s){return Mn.getInterpolation(t,this.a,this.b,this.c,e,n,i,s)}containsPoint(t){return Mn.containsPoint(t,this.a,this.b,this.c)}isFrontFacing(t){return Mn.isFrontFacing(this.a,this.b,this.c,t)}intersectsBox(t){return t.intersectsTriangle(this)}closestPointToPoint(t,e){const n=this.a,i=this.b,s=this.c;let o,a;xr.subVectors(i,n),yr.subVectors(s,n),Pa.subVectors(t,n);const l=xr.dot(Pa),c=yr.dot(Pa);if(l<=0&&c<=0)return e.copy(n);La.subVectors(t,i);const u=xr.dot(La),h=yr.dot(La);if(u>=0&&h<=u)return e.copy(i);const f=l*h-u*c;if(f<=0&&l>=0&&u<=0)return o=l/(l-u),e.copy(n).addScaledVector(xr,o);Da.subVectors(t,s);const d=xr.dot(Da),g=yr.dot(Da);if(g>=0&&d<=g)return e.copy(s);const _=d*c-l*g;if(_<=0&&c>=0&&g<=0)return a=c/(c-g),e.copy(n).addScaledVector(yr,a);const m=u*g-d*h;if(m<=0&&h-u>=0&&d-g>=0)return p1.subVectors(s,i),a=(h-u)/(h-u+(d-g)),e.copy(i).addScaledVector(p1,a);const p=1/(m+_+f);return o=_*p,a=f*p,e.copy(n).addScaledVector(xr,o).addScaledVector(yr,a)}equals(t){return t.a.equals(this.a)&&t.b.equals(this.b)&&t.c.equals(this.c)}}let su=0;class lr extends or{constructor(){super(),this.isMaterial=!0,Object.defineProperty(this,"id",{value:su++}),this.uuid=ar(),this.name="",this.type="Material",this.blending=kr,this.side=wn,this.vertexColors=!1,this.opacity=1,this.transparent=!1,this.alphaHash=!1,this.blendSrc=Cl,this.blendDst=Pl,this.blendEquation=Ur,this.blendSrcAlpha=null,this.blendDstAlpha=null,this.blendEquationAlpha=null,this.depthFunc=l0,this.depthTest=!0,this.depthWrite=!0,this.stencilWriteMask=255,this.stencilFunc=g2,this.stencilRef=0,this.stencilFuncMask=255,this.stencilFail=xa,this.stencilZFail=xa,this.stencilZPass=xa,this.stencilWrite=!1,this.clippingPlanes=null,this.clipIntersection=!1,this.clipShadows=!1,this.shadowSide=null,this.colorWrite=!0,this.precision=null,this.polygonOffset=!1,this.polygonOffsetFactor=0,this.polygonOffsetUnits=0,this.dithering=!1,this.alphaToCoverage=!1,this.premultipliedAlpha=!1,this.forceSinglePass=!1,this.visible=!0,this.toneMapped=!0,this.userData={},this.version=0,this._alphaTest=0}get alphaTest(){return this._alphaTest}set alphaTest(t){this._alphaTest>0!=t>0&&this.version++,this._alphaTest=t}onBuild(){}onBeforeRender(){}onBeforeCompile(){}customProgramCacheKey(){return this.onBeforeCompile.toString()}setValues(t){if(t!==void 0)for(const e in t){const n=t[e];if(n===void 0){console.warn(`THREE.Material: parameter '${e}' has value of undefined.`);continue}const i=this[e];if(i===void 0){console.warn(`THREE.Material: '${e}' is not a property of THREE.${this.type}.`);continue}i&&i.isColor?i.set(n):i&&i.isVector3&&n&&n.isVector3?i.copy(n):this[e]=n}}toJSON(t){const e=t===void 0||typeof t=="string";e&&(t={textures:{},images:{}});const n={metadata:{version:4.6,type:"Material",generator:"Material.toJSON"}};n.uuid=this.uuid,n.type=this.type,this.name!==""&&(n.name=this.name),this.color&&this.color.isColor&&(n.color=this.color.getHex()),this.roughness!==void 0&&(n.roughness=this.roughness),this.metalness!==void 0&&(n.metalness=this.metalness),this.sheen!==void 0&&(n.sheen=this.sheen),this.sheenColor&&this.sheenColor.isColor&&(n.sheenColor=this.sheenColor.getHex()),this.sheenRoughness!==void 0&&(n.sheenRoughness=this.sheenRoughness),this.emissive&&this.emissive.isColor&&(n.emissive=this.emissive.getHex()),this.emissiveIntensity&&this.emissiveIntensity!==1&&(n.emissiveIntensity=this.emissiveIntensity),this.specular&&this.specular.isColor&&(n.specular=this.specular.getHex()),this.specularIntensity!==void 0&&(n.specularIntensity=this.specularIntensity),this.specularColor&&this.specularColor.isColor&&(n.specularColor=this.specularColor.getHex()),this.shininess!==void 0&&(n.shininess=this.shininess),this.clearcoat!==void 0&&(n.clearcoat=this.clearcoat),this.clearcoatRoughness!==void 0&&(n.clearcoatRoughness=this.clearcoatRoughness),this.clearcoatMap&&this.clearcoatMap.isTexture&&(n.clearcoatMap=this.clearcoatMap.toJSON(t).uuid),this.clearcoatRoughnessMap&&this.clearcoatRoughnessMap.isTexture&&(n.clearcoatRoughnessMap=this.clearcoatRoughnessMap.toJSON(t).uuid),this.clearcoatNormalMap&&this.clearcoatNormalMap.isTexture&&(n.clearcoatNormalMap=this.clearcoatNormalMap.toJSON(t).uuid,n.clearcoatNormalScale=this.clearcoatNormalScale.toArray()),this.iridescence!==void 0&&(n.iridescence=this.iridescence),this.iridescenceIOR!==void 0&&(n.iridescenceIOR=this.iridescenceIOR),this.iridescenceThicknessRange!==void 0&&(n.iridescenceThicknessRange=this.iridescenceThicknessRange),this.iridescenceMap&&this.iridescenceMap.isTexture&&(n.iridescenceMap=this.iridescenceMap.toJSON(t).uuid),this.iridescenceThicknessMap&&this.iridescenceThicknessMap.isTexture&&(n.iridescenceThicknessMap=this.iridescenceThicknessMap.toJSON(t).uuid),this.anisotropy!==void 0&&(n.anisotropy=this.anisotropy),this.anisotropyRotation!==void 0&&(n.anisotropyRotation=this.anisotropyRotation),this.anisotropyMap&&this.anisotropyMap.isTexture&&(n.anisotropyMap=this.anisotropyMap.toJSON(t).uuid),this.map&&this.map.isTexture&&(n.map=this.map.toJSON(t).uuid),this.matcap&&this.matcap.isTexture&&(n.matcap=this.matcap.toJSON(t).uuid),this.alphaMap&&this.alphaMap.isTexture&&(n.alphaMap=this.alphaMap.toJSON(t).uuid),this.lightMap&&this.lightMap.isTexture&&(n.lightMap=this.lightMap.toJSON(t).uuid,n.lightMapIntensity=this.lightMapIntensity),this.aoMap&&this.aoMap.isTexture&&(n.aoMap=this.aoMap.toJSON(t).uuid,n.aoMapIntensity=this.aoMapIntensity),this.bumpMap&&this.bumpMap.isTexture&&(n.bumpMap=this.bumpMap.toJSON(t).uuid,n.bumpScale=this.bumpScale),this.normalMap&&this.normalMap.isTexture&&(n.normalMap=this.normalMap.toJSON(t).uuid,n.normalMapType=this.normalMapType,n.normalScale=this.normalScale.toArray()),this.displacementMap&&this.displacementMap.isTexture&&(n.displacementMap=this.displacementMap.toJSON(t).uuid,n.displacementScale=this.displacementScale,n.displacementBias=this.displacementBias),this.roughnessMap&&this.roughnessMap.isTexture&&(n.roughnessMap=this.roughnessMap.toJSON(t).uuid),this.metalnessMap&&this.metalnessMap.isTexture&&(n.metalnessMap=this.metalnessMap.toJSON(t).uuid),this.emissiveMap&&this.emissiveMap.isTexture&&(n.emissiveMap=this.emissiveMap.toJSON(t).uuid),this.specularMap&&this.specularMap.isTexture&&(n.specularMap=this.specularMap.toJSON(t).uuid),this.specularIntensityMap&&this.specularIntensityMap.isTexture&&(n.specularIntensityMap=this.specularIntensityMap.toJSON(t).uuid),this.specularColorMap&&this.specularColorMap.isTexture&&(n.specularColorMap=this.specularColorMap.toJSON(t).uuid),this.envMap&&this.envMap.isTexture&&(n.envMap=this.envMap.toJSON(t).uuid,this.combine!==void 0&&(n.combine=this.combine)),this.envMapIntensity!==void 0&&(n.envMapIntensity=this.envMapIntensity),this.reflectivity!==void 0&&(n.reflectivity=this.reflectivity),this.refractionRatio!==void 0&&(n.refractionRatio=this.refractionRatio),this.gradientMap&&this.gradientMap.isTexture&&(n.gradientMap=this.gradientMap.toJSON(t).uuid),this.transmission!==void 0&&(n.transmission=this.transmission),this.transmissionMap&&this.transmissionMap.isTexture&&(n.transmissionMap=this.transmissionMap.toJSON(t).uuid),this.thickness!==void 0&&(n.thickness=this.thickness),this.thicknessMap&&this.thicknessMap.isTexture&&(n.thicknessMap=this.thicknessMap.toJSON(t).uuid),this.attenuationDistance!==void 0&&this.attenuationDistance!==1/0&&(n.attenuationDistance=this.attenuationDistance),this.attenuationColor!==void 0&&(n.attenuationColor=this.attenuationColor.getHex()),this.size!==void 0&&(n.size=this.size),this.shadowSide!==null&&(n.shadowSide=this.shadowSide),this.sizeAttenuation!==void 0&&(n.sizeAttenuation=this.sizeAttenuation),this.blending!==kr&&(n.blending=this.blending),this.side!==wn&&(n.side=this.side),this.vertexColors&&(n.vertexColors=!0),this.opacity<1&&(n.opacity=this.opacity),this.transparent===!0&&(n.transparent=this.transparent),n.depthFunc=this.depthFunc,n.depthTest=this.depthTest,n.depthWrite=this.depthWrite,n.colorWrite=this.colorWrite,n.stencilWrite=this.stencilWrite,n.stencilWriteMask=this.stencilWriteMask,n.stencilFunc=this.stencilFunc,n.stencilRef=this.stencilRef,n.stencilFuncMask=this.stencilFuncMask,n.stencilFail=this.stencilFail,n.stencilZFail=this.stencilZFail,n.stencilZPass=this.stencilZPass,this.rotation!==void 0&&this.rotation!==0&&(n.rotation=this.rotation),this.polygonOffset===!0&&(n.polygonOffset=!0),this.polygonOffsetFactor!==0&&(n.polygonOffsetFactor=this.polygonOffsetFactor),this.polygonOffsetUnits!==0&&(n.polygonOffsetUnits=this.polygonOffsetUnits),this.linewidth!==void 0&&this.linewidth!==1&&(n.linewidth=this.linewidth),this.dashSize!==void 0&&(n.dashSize=this.dashSize),this.gapSize!==void 0&&(n.gapSize=this.gapSize),this.scale!==void 0&&(n.scale=this.scale),this.dithering===!0&&(n.dithering=!0),this.alphaTest>0&&(n.alphaTest=this.alphaTest),this.alphaHash===!0&&(n.alphaHash=this.alphaHash),this.alphaToCoverage===!0&&(n.alphaToCoverage=this.alphaToCoverage),this.premultipliedAlpha===!0&&(n.premultipliedAlpha=this.premultipliedAlpha),this.forceSinglePass===!0&&(n.forceSinglePass=this.forceSinglePass),this.wireframe===!0&&(n.wireframe=this.wireframe),this.wireframeLinewidth>1&&(n.wireframeLinewidth=this.wireframeLinewidth),this.wireframeLinecap!=="round"&&(n.wireframeLinecap=this.wireframeLinecap),this.wireframeLinejoin!=="round"&&(n.wireframeLinejoin=this.wireframeLinejoin),this.flatShading===!0&&(n.flatShading=this.flatShading),this.visible===!1&&(n.visible=!1),this.toneMapped===!1&&(n.toneMapped=!1),this.fog===!1&&(n.fog=!1),Object.keys(this.userData).length>0&&(n.userData=this.userData);function i(s){const o=[];for(const a in s){const l=s[a];delete l.metadata,o.push(l)}return o}if(e){const s=i(t.textures),o=i(t.images);s.length>0&&(n.textures=s),o.length>0&&(n.images=o)}return n}clone(){return new this.constructor().copy(this)}copy(t){this.name=t.name,this.blending=t.blending,this.side=t.side,this.vertexColors=t.vertexColors,this.opacity=t.opacity,this.transparent=t.transparent,this.blendSrc=t.blendSrc,this.blendDst=t.blendDst,this.blendEquation=t.blendEquation,this.blendSrcAlpha=t.blendSrcAlpha,this.blendDstAlpha=t.blendDstAlpha,this.blendEquationAlpha=t.blendEquationAlpha,this.depthFunc=t.depthFunc,this.depthTest=t.depthTest,this.depthWrite=t.depthWrite,this.stencilWriteMask=t.stencilWriteMask,this.stencilFunc=t.stencilFunc,this.stencilRef=t.stencilRef,this.stencilFuncMask=t.stencilFuncMask,this.stencilFail=t.stencilFail,this.stencilZFail=t.stencilZFail,this.stencilZPass=t.stencilZPass,this.stencilWrite=t.stencilWrite;const e=t.clippingPlanes;let n=null;if(e!==null){const i=e.length;n=new Array(i);for(let s=0;s!==i;++s)n[s]=e[s].clone()}return this.clippingPlanes=n,this.clipIntersection=t.clipIntersection,this.clipShadows=t.clipShadows,this.shadowSide=t.shadowSide,this.colorWrite=t.colorWrite,this.precision=t.precision,this.polygonOffset=t.polygonOffset,this.polygonOffsetFactor=t.polygonOffsetFactor,this.polygonOffsetUnits=t.polygonOffsetUnits,this.dithering=t.dithering,this.alphaTest=t.alphaTest,this.alphaHash=t.alphaHash,this.alphaToCoverage=t.alphaToCoverage,this.premultipliedAlpha=t.premultipliedAlpha,this.forceSinglePass=t.forceSinglePass,this.visible=t.visible,this.toneMapped=t.toneMapped,this.userData=JSON.parse(JSON.stringify(t.userData)),this}dispose(){this.dispatchEvent({type:"dispose"})}set needsUpdate(t){t===!0&&this.version++}}const Wl={aliceblue:15792383,antiquewhite:16444375,aqua:65535,aquamarine:8388564,azure:15794175,beige:16119260,bisque:16770244,black:0,blanchedalmond:16772045,blue:255,blueviolet:9055202,brown:10824234,burlywood:14596231,cadetblue:6266528,chartreuse:8388352,chocolate:13789470,coral:16744272,cornflowerblue:6591981,cornsilk:16775388,crimson:14423100,cyan:65535,darkblue:139,darkcyan:35723,darkgoldenrod:12092939,darkgray:11119017,darkgreen:25600,darkgrey:11119017,darkkhaki:12433259,darkmagenta:9109643,darkolivegreen:5597999,darkorange:16747520,darkorchid:10040012,darkred:9109504,darksalmon:15308410,darkseagreen:9419919,darkslateblue:4734347,darkslategray:3100495,darkslategrey:3100495,darkturquoise:52945,darkviolet:9699539,deeppink:16716947,deepskyblue:49151,dimgray:6908265,dimgrey:6908265,dodgerblue:2003199,firebrick:11674146,floralwhite:16775920,forestgreen:2263842,fuchsia:16711935,gainsboro:14474460,ghostwhite:16316671,gold:16766720,goldenrod:14329120,gray:8421504,green:32768,greenyellow:11403055,grey:8421504,honeydew:15794160,hotpink:16738740,indianred:13458524,indigo:4915330,ivory:16777200,khaki:15787660,lavender:15132410,lavenderblush:16773365,lawngreen:8190976,lemonchiffon:16775885,lightblue:11393254,lightcoral:15761536,lightcyan:14745599,lightgoldenrodyellow:16448210,lightgray:13882323,lightgreen:9498256,lightgrey:13882323,lightpink:16758465,lightsalmon:16752762,lightseagreen:2142890,lightskyblue:8900346,lightslategray:7833753,lightslategrey:7833753,lightsteelblue:11584734,lightyellow:16777184,lime:65280,limegreen:3329330,linen:16445670,magenta:16711935,maroon:8388608,mediumaquamarine:6737322,mediumblue:205,mediumorchid:12211667,mediumpurple:9662683,mediumseagreen:3978097,mediumslateblue:8087790,mediumspringgreen:64154,mediumturquoise:4772300,mediumvioletred:13047173,midnightblue:1644912,mintcream:16121850,mistyrose:16770273,moccasin:16770229,navajowhite:16768685,navy:128,oldlace:16643558,olive:8421376,olivedrab:7048739,orange:16753920,orangered:16729344,orchid:14315734,palegoldenrod:15657130,palegreen:10025880,paleturquoise:11529966,palevioletred:14381203,papayawhip:16773077,peachpuff:16767673,peru:13468991,pink:16761035,plum:14524637,powderblue:11591910,purple:8388736,rebeccapurple:6697881,red:16711680,rosybrown:12357519,royalblue:4286945,saddlebrown:9127187,salmon:16416882,sandybrown:16032864,seagreen:3050327,seashell:16774638,sienna:10506797,silver:12632256,skyblue:8900331,slateblue:6970061,slategray:7372944,slategrey:7372944,snow:16775930,springgreen:65407,steelblue:4620980,tan:13808780,teal:32896,thistle:14204888,tomato:16737095,turquoise:4251856,violet:15631086,wheat:16113331,white:16777215,whitesmoke:16119285,yellow:16776960,yellowgreen:10145074},Ln={h:0,s:0,l:0},co={h:0,s:0,l:0};function Ua(r,t,e){return e<0&&(e+=1),e>1&&(e-=1),e<1/6?r+(t-r)*6*e:e<1/2?t:e<2/3?r+(t-r)*6*(2/3-e):r}class qt{constructor(t,e,n){return this.isColor=!0,this.r=1,this.g=1,this.b=1,this.set(t,e,n)}set(t,e,n){if(e===void 0&&n===void 0){const i=t;i&&i.isColor?this.copy(i):typeof i=="number"?this.setHex(i):typeof i=="string"&&this.setStyle(i)}else this.setRGB(t,e,n);return this}setScalar(t){return this.r=t,this.g=t,this.b=t,this}setHex(t,e=ae){return t=Math.floor(t),this.r=(t>>16&255)/255,this.g=(t>>8&255)/255,this.b=(t&255)/255,Rn.toWorkingColorSpace(this,e),this}setRGB(t,e,n,i=Rn.workingColorSpace){return this.r=t,this.g=e,this.b=n,Rn.toWorkingColorSpace(this,i),this}setHSL(t,e,n,i=Rn.workingColorSpace){if(t=G0(t,1),e=De(e,0,1),n=De(n,0,1),e===0)this.r=this.g=this.b=n;else{const s=n<=.5?n*(1+e):n+e-n*e,o=2*n-s;this.r=Ua(o,s,t+1/3),this.g=Ua(o,s,t),this.b=Ua(o,s,t-1/3)}return Rn.toWorkingColorSpace(this,i),this}setStyle(t,e=ae){function n(s){s!==void 0&&parseFloat(s)<1&&console.warn("THREE.Color: Alpha component of "+t+" will be ignored.")}let i;if(i=/^(\w+)\(([^\)]*)\)/.exec(t)){let s;const o=i[1],a=i[2];switch(o){case"rgb":case"rgba":if(s=/^\s*(\d+)\s*,\s*(\d+)\s*,\s*(\d+)\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(a))return n(s[4]),this.setRGB(Math.min(255,parseInt(s[1],10))/255,Math.min(255,parseInt(s[2],10))/255,Math.min(255,parseInt(s[3],10))/255,e);if(s=/^\s*(\d+)\%\s*,\s*(\d+)\%\s*,\s*(\d+)\%\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(a))return n(s[4]),this.setRGB(Math.min(100,parseInt(s[1],10))/100,Math.min(100,parseInt(s[2],10))/100,Math.min(100,parseInt(s[3],10))/100,e);break;case"hsl":case"hsla":if(s=/^\s*(\d*\.?\d+)\s*,\s*(\d*\.?\d+)\%\s*,\s*(\d*\.?\d+)\%\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(a))return n(s[4]),this.setHSL(parseFloat(s[1])/360,parseFloat(s[2])/100,parseFloat(s[3])/100,e);break;default:console.warn("THREE.Color: Unknown color model "+t)}}else if(i=/^\#([A-Fa-f\d]+)$/.exec(t)){const s=i[1],o=s.length;if(o===3)return this.setRGB(parseInt(s.charAt(0),16)/15,parseInt(s.charAt(1),16)/15,parseInt(s.charAt(2),16)/15,e);if(o===6)return this.setHex(parseInt(s,16),e);console.warn("THREE.Color: Invalid hex color "+t)}else if(t&&t.length>0)return this.setColorName(t,e);return this}setColorName(t,e=ae){const n=Wl[t.toLowerCase()];return n!==void 0?this.setHex(n,e):console.warn("THREE.Color: Unknown color "+t),this}clone(){return new this.constructor(this.r,this.g,this.b)}copy(t){return this.r=t.r,this.g=t.g,this.b=t.b,this}copySRGBToLinear(t){return this.r=Gr(t.r),this.g=Gr(t.g),this.b=Gr(t.b),this}copyLinearToSRGB(t){return this.r=Ma(t.r),this.g=Ma(t.g),this.b=Ma(t.b),this}convertSRGBToLinear(){return this.copySRGBToLinear(this),this}convertLinearToSRGB(){return this.copyLinearToSRGB(this),this}getHex(t=ae){return Rn.fromWorkingColorSpace(Ge.copy(this),t),Math.round(De(Ge.r*255,0,255))*65536+Math.round(De(Ge.g*255,0,255))*256+Math.round(De(Ge.b*255,0,255))}getHexString(t=ae){return("000000"+this.getHex(t).toString(16)).slice(-6)}getHSL(t,e=Rn.workingColorSpace){Rn.fromWorkingColorSpace(Ge.copy(this),e);const n=Ge.r,i=Ge.g,s=Ge.b,o=Math.max(n,i,s),a=Math.min(n,i,s);let l,c;const u=(a+o)/2;if(a===o)l=0,c=0;else{const h=o-a;switch(c=u<=.5?h/(o+a):h/(2-o-a),o){case n:l=(i-s)/h+(i<s?6:0);break;case i:l=(s-n)/h+2;break;case s:l=(n-i)/h+4;break}l/=6}return t.h=l,t.s=c,t.l=u,t}getRGB(t,e=Rn.workingColorSpace){return Rn.fromWorkingColorSpace(Ge.copy(this),e),t.r=Ge.r,t.g=Ge.g,t.b=Ge.b,t}getStyle(t=ae){Rn.fromWorkingColorSpace(Ge.copy(this),t);const e=Ge.r,n=Ge.g,i=Ge.b;return t!==ae?`color(${t} ${e.toFixed(3)} ${n.toFixed(3)} ${i.toFixed(3)})`:`rgb(${Math.round(e*255)},${Math.round(n*255)},${Math.round(i*255)})`}offsetHSL(t,e,n){return this.getHSL(Ln),Ln.h+=t,Ln.s+=e,Ln.l+=n,this.setHSL(Ln.h,Ln.s,Ln.l),this}add(t){return this.r+=t.r,this.g+=t.g,this.b+=t.b,this}addColors(t,e){return this.r=t.r+e.r,this.g=t.g+e.g,this.b=t.b+e.b,this}addScalar(t){return this.r+=t,this.g+=t,this.b+=t,this}sub(t){return this.r=Math.max(0,this.r-t.r),this.g=Math.max(0,this.g-t.g),this.b=Math.max(0,this.b-t.b),this}multiply(t){return this.r*=t.r,this.g*=t.g,this.b*=t.b,this}multiplyScalar(t){return this.r*=t,this.g*=t,this.b*=t,this}lerp(t,e){return this.r+=(t.r-this.r)*e,this.g+=(t.g-this.g)*e,this.b+=(t.b-this.b)*e,this}lerpColors(t,e,n){return this.r=t.r+(e.r-t.r)*n,this.g=t.g+(e.g-t.g)*n,this.b=t.b+(e.b-t.b)*n,this}lerpHSL(t,e){this.getHSL(Ln),t.getHSL(co);const n=Ms(Ln.h,co.h,e),i=Ms(Ln.s,co.s,e),s=Ms(Ln.l,co.l,e);return this.setHSL(n,i,s),this}setFromVector3(t){return this.r=t.x,this.g=t.y,this.b=t.z,this}applyMatrix3(t){const e=this.r,n=this.g,i=this.b,s=t.elements;return this.r=s[0]*e+s[3]*n+s[6]*i,this.g=s[1]*e+s[4]*n+s[7]*i,this.b=s[2]*e+s[5]*n+s[8]*i,this}equals(t){return t.r===this.r&&t.g===this.g&&t.b===this.b}fromArray(t,e=0){return this.r=t[e],this.g=t[e+1],this.b=t[e+2],this}toArray(t=[],e=0){return t[e]=this.r,t[e+1]=this.g,t[e+2]=this.b,t}fromBufferAttribute(t,e){return this.r=t.getX(e),this.g=t.getY(e),this.b=t.getZ(e),this}toJSON(){return this.getHex()}*[Symbol.iterator](){yield this.r,yield this.g,yield this.b}}const Ge=new qt;qt.NAMES=Wl;class kn extends lr{constructor(t){super(),this.isMeshBasicMaterial=!0,this.type="MeshBasicMaterial",this.color=new qt(16777215),this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.combine=Ll,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.fog=!0,this.setValues(t)}copy(t){return super.copy(t),this.color.copy(t.color),this.map=t.map,this.lightMap=t.lightMap,this.lightMapIntensity=t.lightMapIntensity,this.aoMap=t.aoMap,this.aoMapIntensity=t.aoMapIntensity,this.specularMap=t.specularMap,this.alphaMap=t.alphaMap,this.envMap=t.envMap,this.combine=t.combine,this.reflectivity=t.reflectivity,this.refractionRatio=t.refractionRatio,this.wireframe=t.wireframe,this.wireframeLinewidth=t.wireframeLinewidth,this.wireframeLinecap=t.wireframeLinecap,this.wireframeLinejoin=t.wireframeLinejoin,this.fog=t.fog,this}}const Te=new P,uo=new it;class oe{constructor(t,e,n=!1){if(Array.isArray(t))throw new TypeError("THREE.BufferAttribute: array should be a Typed Array.");this.isBufferAttribute=!0,this.name="",this.array=t,this.itemSize=e,this.count=t!==void 0?t.length/e:0,this.normalized=n,this.usage=i1,this.updateRange={offset:0,count:-1},this.gpuType=vi,this.version=0}onUploadCallback(){}set needsUpdate(t){t===!0&&this.version++}setUsage(t){return this.usage=t,this}copy(t){return this.name=t.name,this.array=new t.array.constructor(t.array),this.itemSize=t.itemSize,this.count=t.count,this.normalized=t.normalized,this.usage=t.usage,this.gpuType=t.gpuType,this}copyAt(t,e,n){t*=this.itemSize,n*=e.itemSize;for(let i=0,s=this.itemSize;i<s;i++)this.array[t+i]=e.array[n+i];return this}copyArray(t){return this.array.set(t),this}applyMatrix3(t){if(this.itemSize===2)for(let e=0,n=this.count;e<n;e++)uo.fromBufferAttribute(this,e),uo.applyMatrix3(t),this.setXY(e,uo.x,uo.y);else if(this.itemSize===3)for(let e=0,n=this.count;e<n;e++)Te.fromBufferAttribute(this,e),Te.applyMatrix3(t),this.setXYZ(e,Te.x,Te.y,Te.z);return this}applyMatrix4(t){for(let e=0,n=this.count;e<n;e++)Te.fromBufferAttribute(this,e),Te.applyMatrix4(t),this.setXYZ(e,Te.x,Te.y,Te.z);return this}applyNormalMatrix(t){for(let e=0,n=this.count;e<n;e++)Te.fromBufferAttribute(this,e),Te.applyNormalMatrix(t),this.setXYZ(e,Te.x,Te.y,Te.z);return this}transformDirection(t){for(let e=0,n=this.count;e<n;e++)Te.fromBufferAttribute(this,e),Te.transformDirection(t),this.setXYZ(e,Te.x,Te.y,Te.z);return this}set(t,e=0){return this.array.set(t,e),this}getComponent(t,e){let n=this.array[t*this.itemSize+e];return this.normalized&&(n=Ir(n,this.array)),n}setComponent(t,e,n){return this.normalized&&(n=Ye(n,this.array)),this.array[t*this.itemSize+e]=n,this}getX(t){let e=this.array[t*this.itemSize];return this.normalized&&(e=Ir(e,this.array)),e}setX(t,e){return this.normalized&&(e=Ye(e,this.array)),this.array[t*this.itemSize]=e,this}getY(t){let e=this.array[t*this.itemSize+1];return this.normalized&&(e=Ir(e,this.array)),e}setY(t,e){return this.normalized&&(e=Ye(e,this.array)),this.array[t*this.itemSize+1]=e,this}getZ(t){let e=this.array[t*this.itemSize+2];return this.normalized&&(e=Ir(e,this.array)),e}setZ(t,e){return this.normalized&&(e=Ye(e,this.array)),this.array[t*this.itemSize+2]=e,this}getW(t){let e=this.array[t*this.itemSize+3];return this.normalized&&(e=Ir(e,this.array)),e}setW(t,e){return this.normalized&&(e=Ye(e,this.array)),this.array[t*this.itemSize+3]=e,this}setXY(t,e,n){return t*=this.itemSize,this.normalized&&(e=Ye(e,this.array),n=Ye(n,this.array)),this.array[t+0]=e,this.array[t+1]=n,this}setXYZ(t,e,n,i){return t*=this.itemSize,this.normalized&&(e=Ye(e,this.array),n=Ye(n,this.array),i=Ye(i,this.array)),this.array[t+0]=e,this.array[t+1]=n,this.array[t+2]=i,this}setXYZW(t,e,n,i,s){return t*=this.itemSize,this.normalized&&(e=Ye(e,this.array),n=Ye(n,this.array),i=Ye(i,this.array),s=Ye(s,this.array)),this.array[t+0]=e,this.array[t+1]=n,this.array[t+2]=i,this.array[t+3]=s,this}onUpload(t){return this.onUploadCallback=t,this}clone(){return new this.constructor(this.array,this.itemSize).copy(this)}toJSON(){const t={itemSize:this.itemSize,type:this.array.constructor.name,array:Array.from(this.array),normalized:this.normalized};return this.name!==""&&(t.name=this.name),this.usage!==i1&&(t.usage=this.usage),(this.updateRange.offset!==0||this.updateRange.count!==-1)&&(t.updateRange=this.updateRange),t}}class Xl extends oe{constructor(t,e,n){super(new Uint16Array(t),e,n)}}class ql extends oe{constructor(t,e,n){super(new Uint32Array(t),e,n)}}class le extends oe{constructor(t,e,n){super(new Float32Array(t),e,n)}}let ou=0;const gn=new ge,Ia=new pe,Mr=new P,cn=new js,fs=new js,Pe=new P;class Ae extends or{constructor(){super(),this.isBufferGeometry=!0,Object.defineProperty(this,"id",{value:ou++}),this.uuid=ar(),this.name="",this.type="BufferGeometry",this.index=null,this.attributes={},this.morphAttributes={},this.morphTargetsRelative=!1,this.groups=[],this.boundingBox=null,this.boundingSphere=null,this.drawRange={start:0,count:1/0},this.userData={}}getIndex(){return this.index}setIndex(t){return Array.isArray(t)?this.index=new(kl(t)?ql:Xl)(t,1):this.index=t,this}getAttribute(t){return this.attributes[t]}setAttribute(t,e){return this.attributes[t]=e,this}deleteAttribute(t){return delete this.attributes[t],this}hasAttribute(t){return this.attributes[t]!==void 0}addGroup(t,e,n=0){this.groups.push({start:t,count:e,materialIndex:n})}clearGroups(){this.groups=[]}setDrawRange(t,e){this.drawRange.start=t,this.drawRange.count=e}applyMatrix4(t){const e=this.attributes.position;e!==void 0&&(e.applyMatrix4(t),e.needsUpdate=!0);const n=this.attributes.normal;if(n!==void 0){const s=new zt().getNormalMatrix(t);n.applyNormalMatrix(s),n.needsUpdate=!0}const i=this.attributes.tangent;return i!==void 0&&(i.transformDirection(t),i.needsUpdate=!0),this.boundingBox!==null&&this.computeBoundingBox(),this.boundingSphere!==null&&this.computeBoundingSphere(),this}applyQuaternion(t){return gn.makeRotationFromQuaternion(t),this.applyMatrix4(gn),this}rotateX(t){return gn.makeRotationX(t),this.applyMatrix4(gn),this}rotateY(t){return gn.makeRotationY(t),this.applyMatrix4(gn),this}rotateZ(t){return gn.makeRotationZ(t),this.applyMatrix4(gn),this}translate(t,e,n){return gn.makeTranslation(t,e,n),this.applyMatrix4(gn),this}scale(t,e,n){return gn.makeScale(t,e,n),this.applyMatrix4(gn),this}lookAt(t){return Ia.lookAt(t),Ia.updateMatrix(),this.applyMatrix4(Ia.matrix),this}center(){return this.computeBoundingBox(),this.boundingBox.getCenter(Mr).negate(),this.translate(Mr.x,Mr.y,Mr.z),this}setFromPoints(t){const e=[];for(let n=0,i=t.length;n<i;n++){const s=t[n];e.push(s.x,s.y,s.z||0)}return this.setAttribute("position",new le(e,3)),this}computeBoundingBox(){this.boundingBox===null&&(this.boundingBox=new js);const t=this.attributes.position,e=this.morphAttributes.position;if(t&&t.isGLBufferAttribute){console.error('THREE.BufferGeometry.computeBoundingBox(): GLBufferAttribute requires a manual bounding box. Alternatively set "mesh.frustumCulled" to "false".',this),this.boundingBox.set(new P(-1/0,-1/0,-1/0),new P(1/0,1/0,1/0));return}if(t!==void 0){if(this.boundingBox.setFromBufferAttribute(t),e)for(let n=0,i=e.length;n<i;n++){const s=e[n];cn.setFromBufferAttribute(s),this.morphTargetsRelative?(Pe.addVectors(this.boundingBox.min,cn.min),this.boundingBox.expandByPoint(Pe),Pe.addVectors(this.boundingBox.max,cn.max),this.boundingBox.expandByPoint(Pe)):(this.boundingBox.expandByPoint(cn.min),this.boundingBox.expandByPoint(cn.max))}}else this.boundingBox.makeEmpty();(isNaN(this.boundingBox.min.x)||isNaN(this.boundingBox.min.y)||isNaN(this.boundingBox.min.z))&&console.error('THREE.BufferGeometry.computeBoundingBox(): Computed min/max have NaN values. The "position" attribute is likely to have NaN values.',this)}computeBoundingSphere(){this.boundingSphere===null&&(this.boundingSphere=new Zs);const t=this.attributes.position,e=this.morphAttributes.position;if(t&&t.isGLBufferAttribute){console.error('THREE.BufferGeometry.computeBoundingSphere(): GLBufferAttribute requires a manual bounding sphere. Alternatively set "mesh.frustumCulled" to "false".',this),this.boundingSphere.set(new P,1/0);return}if(t){const n=this.boundingSphere.center;if(cn.setFromBufferAttribute(t),e)for(let s=0,o=e.length;s<o;s++){const a=e[s];fs.setFromBufferAttribute(a),this.morphTargetsRelative?(Pe.addVectors(cn.min,fs.min),cn.expandByPoint(Pe),Pe.addVectors(cn.max,fs.max),cn.expandByPoint(Pe)):(cn.expandByPoint(fs.min),cn.expandByPoint(fs.max))}cn.getCenter(n);let i=0;for(let s=0,o=t.count;s<o;s++)Pe.fromBufferAttribute(t,s),i=Math.max(i,n.distanceToSquared(Pe));if(e)for(let s=0,o=e.length;s<o;s++){const a=e[s],l=this.morphTargetsRelative;for(let c=0,u=a.count;c<u;c++)Pe.fromBufferAttribute(a,c),l&&(Mr.fromBufferAttribute(t,c),Pe.add(Mr)),i=Math.max(i,n.distanceToSquared(Pe))}this.boundingSphere.radius=Math.sqrt(i),isNaN(this.boundingSphere.radius)&&console.error('THREE.BufferGeometry.computeBoundingSphere(): Computed radius is NaN. The "position" attribute is likely to have NaN values.',this)}}computeTangents(){const t=this.index,e=this.attributes;if(t===null||e.position===void 0||e.normal===void 0||e.uv===void 0){console.error("THREE.BufferGeometry: .computeTangents() failed. Missing required attributes (index, position, normal or uv)");return}const n=t.array,i=e.position.array,s=e.normal.array,o=e.uv.array,a=i.length/3;this.hasAttribute("tangent")===!1&&this.setAttribute("tangent",new oe(new Float32Array(4*a),4));const l=this.getAttribute("tangent").array,c=[],u=[];for(let b=0;b<a;b++)c[b]=new P,u[b]=new P;const h=new P,f=new P,d=new P,g=new it,_=new it,m=new it,p=new P,M=new P;function v(b,F,z){h.fromArray(i,b*3),f.fromArray(i,F*3),d.fromArray(i,z*3),g.fromArray(o,b*2),_.fromArray(o,F*2),m.fromArray(o,z*2),f.sub(h),d.sub(h),_.sub(g),m.sub(g);const I=1/(_.x*m.y-m.x*_.y);isFinite(I)&&(p.copy(f).multiplyScalar(m.y).addScaledVector(d,-_.y).multiplyScalar(I),M.copy(d).multiplyScalar(_.x).addScaledVector(f,-m.x).multiplyScalar(I),c[b].add(p),c[F].add(p),c[z].add(p),u[b].add(M),u[F].add(M),u[z].add(M))}let x=this.groups;x.length===0&&(x=[{start:0,count:n.length}]);for(let b=0,F=x.length;b<F;++b){const z=x[b],I=z.start,O=z.count;for(let N=I,X=I+O;N<X;N+=3)v(n[N+0],n[N+1],n[N+2])}const S=new P,T=new P,E=new P,A=new P;function y(b){E.fromArray(s,b*3),A.copy(E);const F=c[b];S.copy(F),S.sub(E.multiplyScalar(E.dot(F))).normalize(),T.crossVectors(A,F);const I=T.dot(u[b])<0?-1:1;l[b*4]=S.x,l[b*4+1]=S.y,l[b*4+2]=S.z,l[b*4+3]=I}for(let b=0,F=x.length;b<F;++b){const z=x[b],I=z.start,O=z.count;for(let N=I,X=I+O;N<X;N+=3)y(n[N+0]),y(n[N+1]),y(n[N+2])}}computeVertexNormals(){const t=this.index,e=this.getAttribute("position");if(e!==void 0){let n=this.getAttribute("normal");if(n===void 0)n=new oe(new Float32Array(e.count*3),3),this.setAttribute("normal",n);else for(let f=0,d=n.count;f<d;f++)n.setXYZ(f,0,0,0);const i=new P,s=new P,o=new P,a=new P,l=new P,c=new P,u=new P,h=new P;if(t)for(let f=0,d=t.count;f<d;f+=3){const g=t.getX(f+0),_=t.getX(f+1),m=t.getX(f+2);i.fromBufferAttribute(e,g),s.fromBufferAttribute(e,_),o.fromBufferAttribute(e,m),u.subVectors(o,s),h.subVectors(i,s),u.cross(h),a.fromBufferAttribute(n,g),l.fromBufferAttribute(n,_),c.fromBufferAttribute(n,m),a.add(u),l.add(u),c.add(u),n.setXYZ(g,a.x,a.y,a.z),n.setXYZ(_,l.x,l.y,l.z),n.setXYZ(m,c.x,c.y,c.z)}else for(let f=0,d=e.count;f<d;f+=3)i.fromBufferAttribute(e,f+0),s.fromBufferAttribute(e,f+1),o.fromBufferAttribute(e,f+2),u.subVectors(o,s),h.subVectors(i,s),u.cross(h),n.setXYZ(f+0,u.x,u.y,u.z),n.setXYZ(f+1,u.x,u.y,u.z),n.setXYZ(f+2,u.x,u.y,u.z);this.normalizeNormals(),n.needsUpdate=!0}}normalizeNormals(){const t=this.attributes.normal;for(let e=0,n=t.count;e<n;e++)Pe.fromBufferAttribute(t,e),Pe.normalize(),t.setXYZ(e,Pe.x,Pe.y,Pe.z)}toNonIndexed(){function t(a,l){const c=a.array,u=a.itemSize,h=a.normalized,f=new c.constructor(l.length*u);let d=0,g=0;for(let _=0,m=l.length;_<m;_++){a.isInterleavedBufferAttribute?d=l[_]*a.data.stride+a.offset:d=l[_]*u;for(let p=0;p<u;p++)f[g++]=c[d++]}return new oe(f,u,h)}if(this.index===null)return console.warn("THREE.BufferGeometry.toNonIndexed(): BufferGeometry is already non-indexed."),this;const e=new Ae,n=this.index.array,i=this.attributes;for(const a in i){const l=i[a],c=t(l,n);e.setAttribute(a,c)}const s=this.morphAttributes;for(const a in s){const l=[],c=s[a];for(let u=0,h=c.length;u<h;u++){const f=c[u],d=t(f,n);l.push(d)}e.morphAttributes[a]=l}e.morphTargetsRelative=this.morphTargetsRelative;const o=this.groups;for(let a=0,l=o.length;a<l;a++){const c=o[a];e.addGroup(c.start,c.count,c.materialIndex)}return e}toJSON(){const t={metadata:{version:4.6,type:"BufferGeometry",generator:"BufferGeometry.toJSON"}};if(t.uuid=this.uuid,t.type=this.type,this.name!==""&&(t.name=this.name),Object.keys(this.userData).length>0&&(t.userData=this.userData),this.parameters!==void 0){const l=this.parameters;for(const c in l)l[c]!==void 0&&(t[c]=l[c]);return t}t.data={attributes:{}};const e=this.index;e!==null&&(t.data.index={type:e.array.constructor.name,array:Array.prototype.slice.call(e.array)});const n=this.attributes;for(const l in n){const c=n[l];t.data.attributes[l]=c.toJSON(t.data)}const i={};let s=!1;for(const l in this.morphAttributes){const c=this.morphAttributes[l],u=[];for(let h=0,f=c.length;h<f;h++){const d=c[h];u.push(d.toJSON(t.data))}u.length>0&&(i[l]=u,s=!0)}s&&(t.data.morphAttributes=i,t.data.morphTargetsRelative=this.morphTargetsRelative);const o=this.groups;o.length>0&&(t.data.groups=JSON.parse(JSON.stringify(o)));const a=this.boundingSphere;return a!==null&&(t.data.boundingSphere={center:a.center.toArray(),radius:a.radius}),t}clone(){return new this.constructor().copy(this)}copy(t){this.index=null,this.attributes={},this.morphAttributes={},this.groups=[],this.boundingBox=null,this.boundingSphere=null;const e={};this.name=t.name;const n=t.index;n!==null&&this.setIndex(n.clone(e));const i=t.attributes;for(const c in i){const u=i[c];this.setAttribute(c,u.clone(e))}const s=t.morphAttributes;for(const c in s){const u=[],h=s[c];for(let f=0,d=h.length;f<d;f++)u.push(h[f].clone(e));this.morphAttributes[c]=u}this.morphTargetsRelative=t.morphTargetsRelative;const o=t.groups;for(let c=0,u=o.length;c<u;c++){const h=o[c];this.addGroup(h.start,h.count,h.materialIndex)}const a=t.boundingBox;a!==null&&(this.boundingBox=a.clone());const l=t.boundingSphere;return l!==null&&(this.boundingSphere=l.clone()),this.drawRange.start=t.drawRange.start,this.drawRange.count=t.drawRange.count,this.userData=t.userData,this}dispose(){this.dispatchEvent({type:"dispose"})}}const m1=new ge,Ii=new Ks,ho=new Zs,_1=new P,Sr=new P,Er=new P,Tr=new P,Oa=new P,fo=new P,po=new it,mo=new it,_o=new it,g1=new P,v1=new P,x1=new P,go=new P,vo=new P;class me extends pe{constructor(t=new Ae,e=new kn){super(),this.isMesh=!0,this.type="Mesh",this.geometry=t,this.material=e,this.updateMorphTargets()}copy(t,e){return super.copy(t,e),t.morphTargetInfluences!==void 0&&(this.morphTargetInfluences=t.morphTargetInfluences.slice()),t.morphTargetDictionary!==void 0&&(this.morphTargetDictionary=Object.assign({},t.morphTargetDictionary)),this.material=Array.isArray(t.material)?t.material.slice():t.material,this.geometry=t.geometry,this}updateMorphTargets(){const e=this.geometry.morphAttributes,n=Object.keys(e);if(n.length>0){const i=e[n[0]];if(i!==void 0){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let s=0,o=i.length;s<o;s++){const a=i[s].name||String(s);this.morphTargetInfluences.push(0),this.morphTargetDictionary[a]=s}}}}getVertexPosition(t,e){const n=this.geometry,i=n.attributes.position,s=n.morphAttributes.position,o=n.morphTargetsRelative;e.fromBufferAttribute(i,t);const a=this.morphTargetInfluences;if(s&&a){fo.set(0,0,0);for(let l=0,c=s.length;l<c;l++){const u=a[l],h=s[l];u!==0&&(Oa.fromBufferAttribute(h,t),o?fo.addScaledVector(Oa,u):fo.addScaledVector(Oa.sub(e),u))}e.add(fo)}return e}raycast(t,e){const n=this.geometry,i=this.material,s=this.matrixWorld;i!==void 0&&(n.boundingSphere===null&&n.computeBoundingSphere(),ho.copy(n.boundingSphere),ho.applyMatrix4(s),Ii.copy(t.ray).recast(t.near),!(ho.containsPoint(Ii.origin)===!1&&(Ii.intersectSphere(ho,_1)===null||Ii.origin.distanceToSquared(_1)>(t.far-t.near)**2))&&(m1.copy(s).invert(),Ii.copy(t.ray).applyMatrix4(m1),!(n.boundingBox!==null&&Ii.intersectsBox(n.boundingBox)===!1)&&this._computeIntersections(t,e,Ii)))}_computeIntersections(t,e,n){let i;const s=this.geometry,o=this.material,a=s.index,l=s.attributes.position,c=s.attributes.uv,u=s.attributes.uv1,h=s.attributes.normal,f=s.groups,d=s.drawRange;if(a!==null)if(Array.isArray(o))for(let g=0,_=f.length;g<_;g++){const m=f[g],p=o[m.materialIndex],M=Math.max(m.start,d.start),v=Math.min(a.count,Math.min(m.start+m.count,d.start+d.count));for(let x=M,S=v;x<S;x+=3){const T=a.getX(x),E=a.getX(x+1),A=a.getX(x+2);i=xo(this,p,t,n,c,u,h,T,E,A),i&&(i.faceIndex=Math.floor(x/3),i.face.materialIndex=m.materialIndex,e.push(i))}}else{const g=Math.max(0,d.start),_=Math.min(a.count,d.start+d.count);for(let m=g,p=_;m<p;m+=3){const M=a.getX(m),v=a.getX(m+1),x=a.getX(m+2);i=xo(this,o,t,n,c,u,h,M,v,x),i&&(i.faceIndex=Math.floor(m/3),e.push(i))}}else if(l!==void 0)if(Array.isArray(o))for(let g=0,_=f.length;g<_;g++){const m=f[g],p=o[m.materialIndex],M=Math.max(m.start,d.start),v=Math.min(l.count,Math.min(m.start+m.count,d.start+d.count));for(let x=M,S=v;x<S;x+=3){const T=x,E=x+1,A=x+2;i=xo(this,p,t,n,c,u,h,T,E,A),i&&(i.faceIndex=Math.floor(x/3),i.face.materialIndex=m.materialIndex,e.push(i))}}else{const g=Math.max(0,d.start),_=Math.min(l.count,d.start+d.count);for(let m=g,p=_;m<p;m+=3){const M=m,v=m+1,x=m+2;i=xo(this,o,t,n,c,u,h,M,v,x),i&&(i.faceIndex=Math.floor(m/3),e.push(i))}}}}function au(r,t,e,n,i,s,o,a){let l;if(t.side===ze?l=n.intersectTriangle(o,s,i,!0,a):l=n.intersectTriangle(i,s,o,t.side===wn,a),l===null)return null;vo.copy(a),vo.applyMatrix4(r.matrixWorld);const c=e.ray.origin.distanceTo(vo);return c<e.near||c>e.far?null:{distance:c,point:vo.clone(),object:r}}function xo(r,t,e,n,i,s,o,a,l,c){r.getVertexPosition(a,Sr),r.getVertexPosition(l,Er),r.getVertexPosition(c,Tr);const u=au(r,t,e,n,Sr,Er,Tr,go);if(u){i&&(po.fromBufferAttribute(i,a),mo.fromBufferAttribute(i,l),_o.fromBufferAttribute(i,c),u.uv=Mn.getInterpolation(go,Sr,Er,Tr,po,mo,_o,new it)),s&&(po.fromBufferAttribute(s,a),mo.fromBufferAttribute(s,l),_o.fromBufferAttribute(s,c),u.uv1=Mn.getInterpolation(go,Sr,Er,Tr,po,mo,_o,new it),u.uv2=u.uv1),o&&(g1.fromBufferAttribute(o,a),v1.fromBufferAttribute(o,l),x1.fromBufferAttribute(o,c),u.normal=Mn.getInterpolation(go,Sr,Er,Tr,g1,v1,x1,new P),u.normal.dot(n.direction)>0&&u.normal.multiplyScalar(-1));const h={a,b:l,c,normal:new P,materialIndex:0};Mn.getNormal(Sr,Er,Tr,h.normal),u.face=h}return u}class os extends Ae{constructor(t=1,e=1,n=1,i=1,s=1,o=1){super(),this.type="BoxGeometry",this.parameters={width:t,height:e,depth:n,widthSegments:i,heightSegments:s,depthSegments:o};const a=this;i=Math.floor(i),s=Math.floor(s),o=Math.floor(o);const l=[],c=[],u=[],h=[];let f=0,d=0;g("z","y","x",-1,-1,n,e,t,o,s,0),g("z","y","x",1,-1,n,e,-t,o,s,1),g("x","z","y",1,1,t,n,e,i,o,2),g("x","z","y",1,-1,t,n,-e,i,o,3),g("x","y","z",1,-1,t,e,n,i,s,4),g("x","y","z",-1,-1,t,e,-n,i,s,5),this.setIndex(l),this.setAttribute("position",new le(c,3)),this.setAttribute("normal",new le(u,3)),this.setAttribute("uv",new le(h,2));function g(_,m,p,M,v,x,S,T,E,A,y){const b=x/E,F=S/A,z=x/2,I=S/2,O=T/2,N=E+1,X=A+1;let k=0,Y=0;const Q=new P;for(let $=0;$<X;$++){const B=$*F-I;for(let V=0;V<N;V++){const ht=V*b-z;Q[_]=ht*M,Q[m]=B*v,Q[p]=O,c.push(Q.x,Q.y,Q.z),Q[_]=0,Q[m]=0,Q[p]=T>0?1:-1,u.push(Q.x,Q.y,Q.z),h.push(V/E),h.push(1-$/A),k+=1}}for(let $=0;$<A;$++)for(let B=0;B<E;B++){const V=f+B+N*$,ht=f+B+N*($+1),ct=f+(B+1)+N*($+1),_t=f+(B+1)+N*$;l.push(V,ht,_t),l.push(ht,ct,_t),Y+=6}a.addGroup(d,Y,y),d+=Y,f+=k}}copy(t){return super.copy(t),this.parameters=Object.assign({},t.parameters),this}static fromJSON(t){return new os(t.width,t.height,t.depth,t.widthSegments,t.heightSegments,t.depthSegments)}}function ts(r){const t={};for(const e in r){t[e]={};for(const n in r[e]){const i=r[e][n];i&&(i.isColor||i.isMatrix3||i.isMatrix4||i.isVector2||i.isVector3||i.isVector4||i.isTexture||i.isQuaternion)?i.isRenderTargetTexture?(console.warn("UniformsUtils: Textures of render targets cannot be cloned via cloneUniforms() or mergeUniforms()."),t[e][n]=null):t[e][n]=i.clone():Array.isArray(i)?t[e][n]=i.slice():t[e][n]=i}}return t}function je(r){const t={};for(let e=0;e<r.length;e++){const n=ts(r[e]);for(const i in n)t[i]=n[i]}return t}function lu(r){const t=[];for(let e=0;e<r.length;e++)t.push(r[e].clone());return t}function Yl(r){return r.getRenderTarget()===null?r.outputColorSpace:Hn}const cu={clone:ts,merge:je};var uu=`void main() {
	gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );
}`,hu=`void main() {
	gl_FragColor = vec4( 1.0, 0.0, 0.0, 1.0 );
}`;class oi extends lr{constructor(t){super(),this.isShaderMaterial=!0,this.type="ShaderMaterial",this.defines={},this.uniforms={},this.uniformsGroups=[],this.vertexShader=uu,this.fragmentShader=hu,this.linewidth=1,this.wireframe=!1,this.wireframeLinewidth=1,this.fog=!1,this.lights=!1,this.clipping=!1,this.forceSinglePass=!0,this.extensions={derivatives:!1,fragDepth:!1,drawBuffers:!1,shaderTextureLOD:!1},this.defaultAttributeValues={color:[1,1,1],uv:[0,0],uv1:[0,0]},this.index0AttributeName=void 0,this.uniformsNeedUpdate=!1,this.glslVersion=null,t!==void 0&&this.setValues(t)}copy(t){return super.copy(t),this.fragmentShader=t.fragmentShader,this.vertexShader=t.vertexShader,this.uniforms=ts(t.uniforms),this.uniformsGroups=lu(t.uniformsGroups),this.defines=Object.assign({},t.defines),this.wireframe=t.wireframe,this.wireframeLinewidth=t.wireframeLinewidth,this.fog=t.fog,this.lights=t.lights,this.clipping=t.clipping,this.extensions=Object.assign({},t.extensions),this.glslVersion=t.glslVersion,this}toJSON(t){const e=super.toJSON(t);e.glslVersion=this.glslVersion,e.uniforms={};for(const i in this.uniforms){const o=this.uniforms[i].value;o&&o.isTexture?e.uniforms[i]={type:"t",value:o.toJSON(t).uuid}:o&&o.isColor?e.uniforms[i]={type:"c",value:o.getHex()}:o&&o.isVector2?e.uniforms[i]={type:"v2",value:o.toArray()}:o&&o.isVector3?e.uniforms[i]={type:"v3",value:o.toArray()}:o&&o.isVector4?e.uniforms[i]={type:"v4",value:o.toArray()}:o&&o.isMatrix3?e.uniforms[i]={type:"m3",value:o.toArray()}:o&&o.isMatrix4?e.uniforms[i]={type:"m4",value:o.toArray()}:e.uniforms[i]={value:o}}Object.keys(this.defines).length>0&&(e.defines=this.defines),e.vertexShader=this.vertexShader,e.fragmentShader=this.fragmentShader,e.lights=this.lights,e.clipping=this.clipping;const n={};for(const i in this.extensions)this.extensions[i]===!0&&(n[i]=!0);return Object.keys(n).length>0&&(e.extensions=n),e}}class jl extends pe{constructor(){super(),this.isCamera=!0,this.type="Camera",this.matrixWorldInverse=new ge,this.projectionMatrix=new ge,this.projectionMatrixInverse=new ge,this.coordinateSystem=si}copy(t,e){return super.copy(t,e),this.matrixWorldInverse.copy(t.matrixWorldInverse),this.projectionMatrix.copy(t.projectionMatrix),this.projectionMatrixInverse.copy(t.projectionMatrixInverse),this.coordinateSystem=t.coordinateSystem,this}getWorldDirection(t){this.updateWorldMatrix(!0,!1);const e=this.matrixWorld.elements;return t.set(-e[8],-e[9],-e[10]).normalize()}updateMatrixWorld(t){super.updateMatrixWorld(t),this.matrixWorldInverse.copy(this.matrixWorld).invert()}updateWorldMatrix(t,e){super.updateWorldMatrix(t,e),this.matrixWorldInverse.copy(this.matrixWorld).invert()}clone(){return new this.constructor().copy(this)}}class Sn extends jl{constructor(t=50,e=1,n=.1,i=2e3){super(),this.isPerspectiveCamera=!0,this.type="PerspectiveCamera",this.fov=t,this.zoom=1,this.near=n,this.far=i,this.focus=10,this.aspect=e,this.view=null,this.filmGauge=35,this.filmOffset=0,this.updateProjectionMatrix()}copy(t,e){return super.copy(t,e),this.fov=t.fov,this.zoom=t.zoom,this.near=t.near,this.far=t.far,this.focus=t.focus,this.aspect=t.aspect,this.view=t.view===null?null:Object.assign({},t.view),this.filmGauge=t.filmGauge,this.filmOffset=t.filmOffset,this}setFocalLength(t){const e=.5*this.getFilmHeight()/t;this.fov=Ps*2*Math.atan(e),this.updateProjectionMatrix()}getFocalLength(){const t=Math.tan(ys*.5*this.fov);return .5*this.getFilmHeight()/t}getEffectiveFOV(){return Ps*2*Math.atan(Math.tan(ys*.5*this.fov)/this.zoom)}getFilmWidth(){return this.filmGauge*Math.min(this.aspect,1)}getFilmHeight(){return this.filmGauge/Math.max(this.aspect,1)}setViewOffset(t,e,n,i,s,o){this.aspect=t/e,this.view===null&&(this.view={enabled:!0,fullWidth:1,fullHeight:1,offsetX:0,offsetY:0,width:1,height:1}),this.view.enabled=!0,this.view.fullWidth=t,this.view.fullHeight=e,this.view.offsetX=n,this.view.offsetY=i,this.view.width=s,this.view.height=o,this.updateProjectionMatrix()}clearViewOffset(){this.view!==null&&(this.view.enabled=!1),this.updateProjectionMatrix()}updateProjectionMatrix(){const t=this.near;let e=t*Math.tan(ys*.5*this.fov)/this.zoom,n=2*e,i=this.aspect*n,s=-.5*i;const o=this.view;if(this.view!==null&&this.view.enabled){const l=o.fullWidth,c=o.fullHeight;s+=o.offsetX*i/l,e-=o.offsetY*n/c,i*=o.width/l,n*=o.height/c}const a=this.filmOffset;a!==0&&(s+=t*a/this.getFilmWidth()),this.projectionMatrix.makePerspective(s,s+i,e,e-n,t,this.far,this.coordinateSystem),this.projectionMatrixInverse.copy(this.projectionMatrix).invert()}toJSON(t){const e=super.toJSON(t);return e.object.fov=this.fov,e.object.zoom=this.zoom,e.object.near=this.near,e.object.far=this.far,e.object.focus=this.focus,e.object.aspect=this.aspect,this.view!==null&&(e.object.view=Object.assign({},this.view)),e.object.filmGauge=this.filmGauge,e.object.filmOffset=this.filmOffset,e}}const br=-90,wr=1;class fu extends pe{constructor(t,e,n){super(),this.type="CubeCamera",this.renderTarget=n,this.coordinateSystem=null;const i=new Sn(br,wr,t,e);i.layers=this.layers,this.add(i);const s=new Sn(br,wr,t,e);s.layers=this.layers,this.add(s);const o=new Sn(br,wr,t,e);o.layers=this.layers,this.add(o);const a=new Sn(br,wr,t,e);a.layers=this.layers,this.add(a);const l=new Sn(br,wr,t,e);l.layers=this.layers,this.add(l);const c=new Sn(br,wr,t,e);c.layers=this.layers,this.add(c)}updateCoordinateSystem(){const t=this.coordinateSystem,e=this.children.concat(),[n,i,s,o,a,l]=e;for(const c of e)this.remove(c);if(t===si)n.up.set(0,1,0),n.lookAt(1,0,0),i.up.set(0,1,0),i.lookAt(-1,0,0),s.up.set(0,0,-1),s.lookAt(0,1,0),o.up.set(0,0,1),o.lookAt(0,-1,0),a.up.set(0,1,0),a.lookAt(0,0,1),l.up.set(0,1,0),l.lookAt(0,0,-1);else if(t===No)n.up.set(0,-1,0),n.lookAt(-1,0,0),i.up.set(0,-1,0),i.lookAt(1,0,0),s.up.set(0,0,1),s.lookAt(0,1,0),o.up.set(0,0,-1),o.lookAt(0,-1,0),a.up.set(0,-1,0),a.lookAt(0,0,1),l.up.set(0,-1,0),l.lookAt(0,0,-1);else throw new Error("THREE.CubeCamera.updateCoordinateSystem(): Invalid coordinate system: "+t);for(const c of e)this.add(c),c.updateMatrixWorld()}update(t,e){this.parent===null&&this.updateMatrixWorld();const n=this.renderTarget;this.coordinateSystem!==t.coordinateSystem&&(this.coordinateSystem=t.coordinateSystem,this.updateCoordinateSystem());const[i,s,o,a,l,c]=this.children,u=t.getRenderTarget(),h=t.xr.enabled;t.xr.enabled=!1;const f=n.texture.generateMipmaps;n.texture.generateMipmaps=!1,t.setRenderTarget(n,0),t.render(e,i),t.setRenderTarget(n,1),t.render(e,s),t.setRenderTarget(n,2),t.render(e,o),t.setRenderTarget(n,3),t.render(e,a),t.setRenderTarget(n,4),t.render(e,l),n.texture.generateMipmaps=f,t.setRenderTarget(n,5),t.render(e,c),t.setRenderTarget(u),t.xr.enabled=h,n.texture.needsPMREMUpdate=!0}}class Zl extends tn{constructor(t,e,n,i,s,o,a,l,c,u){t=t!==void 0?t:[],e=e!==void 0?e:$r,super(t,e,n,i,s,o,a,l,c,u),this.isCubeTexture=!0,this.flipY=!1}get images(){return this.image}set images(t){this.image=t}}class du extends tr{constructor(t=1,e={}){super(t,t,e),this.isWebGLCubeRenderTarget=!0;const n={width:t,height:t,depth:1},i=[n,n,n,n,n,n];e.encoding!==void 0&&(Ss("THREE.WebGLCubeRenderTarget: option.encoding has been replaced by option.colorSpace."),e.colorSpace=e.encoding===qi?ae:Yi),this.texture=new Zl(i,e.mapping,e.wrapS,e.wrapT,e.magFilter,e.minFilter,e.format,e.type,e.anisotropy,e.colorSpace),this.texture.isRenderTargetTexture=!0,this.texture.generateMipmaps=e.generateMipmaps!==void 0?e.generateMipmaps:!1,this.texture.minFilter=e.minFilter!==void 0?e.minFilter:yn}fromEquirectangularTexture(t,e){this.texture.type=e.type,this.texture.colorSpace=e.colorSpace,this.texture.generateMipmaps=e.generateMipmaps,this.texture.minFilter=e.minFilter,this.texture.magFilter=e.magFilter;const n={uniforms:{tEquirect:{value:null}},vertexShader:`

				varying vec3 vWorldDirection;

				vec3 transformDirection( in vec3 dir, in mat4 matrix ) {

					return normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );

				}

				void main() {

					vWorldDirection = transformDirection( position, modelMatrix );

					#include <begin_vertex>
					#include <project_vertex>

				}
			`,fragmentShader:`

				uniform sampler2D tEquirect;

				varying vec3 vWorldDirection;

				#include <common>

				void main() {

					vec3 direction = normalize( vWorldDirection );

					vec2 sampleUV = equirectUv( direction );

					gl_FragColor = texture2D( tEquirect, sampleUV );

				}
			`},i=new os(5,5,5),s=new oi({name:"CubemapFromEquirect",uniforms:ts(n.uniforms),vertexShader:n.vertexShader,fragmentShader:n.fragmentShader,side:ze,blending:Si});s.uniforms.tEquirect.value=e;const o=new me(i,s),a=e.minFilter;return e.minFilter===Rs&&(e.minFilter=yn),new fu(1,10,this).update(t,o),e.minFilter=a,o.geometry.dispose(),o.material.dispose(),this}clear(t,e,n,i){const s=t.getRenderTarget();for(let o=0;o<6;o++)t.setRenderTarget(this,o),t.clear(e,n,i);t.setRenderTarget(s)}}const Na=new P,pu=new P,mu=new zt;class pi{constructor(t=new P(1,0,0),e=0){this.isPlane=!0,this.normal=t,this.constant=e}set(t,e){return this.normal.copy(t),this.constant=e,this}setComponents(t,e,n,i){return this.normal.set(t,e,n),this.constant=i,this}setFromNormalAndCoplanarPoint(t,e){return this.normal.copy(t),this.constant=-e.dot(this.normal),this}setFromCoplanarPoints(t,e,n){const i=Na.subVectors(n,e).cross(pu.subVectors(t,e)).normalize();return this.setFromNormalAndCoplanarPoint(i,t),this}copy(t){return this.normal.copy(t.normal),this.constant=t.constant,this}normalize(){const t=1/this.normal.length();return this.normal.multiplyScalar(t),this.constant*=t,this}negate(){return this.constant*=-1,this.normal.negate(),this}distanceToPoint(t){return this.normal.dot(t)+this.constant}distanceToSphere(t){return this.distanceToPoint(t.center)-t.radius}projectPoint(t,e){return e.copy(t).addScaledVector(this.normal,-this.distanceToPoint(t))}intersectLine(t,e){const n=t.delta(Na),i=this.normal.dot(n);if(i===0)return this.distanceToPoint(t.start)===0?e.copy(t.start):null;const s=-(t.start.dot(this.normal)+this.constant)/i;return s<0||s>1?null:e.copy(t.start).addScaledVector(n,s)}intersectsLine(t){const e=this.distanceToPoint(t.start),n=this.distanceToPoint(t.end);return e<0&&n>0||n<0&&e>0}intersectsBox(t){return t.intersectsPlane(this)}intersectsSphere(t){return t.intersectsPlane(this)}coplanarPoint(t){return t.copy(this.normal).multiplyScalar(-this.constant)}applyMatrix4(t,e){const n=e||mu.getNormalMatrix(t),i=this.coplanarPoint(Na).applyMatrix4(t),s=this.normal.applyMatrix3(n).normalize();return this.constant=-i.dot(s),this}translate(t){return this.constant-=t.dot(this.normal),this}equals(t){return t.normal.equals(this.normal)&&t.constant===this.constant}clone(){return new this.constructor().copy(this)}}const Oi=new Zs,yo=new P;class V0{constructor(t=new pi,e=new pi,n=new pi,i=new pi,s=new pi,o=new pi){this.planes=[t,e,n,i,s,o]}set(t,e,n,i,s,o){const a=this.planes;return a[0].copy(t),a[1].copy(e),a[2].copy(n),a[3].copy(i),a[4].copy(s),a[5].copy(o),this}copy(t){const e=this.planes;for(let n=0;n<6;n++)e[n].copy(t.planes[n]);return this}setFromProjectionMatrix(t,e=si){const n=this.planes,i=t.elements,s=i[0],o=i[1],a=i[2],l=i[3],c=i[4],u=i[5],h=i[6],f=i[7],d=i[8],g=i[9],_=i[10],m=i[11],p=i[12],M=i[13],v=i[14],x=i[15];if(n[0].setComponents(l-s,f-c,m-d,x-p).normalize(),n[1].setComponents(l+s,f+c,m+d,x+p).normalize(),n[2].setComponents(l+o,f+u,m+g,x+M).normalize(),n[3].setComponents(l-o,f-u,m-g,x-M).normalize(),n[4].setComponents(l-a,f-h,m-_,x-v).normalize(),e===si)n[5].setComponents(l+a,f+h,m+_,x+v).normalize();else if(e===No)n[5].setComponents(a,h,_,v).normalize();else throw new Error("THREE.Frustum.setFromProjectionMatrix(): Invalid coordinate system: "+e);return this}intersectsObject(t){if(t.boundingSphere!==void 0)t.boundingSphere===null&&t.computeBoundingSphere(),Oi.copy(t.boundingSphere).applyMatrix4(t.matrixWorld);else{const e=t.geometry;e.boundingSphere===null&&e.computeBoundingSphere(),Oi.copy(e.boundingSphere).applyMatrix4(t.matrixWorld)}return this.intersectsSphere(Oi)}intersectsSprite(t){return Oi.center.set(0,0,0),Oi.radius=.7071067811865476,Oi.applyMatrix4(t.matrixWorld),this.intersectsSphere(Oi)}intersectsSphere(t){const e=this.planes,n=t.center,i=-t.radius;for(let s=0;s<6;s++)if(e[s].distanceToPoint(n)<i)return!1;return!0}intersectsBox(t){const e=this.planes;for(let n=0;n<6;n++){const i=e[n];if(yo.x=i.normal.x>0?t.max.x:t.min.x,yo.y=i.normal.y>0?t.max.y:t.min.y,yo.z=i.normal.z>0?t.max.z:t.min.z,i.distanceToPoint(yo)<0)return!1}return!0}containsPoint(t){const e=this.planes;for(let n=0;n<6;n++)if(e[n].distanceToPoint(t)<0)return!1;return!0}clone(){return new this.constructor().copy(this)}}function Kl(){let r=null,t=!1,e=null,n=null;function i(s,o){e(s,o),n=r.requestAnimationFrame(i)}return{start:function(){t!==!0&&e!==null&&(n=r.requestAnimationFrame(i),t=!0)},stop:function(){r.cancelAnimationFrame(n),t=!1},setAnimationLoop:function(s){e=s},setContext:function(s){r=s}}}function _u(r,t){const e=t.isWebGL2,n=new WeakMap;function i(c,u){const h=c.array,f=c.usage,d=r.createBuffer();r.bindBuffer(u,d),r.bufferData(u,h,f),c.onUploadCallback();let g;if(h instanceof Float32Array)g=r.FLOAT;else if(h instanceof Uint16Array)if(c.isFloat16BufferAttribute)if(e)g=r.HALF_FLOAT;else throw new Error("THREE.WebGLAttributes: Usage of Float16BufferAttribute requires WebGL2.");else g=r.UNSIGNED_SHORT;else if(h instanceof Int16Array)g=r.SHORT;else if(h instanceof Uint32Array)g=r.UNSIGNED_INT;else if(h instanceof Int32Array)g=r.INT;else if(h instanceof Int8Array)g=r.BYTE;else if(h instanceof Uint8Array)g=r.UNSIGNED_BYTE;else if(h instanceof Uint8ClampedArray)g=r.UNSIGNED_BYTE;else throw new Error("THREE.WebGLAttributes: Unsupported buffer data format: "+h);return{buffer:d,type:g,bytesPerElement:h.BYTES_PER_ELEMENT,version:c.version}}function s(c,u,h){const f=u.array,d=u.updateRange;r.bindBuffer(h,c),d.count===-1?r.bufferSubData(h,0,f):(e?r.bufferSubData(h,d.offset*f.BYTES_PER_ELEMENT,f,d.offset,d.count):r.bufferSubData(h,d.offset*f.BYTES_PER_ELEMENT,f.subarray(d.offset,d.offset+d.count)),d.count=-1),u.onUploadCallback()}function o(c){return c.isInterleavedBufferAttribute&&(c=c.data),n.get(c)}function a(c){c.isInterleavedBufferAttribute&&(c=c.data);const u=n.get(c);u&&(r.deleteBuffer(u.buffer),n.delete(c))}function l(c,u){if(c.isGLBufferAttribute){const f=n.get(c);(!f||f.version<c.version)&&n.set(c,{buffer:c.buffer,type:c.type,bytesPerElement:c.elementSize,version:c.version});return}c.isInterleavedBufferAttribute&&(c=c.data);const h=n.get(c);h===void 0?n.set(c,i(c,u)):h.version<c.version&&(s(h.buffer,c,u),h.version=c.version)}return{get:o,remove:a,update:l}}class ji extends Ae{constructor(t=1,e=1,n=1,i=1){super(),this.type="PlaneGeometry",this.parameters={width:t,height:e,widthSegments:n,heightSegments:i};const s=t/2,o=e/2,a=Math.floor(n),l=Math.floor(i),c=a+1,u=l+1,h=t/a,f=e/l,d=[],g=[],_=[],m=[];for(let p=0;p<u;p++){const M=p*f-o;for(let v=0;v<c;v++){const x=v*h-s;g.push(x,-M,0),_.push(0,0,1),m.push(v/a),m.push(1-p/l)}}for(let p=0;p<l;p++)for(let M=0;M<a;M++){const v=M+c*p,x=M+c*(p+1),S=M+1+c*(p+1),T=M+1+c*p;d.push(v,x,T),d.push(x,S,T)}this.setIndex(d),this.setAttribute("position",new le(g,3)),this.setAttribute("normal",new le(_,3)),this.setAttribute("uv",new le(m,2))}copy(t){return super.copy(t),this.parameters=Object.assign({},t.parameters),this}static fromJSON(t){return new ji(t.width,t.height,t.widthSegments,t.heightSegments)}}var gu=`#ifdef USE_ALPHAHASH
	if ( diffuseColor.a < getAlphaHashThreshold( vPosition ) ) discard;
#endif`,vu=`#ifdef USE_ALPHAHASH
	const float ALPHA_HASH_SCALE = 0.05;
	float hash2D( vec2 value ) {
		return fract( 1.0e4 * sin( 17.0 * value.x + 0.1 * value.y ) * ( 0.1 + abs( sin( 13.0 * value.y + value.x ) ) ) );
	}
	float hash3D( vec3 value ) {
		return hash2D( vec2( hash2D( value.xy ), value.z ) );
	}
	float getAlphaHashThreshold( vec3 position ) {
		float maxDeriv = max(
			length( dFdx( position.xyz ) ),
			length( dFdy( position.xyz ) )
		);
		float pixScale = 1.0 / ( ALPHA_HASH_SCALE * maxDeriv );
		vec2 pixScales = vec2(
			exp2( floor( log2( pixScale ) ) ),
			exp2( ceil( log2( pixScale ) ) )
		);
		vec2 alpha = vec2(
			hash3D( floor( pixScales.x * position.xyz ) ),
			hash3D( floor( pixScales.y * position.xyz ) )
		);
		float lerpFactor = fract( log2( pixScale ) );
		float x = ( 1.0 - lerpFactor ) * alpha.x + lerpFactor * alpha.y;
		float a = min( lerpFactor, 1.0 - lerpFactor );
		vec3 cases = vec3(
			x * x / ( 2.0 * a * ( 1.0 - a ) ),
			( x - 0.5 * a ) / ( 1.0 - a ),
			1.0 - ( ( 1.0 - x ) * ( 1.0 - x ) / ( 2.0 * a * ( 1.0 - a ) ) )
		);
		float threshold = ( x < ( 1.0 - a ) )
			? ( ( x < a ) ? cases.x : cases.y )
			: cases.z;
		return clamp( threshold , 1.0e-6, 1.0 );
	}
#endif`,xu=`#ifdef USE_ALPHAMAP
	diffuseColor.a *= texture2D( alphaMap, vAlphaMapUv ).g;
#endif`,yu=`#ifdef USE_ALPHAMAP
	uniform sampler2D alphaMap;
#endif`,Mu=`#ifdef USE_ALPHATEST
	if ( diffuseColor.a < alphaTest ) discard;
#endif`,Su=`#ifdef USE_ALPHATEST
	uniform float alphaTest;
#endif`,Eu=`#ifdef USE_AOMAP
	float ambientOcclusion = ( texture2D( aoMap, vAoMapUv ).r - 1.0 ) * aoMapIntensity + 1.0;
	reflectedLight.indirectDiffuse *= ambientOcclusion;
	#if defined( USE_ENVMAP ) && defined( STANDARD )
		float dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );
		reflectedLight.indirectSpecular *= computeSpecularOcclusion( dotNV, ambientOcclusion, material.roughness );
	#endif
#endif`,Tu=`#ifdef USE_AOMAP
	uniform sampler2D aoMap;
	uniform float aoMapIntensity;
#endif`,bu=`vec3 transformed = vec3( position );
#ifdef USE_ALPHAHASH
	vPosition = vec3( position );
#endif`,wu=`vec3 objectNormal = vec3( normal );
#ifdef USE_TANGENT
	vec3 objectTangent = vec3( tangent.xyz );
#endif`,Au=`float G_BlinnPhong_Implicit( ) {
	return 0.25;
}
float D_BlinnPhong( const in float shininess, const in float dotNH ) {
	return RECIPROCAL_PI * ( shininess * 0.5 + 1.0 ) * pow( dotNH, shininess );
}
vec3 BRDF_BlinnPhong( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in vec3 specularColor, const in float shininess ) {
	vec3 halfDir = normalize( lightDir + viewDir );
	float dotNH = saturate( dot( normal, halfDir ) );
	float dotVH = saturate( dot( viewDir, halfDir ) );
	vec3 F = F_Schlick( specularColor, 1.0, dotVH );
	float G = G_BlinnPhong_Implicit( );
	float D = D_BlinnPhong( shininess, dotNH );
	return F * ( G * D );
} // validated`,Ru=`#ifdef USE_IRIDESCENCE
	const mat3 XYZ_TO_REC709 = mat3(
		 3.2404542, -0.9692660,  0.0556434,
		-1.5371385,  1.8760108, -0.2040259,
		-0.4985314,  0.0415560,  1.0572252
	);
	vec3 Fresnel0ToIor( vec3 fresnel0 ) {
		vec3 sqrtF0 = sqrt( fresnel0 );
		return ( vec3( 1.0 ) + sqrtF0 ) / ( vec3( 1.0 ) - sqrtF0 );
	}
	vec3 IorToFresnel0( vec3 transmittedIor, float incidentIor ) {
		return pow2( ( transmittedIor - vec3( incidentIor ) ) / ( transmittedIor + vec3( incidentIor ) ) );
	}
	float IorToFresnel0( float transmittedIor, float incidentIor ) {
		return pow2( ( transmittedIor - incidentIor ) / ( transmittedIor + incidentIor ));
	}
	vec3 evalSensitivity( float OPD, vec3 shift ) {
		float phase = 2.0 * PI * OPD * 1.0e-9;
		vec3 val = vec3( 5.4856e-13, 4.4201e-13, 5.2481e-13 );
		vec3 pos = vec3( 1.6810e+06, 1.7953e+06, 2.2084e+06 );
		vec3 var = vec3( 4.3278e+09, 9.3046e+09, 6.6121e+09 );
		vec3 xyz = val * sqrt( 2.0 * PI * var ) * cos( pos * phase + shift ) * exp( - pow2( phase ) * var );
		xyz.x += 9.7470e-14 * sqrt( 2.0 * PI * 4.5282e+09 ) * cos( 2.2399e+06 * phase + shift[ 0 ] ) * exp( - 4.5282e+09 * pow2( phase ) );
		xyz /= 1.0685e-7;
		vec3 rgb = XYZ_TO_REC709 * xyz;
		return rgb;
	}
	vec3 evalIridescence( float outsideIOR, float eta2, float cosTheta1, float thinFilmThickness, vec3 baseF0 ) {
		vec3 I;
		float iridescenceIOR = mix( outsideIOR, eta2, smoothstep( 0.0, 0.03, thinFilmThickness ) );
		float sinTheta2Sq = pow2( outsideIOR / iridescenceIOR ) * ( 1.0 - pow2( cosTheta1 ) );
		float cosTheta2Sq = 1.0 - sinTheta2Sq;
		if ( cosTheta2Sq < 0.0 ) {
			return vec3( 1.0 );
		}
		float cosTheta2 = sqrt( cosTheta2Sq );
		float R0 = IorToFresnel0( iridescenceIOR, outsideIOR );
		float R12 = F_Schlick( R0, 1.0, cosTheta1 );
		float T121 = 1.0 - R12;
		float phi12 = 0.0;
		if ( iridescenceIOR < outsideIOR ) phi12 = PI;
		float phi21 = PI - phi12;
		vec3 baseIOR = Fresnel0ToIor( clamp( baseF0, 0.0, 0.9999 ) );		vec3 R1 = IorToFresnel0( baseIOR, iridescenceIOR );
		vec3 R23 = F_Schlick( R1, 1.0, cosTheta2 );
		vec3 phi23 = vec3( 0.0 );
		if ( baseIOR[ 0 ] < iridescenceIOR ) phi23[ 0 ] = PI;
		if ( baseIOR[ 1 ] < iridescenceIOR ) phi23[ 1 ] = PI;
		if ( baseIOR[ 2 ] < iridescenceIOR ) phi23[ 2 ] = PI;
		float OPD = 2.0 * iridescenceIOR * thinFilmThickness * cosTheta2;
		vec3 phi = vec3( phi21 ) + phi23;
		vec3 R123 = clamp( R12 * R23, 1e-5, 0.9999 );
		vec3 r123 = sqrt( R123 );
		vec3 Rs = pow2( T121 ) * R23 / ( vec3( 1.0 ) - R123 );
		vec3 C0 = R12 + Rs;
		I = C0;
		vec3 Cm = Rs - T121;
		for ( int m = 1; m <= 2; ++ m ) {
			Cm *= r123;
			vec3 Sm = 2.0 * evalSensitivity( float( m ) * OPD, float( m ) * phi );
			I += Cm * Sm;
		}
		return max( I, vec3( 0.0 ) );
	}
#endif`,Cu=`#ifdef USE_BUMPMAP
	uniform sampler2D bumpMap;
	uniform float bumpScale;
	vec2 dHdxy_fwd() {
		vec2 dSTdx = dFdx( vBumpMapUv );
		vec2 dSTdy = dFdy( vBumpMapUv );
		float Hll = bumpScale * texture2D( bumpMap, vBumpMapUv ).x;
		float dBx = bumpScale * texture2D( bumpMap, vBumpMapUv + dSTdx ).x - Hll;
		float dBy = bumpScale * texture2D( bumpMap, vBumpMapUv + dSTdy ).x - Hll;
		return vec2( dBx, dBy );
	}
	vec3 perturbNormalArb( vec3 surf_pos, vec3 surf_norm, vec2 dHdxy, float faceDirection ) {
		vec3 vSigmaX = dFdx( surf_pos.xyz );
		vec3 vSigmaY = dFdy( surf_pos.xyz );
		vec3 vN = surf_norm;
		vec3 R1 = cross( vSigmaY, vN );
		vec3 R2 = cross( vN, vSigmaX );
		float fDet = dot( vSigmaX, R1 ) * faceDirection;
		vec3 vGrad = sign( fDet ) * ( dHdxy.x * R1 + dHdxy.y * R2 );
		return normalize( abs( fDet ) * surf_norm - vGrad );
	}
#endif`,Pu=`#if NUM_CLIPPING_PLANES > 0
	vec4 plane;
	#pragma unroll_loop_start
	for ( int i = 0; i < UNION_CLIPPING_PLANES; i ++ ) {
		plane = clippingPlanes[ i ];
		if ( dot( vClipPosition, plane.xyz ) > plane.w ) discard;
	}
	#pragma unroll_loop_end
	#if UNION_CLIPPING_PLANES < NUM_CLIPPING_PLANES
		bool clipped = true;
		#pragma unroll_loop_start
		for ( int i = UNION_CLIPPING_PLANES; i < NUM_CLIPPING_PLANES; i ++ ) {
			plane = clippingPlanes[ i ];
			clipped = ( dot( vClipPosition, plane.xyz ) > plane.w ) && clipped;
		}
		#pragma unroll_loop_end
		if ( clipped ) discard;
	#endif
#endif`,Lu=`#if NUM_CLIPPING_PLANES > 0
	varying vec3 vClipPosition;
	uniform vec4 clippingPlanes[ NUM_CLIPPING_PLANES ];
#endif`,Du=`#if NUM_CLIPPING_PLANES > 0
	varying vec3 vClipPosition;
#endif`,Uu=`#if NUM_CLIPPING_PLANES > 0
	vClipPosition = - mvPosition.xyz;
#endif`,Iu=`#if defined( USE_COLOR_ALPHA )
	diffuseColor *= vColor;
#elif defined( USE_COLOR )
	diffuseColor.rgb *= vColor;
#endif`,Ou=`#if defined( USE_COLOR_ALPHA )
	varying vec4 vColor;
#elif defined( USE_COLOR )
	varying vec3 vColor;
#endif`,Nu=`#if defined( USE_COLOR_ALPHA )
	varying vec4 vColor;
#elif defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR )
	varying vec3 vColor;
#endif`,Fu=`#if defined( USE_COLOR_ALPHA )
	vColor = vec4( 1.0 );
#elif defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR )
	vColor = vec3( 1.0 );
#endif
#ifdef USE_COLOR
	vColor *= color;
#endif
#ifdef USE_INSTANCING_COLOR
	vColor.xyz *= instanceColor.xyz;
#endif`,zu=`#define PI 3.141592653589793
#define PI2 6.283185307179586
#define PI_HALF 1.5707963267948966
#define RECIPROCAL_PI 0.3183098861837907
#define RECIPROCAL_PI2 0.15915494309189535
#define EPSILON 1e-6
#ifndef saturate
#define saturate( a ) clamp( a, 0.0, 1.0 )
#endif
#define whiteComplement( a ) ( 1.0 - saturate( a ) )
float pow2( const in float x ) { return x*x; }
vec3 pow2( const in vec3 x ) { return x*x; }
float pow3( const in float x ) { return x*x*x; }
float pow4( const in float x ) { float x2 = x*x; return x2*x2; }
float max3( const in vec3 v ) { return max( max( v.x, v.y ), v.z ); }
float average( const in vec3 v ) { return dot( v, vec3( 0.3333333 ) ); }
highp float rand( const in vec2 uv ) {
	const highp float a = 12.9898, b = 78.233, c = 43758.5453;
	highp float dt = dot( uv.xy, vec2( a,b ) ), sn = mod( dt, PI );
	return fract( sin( sn ) * c );
}
#ifdef HIGH_PRECISION
	float precisionSafeLength( vec3 v ) { return length( v ); }
#else
	float precisionSafeLength( vec3 v ) {
		float maxComponent = max3( abs( v ) );
		return length( v / maxComponent ) * maxComponent;
	}
#endif
struct IncidentLight {
	vec3 color;
	vec3 direction;
	bool visible;
};
struct ReflectedLight {
	vec3 directDiffuse;
	vec3 directSpecular;
	vec3 indirectDiffuse;
	vec3 indirectSpecular;
};
struct GeometricContext {
	vec3 position;
	vec3 normal;
	vec3 viewDir;
#ifdef USE_CLEARCOAT
	vec3 clearcoatNormal;
#endif
};
#ifdef USE_ALPHAHASH
	varying vec3 vPosition;
#endif
vec3 transformDirection( in vec3 dir, in mat4 matrix ) {
	return normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );
}
vec3 inverseTransformDirection( in vec3 dir, in mat4 matrix ) {
	return normalize( ( vec4( dir, 0.0 ) * matrix ).xyz );
}
mat3 transposeMat3( const in mat3 m ) {
	mat3 tmp;
	tmp[ 0 ] = vec3( m[ 0 ].x, m[ 1 ].x, m[ 2 ].x );
	tmp[ 1 ] = vec3( m[ 0 ].y, m[ 1 ].y, m[ 2 ].y );
	tmp[ 2 ] = vec3( m[ 0 ].z, m[ 1 ].z, m[ 2 ].z );
	return tmp;
}
float luminance( const in vec3 rgb ) {
	const vec3 weights = vec3( 0.2126729, 0.7151522, 0.0721750 );
	return dot( weights, rgb );
}
bool isPerspectiveMatrix( mat4 m ) {
	return m[ 2 ][ 3 ] == - 1.0;
}
vec2 equirectUv( in vec3 dir ) {
	float u = atan( dir.z, dir.x ) * RECIPROCAL_PI2 + 0.5;
	float v = asin( clamp( dir.y, - 1.0, 1.0 ) ) * RECIPROCAL_PI + 0.5;
	return vec2( u, v );
}
vec3 BRDF_Lambert( const in vec3 diffuseColor ) {
	return RECIPROCAL_PI * diffuseColor;
}
vec3 F_Schlick( const in vec3 f0, const in float f90, const in float dotVH ) {
	float fresnel = exp2( ( - 5.55473 * dotVH - 6.98316 ) * dotVH );
	return f0 * ( 1.0 - fresnel ) + ( f90 * fresnel );
}
float F_Schlick( const in float f0, const in float f90, const in float dotVH ) {
	float fresnel = exp2( ( - 5.55473 * dotVH - 6.98316 ) * dotVH );
	return f0 * ( 1.0 - fresnel ) + ( f90 * fresnel );
} // validated`,Bu=`#ifdef ENVMAP_TYPE_CUBE_UV
	#define cubeUV_minMipLevel 4.0
	#define cubeUV_minTileSize 16.0
	float getFace( vec3 direction ) {
		vec3 absDirection = abs( direction );
		float face = - 1.0;
		if ( absDirection.x > absDirection.z ) {
			if ( absDirection.x > absDirection.y )
				face = direction.x > 0.0 ? 0.0 : 3.0;
			else
				face = direction.y > 0.0 ? 1.0 : 4.0;
		} else {
			if ( absDirection.z > absDirection.y )
				face = direction.z > 0.0 ? 2.0 : 5.0;
			else
				face = direction.y > 0.0 ? 1.0 : 4.0;
		}
		return face;
	}
	vec2 getUV( vec3 direction, float face ) {
		vec2 uv;
		if ( face == 0.0 ) {
			uv = vec2( direction.z, direction.y ) / abs( direction.x );
		} else if ( face == 1.0 ) {
			uv = vec2( - direction.x, - direction.z ) / abs( direction.y );
		} else if ( face == 2.0 ) {
			uv = vec2( - direction.x, direction.y ) / abs( direction.z );
		} else if ( face == 3.0 ) {
			uv = vec2( - direction.z, direction.y ) / abs( direction.x );
		} else if ( face == 4.0 ) {
			uv = vec2( - direction.x, direction.z ) / abs( direction.y );
		} else {
			uv = vec2( direction.x, direction.y ) / abs( direction.z );
		}
		return 0.5 * ( uv + 1.0 );
	}
	vec3 bilinearCubeUV( sampler2D envMap, vec3 direction, float mipInt ) {
		float face = getFace( direction );
		float filterInt = max( cubeUV_minMipLevel - mipInt, 0.0 );
		mipInt = max( mipInt, cubeUV_minMipLevel );
		float faceSize = exp2( mipInt );
		highp vec2 uv = getUV( direction, face ) * ( faceSize - 2.0 ) + 1.0;
		if ( face > 2.0 ) {
			uv.y += faceSize;
			face -= 3.0;
		}
		uv.x += face * faceSize;
		uv.x += filterInt * 3.0 * cubeUV_minTileSize;
		uv.y += 4.0 * ( exp2( CUBEUV_MAX_MIP ) - faceSize );
		uv.x *= CUBEUV_TEXEL_WIDTH;
		uv.y *= CUBEUV_TEXEL_HEIGHT;
		#ifdef texture2DGradEXT
			return texture2DGradEXT( envMap, uv, vec2( 0.0 ), vec2( 0.0 ) ).rgb;
		#else
			return texture2D( envMap, uv ).rgb;
		#endif
	}
	#define cubeUV_r0 1.0
	#define cubeUV_v0 0.339
	#define cubeUV_m0 - 2.0
	#define cubeUV_r1 0.8
	#define cubeUV_v1 0.276
	#define cubeUV_m1 - 1.0
	#define cubeUV_r4 0.4
	#define cubeUV_v4 0.046
	#define cubeUV_m4 2.0
	#define cubeUV_r5 0.305
	#define cubeUV_v5 0.016
	#define cubeUV_m5 3.0
	#define cubeUV_r6 0.21
	#define cubeUV_v6 0.0038
	#define cubeUV_m6 4.0
	float roughnessToMip( float roughness ) {
		float mip = 0.0;
		if ( roughness >= cubeUV_r1 ) {
			mip = ( cubeUV_r0 - roughness ) * ( cubeUV_m1 - cubeUV_m0 ) / ( cubeUV_r0 - cubeUV_r1 ) + cubeUV_m0;
		} else if ( roughness >= cubeUV_r4 ) {
			mip = ( cubeUV_r1 - roughness ) * ( cubeUV_m4 - cubeUV_m1 ) / ( cubeUV_r1 - cubeUV_r4 ) + cubeUV_m1;
		} else if ( roughness >= cubeUV_r5 ) {
			mip = ( cubeUV_r4 - roughness ) * ( cubeUV_m5 - cubeUV_m4 ) / ( cubeUV_r4 - cubeUV_r5 ) + cubeUV_m4;
		} else if ( roughness >= cubeUV_r6 ) {
			mip = ( cubeUV_r5 - roughness ) * ( cubeUV_m6 - cubeUV_m5 ) / ( cubeUV_r5 - cubeUV_r6 ) + cubeUV_m5;
		} else {
			mip = - 2.0 * log2( 1.16 * roughness );		}
		return mip;
	}
	vec4 textureCubeUV( sampler2D envMap, vec3 sampleDir, float roughness ) {
		float mip = clamp( roughnessToMip( roughness ), cubeUV_m0, CUBEUV_MAX_MIP );
		float mipF = fract( mip );
		float mipInt = floor( mip );
		vec3 color0 = bilinearCubeUV( envMap, sampleDir, mipInt );
		if ( mipF == 0.0 ) {
			return vec4( color0, 1.0 );
		} else {
			vec3 color1 = bilinearCubeUV( envMap, sampleDir, mipInt + 1.0 );
			return vec4( mix( color0, color1, mipF ), 1.0 );
		}
	}
#endif`,ku=`vec3 transformedNormal = objectNormal;
#ifdef USE_INSTANCING
	mat3 m = mat3( instanceMatrix );
	transformedNormal /= vec3( dot( m[ 0 ], m[ 0 ] ), dot( m[ 1 ], m[ 1 ] ), dot( m[ 2 ], m[ 2 ] ) );
	transformedNormal = m * transformedNormal;
#endif
transformedNormal = normalMatrix * transformedNormal;
#ifdef FLIP_SIDED
	transformedNormal = - transformedNormal;
#endif
#ifdef USE_TANGENT
	vec3 transformedTangent = ( modelViewMatrix * vec4( objectTangent, 0.0 ) ).xyz;
	#ifdef FLIP_SIDED
		transformedTangent = - transformedTangent;
	#endif
#endif`,Gu=`#ifdef USE_DISPLACEMENTMAP
	uniform sampler2D displacementMap;
	uniform float displacementScale;
	uniform float displacementBias;
#endif`,Hu=`#ifdef USE_DISPLACEMENTMAP
	transformed += normalize( objectNormal ) * ( texture2D( displacementMap, vDisplacementMapUv ).x * displacementScale + displacementBias );
#endif`,Vu=`#ifdef USE_EMISSIVEMAP
	vec4 emissiveColor = texture2D( emissiveMap, vEmissiveMapUv );
	totalEmissiveRadiance *= emissiveColor.rgb;
#endif`,Wu=`#ifdef USE_EMISSIVEMAP
	uniform sampler2D emissiveMap;
#endif`,Xu="gl_FragColor = linearToOutputTexel( gl_FragColor );",qu=`vec4 LinearToLinear( in vec4 value ) {
	return value;
}
vec4 LinearTosRGB( in vec4 value ) {
	return vec4( mix( pow( value.rgb, vec3( 0.41666 ) ) * 1.055 - vec3( 0.055 ), value.rgb * 12.92, vec3( lessThanEqual( value.rgb, vec3( 0.0031308 ) ) ) ), value.a );
}`,Yu=`#ifdef USE_ENVMAP
	#ifdef ENV_WORLDPOS
		vec3 cameraToFrag;
		if ( isOrthographic ) {
			cameraToFrag = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );
		} else {
			cameraToFrag = normalize( vWorldPosition - cameraPosition );
		}
		vec3 worldNormal = inverseTransformDirection( normal, viewMatrix );
		#ifdef ENVMAP_MODE_REFLECTION
			vec3 reflectVec = reflect( cameraToFrag, worldNormal );
		#else
			vec3 reflectVec = refract( cameraToFrag, worldNormal, refractionRatio );
		#endif
	#else
		vec3 reflectVec = vReflect;
	#endif
	#ifdef ENVMAP_TYPE_CUBE
		vec4 envColor = textureCube( envMap, vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );
	#else
		vec4 envColor = vec4( 0.0 );
	#endif
	#ifdef ENVMAP_BLENDING_MULTIPLY
		outgoingLight = mix( outgoingLight, outgoingLight * envColor.xyz, specularStrength * reflectivity );
	#elif defined( ENVMAP_BLENDING_MIX )
		outgoingLight = mix( outgoingLight, envColor.xyz, specularStrength * reflectivity );
	#elif defined( ENVMAP_BLENDING_ADD )
		outgoingLight += envColor.xyz * specularStrength * reflectivity;
	#endif
#endif`,ju=`#ifdef USE_ENVMAP
	uniform float envMapIntensity;
	uniform float flipEnvMap;
	#ifdef ENVMAP_TYPE_CUBE
		uniform samplerCube envMap;
	#else
		uniform sampler2D envMap;
	#endif
	
#endif`,Zu=`#ifdef USE_ENVMAP
	uniform float reflectivity;
	#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG ) || defined( LAMBERT )
		#define ENV_WORLDPOS
	#endif
	#ifdef ENV_WORLDPOS
		varying vec3 vWorldPosition;
		uniform float refractionRatio;
	#else
		varying vec3 vReflect;
	#endif
#endif`,Ku=`#ifdef USE_ENVMAP
	#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG ) || defined( LAMBERT )
		#define ENV_WORLDPOS
	#endif
	#ifdef ENV_WORLDPOS
		
		varying vec3 vWorldPosition;
	#else
		varying vec3 vReflect;
		uniform float refractionRatio;
	#endif
#endif`,$u=`#ifdef USE_ENVMAP
	#ifdef ENV_WORLDPOS
		vWorldPosition = worldPosition.xyz;
	#else
		vec3 cameraToVertex;
		if ( isOrthographic ) {
			cameraToVertex = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );
		} else {
			cameraToVertex = normalize( worldPosition.xyz - cameraPosition );
		}
		vec3 worldNormal = inverseTransformDirection( transformedNormal, viewMatrix );
		#ifdef ENVMAP_MODE_REFLECTION
			vReflect = reflect( cameraToVertex, worldNormal );
		#else
			vReflect = refract( cameraToVertex, worldNormal, refractionRatio );
		#endif
	#endif
#endif`,Ju=`#ifdef USE_FOG
	vFogDepth = - mvPosition.z;
#endif`,Qu=`#ifdef USE_FOG
	varying float vFogDepth;
#endif`,th=`#ifdef USE_FOG
	#ifdef FOG_EXP2
		float fogFactor = 1.0 - exp( - fogDensity * fogDensity * vFogDepth * vFogDepth );
	#else
		float fogFactor = smoothstep( fogNear, fogFar, vFogDepth );
	#endif
	gl_FragColor.rgb = mix( gl_FragColor.rgb, fogColor, fogFactor );
#endif`,eh=`#ifdef USE_FOG
	uniform vec3 fogColor;
	varying float vFogDepth;
	#ifdef FOG_EXP2
		uniform float fogDensity;
	#else
		uniform float fogNear;
		uniform float fogFar;
	#endif
#endif`,nh=`#ifdef USE_GRADIENTMAP
	uniform sampler2D gradientMap;
#endif
vec3 getGradientIrradiance( vec3 normal, vec3 lightDirection ) {
	float dotNL = dot( normal, lightDirection );
	vec2 coord = vec2( dotNL * 0.5 + 0.5, 0.0 );
	#ifdef USE_GRADIENTMAP
		return vec3( texture2D( gradientMap, coord ).r );
	#else
		vec2 fw = fwidth( coord ) * 0.5;
		return mix( vec3( 0.7 ), vec3( 1.0 ), smoothstep( 0.7 - fw.x, 0.7 + fw.x, coord.x ) );
	#endif
}`,ih=`#ifdef USE_LIGHTMAP
	vec4 lightMapTexel = texture2D( lightMap, vLightMapUv );
	vec3 lightMapIrradiance = lightMapTexel.rgb * lightMapIntensity;
	reflectedLight.indirectDiffuse += lightMapIrradiance;
#endif`,rh=`#ifdef USE_LIGHTMAP
	uniform sampler2D lightMap;
	uniform float lightMapIntensity;
#endif`,sh=`LambertMaterial material;
material.diffuseColor = diffuseColor.rgb;
material.specularStrength = specularStrength;`,oh=`varying vec3 vViewPosition;
struct LambertMaterial {
	vec3 diffuseColor;
	float specularStrength;
};
void RE_Direct_Lambert( const in IncidentLight directLight, const in GeometricContext geometry, const in LambertMaterial material, inout ReflectedLight reflectedLight ) {
	float dotNL = saturate( dot( geometry.normal, directLight.direction ) );
	vec3 irradiance = dotNL * directLight.color;
	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
void RE_IndirectDiffuse_Lambert( const in vec3 irradiance, const in GeometricContext geometry, const in LambertMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
#define RE_Direct				RE_Direct_Lambert
#define RE_IndirectDiffuse		RE_IndirectDiffuse_Lambert`,ah=`uniform bool receiveShadow;
uniform vec3 ambientLightColor;
uniform vec3 lightProbe[ 9 ];
vec3 shGetIrradianceAt( in vec3 normal, in vec3 shCoefficients[ 9 ] ) {
	float x = normal.x, y = normal.y, z = normal.z;
	vec3 result = shCoefficients[ 0 ] * 0.886227;
	result += shCoefficients[ 1 ] * 2.0 * 0.511664 * y;
	result += shCoefficients[ 2 ] * 2.0 * 0.511664 * z;
	result += shCoefficients[ 3 ] * 2.0 * 0.511664 * x;
	result += shCoefficients[ 4 ] * 2.0 * 0.429043 * x * y;
	result += shCoefficients[ 5 ] * 2.0 * 0.429043 * y * z;
	result += shCoefficients[ 6 ] * ( 0.743125 * z * z - 0.247708 );
	result += shCoefficients[ 7 ] * 2.0 * 0.429043 * x * z;
	result += shCoefficients[ 8 ] * 0.429043 * ( x * x - y * y );
	return result;
}
vec3 getLightProbeIrradiance( const in vec3 lightProbe[ 9 ], const in vec3 normal ) {
	vec3 worldNormal = inverseTransformDirection( normal, viewMatrix );
	vec3 irradiance = shGetIrradianceAt( worldNormal, lightProbe );
	return irradiance;
}
vec3 getAmbientLightIrradiance( const in vec3 ambientLightColor ) {
	vec3 irradiance = ambientLightColor;
	return irradiance;
}
float getDistanceAttenuation( const in float lightDistance, const in float cutoffDistance, const in float decayExponent ) {
	#if defined ( LEGACY_LIGHTS )
		if ( cutoffDistance > 0.0 && decayExponent > 0.0 ) {
			return pow( saturate( - lightDistance / cutoffDistance + 1.0 ), decayExponent );
		}
		return 1.0;
	#else
		float distanceFalloff = 1.0 / max( pow( lightDistance, decayExponent ), 0.01 );
		if ( cutoffDistance > 0.0 ) {
			distanceFalloff *= pow2( saturate( 1.0 - pow4( lightDistance / cutoffDistance ) ) );
		}
		return distanceFalloff;
	#endif
}
float getSpotAttenuation( const in float coneCosine, const in float penumbraCosine, const in float angleCosine ) {
	return smoothstep( coneCosine, penumbraCosine, angleCosine );
}
#if NUM_DIR_LIGHTS > 0
	struct DirectionalLight {
		vec3 direction;
		vec3 color;
	};
	uniform DirectionalLight directionalLights[ NUM_DIR_LIGHTS ];
	void getDirectionalLightInfo( const in DirectionalLight directionalLight, const in GeometricContext geometry, out IncidentLight light ) {
		light.color = directionalLight.color;
		light.direction = directionalLight.direction;
		light.visible = true;
	}
#endif
#if NUM_POINT_LIGHTS > 0
	struct PointLight {
		vec3 position;
		vec3 color;
		float distance;
		float decay;
	};
	uniform PointLight pointLights[ NUM_POINT_LIGHTS ];
	void getPointLightInfo( const in PointLight pointLight, const in GeometricContext geometry, out IncidentLight light ) {
		vec3 lVector = pointLight.position - geometry.position;
		light.direction = normalize( lVector );
		float lightDistance = length( lVector );
		light.color = pointLight.color;
		light.color *= getDistanceAttenuation( lightDistance, pointLight.distance, pointLight.decay );
		light.visible = ( light.color != vec3( 0.0 ) );
	}
#endif
#if NUM_SPOT_LIGHTS > 0
	struct SpotLight {
		vec3 position;
		vec3 direction;
		vec3 color;
		float distance;
		float decay;
		float coneCos;
		float penumbraCos;
	};
	uniform SpotLight spotLights[ NUM_SPOT_LIGHTS ];
	void getSpotLightInfo( const in SpotLight spotLight, const in GeometricContext geometry, out IncidentLight light ) {
		vec3 lVector = spotLight.position - geometry.position;
		light.direction = normalize( lVector );
		float angleCos = dot( light.direction, spotLight.direction );
		float spotAttenuation = getSpotAttenuation( spotLight.coneCos, spotLight.penumbraCos, angleCos );
		if ( spotAttenuation > 0.0 ) {
			float lightDistance = length( lVector );
			light.color = spotLight.color * spotAttenuation;
			light.color *= getDistanceAttenuation( lightDistance, spotLight.distance, spotLight.decay );
			light.visible = ( light.color != vec3( 0.0 ) );
		} else {
			light.color = vec3( 0.0 );
			light.visible = false;
		}
	}
#endif
#if NUM_RECT_AREA_LIGHTS > 0
	struct RectAreaLight {
		vec3 color;
		vec3 position;
		vec3 halfWidth;
		vec3 halfHeight;
	};
	uniform sampler2D ltc_1;	uniform sampler2D ltc_2;
	uniform RectAreaLight rectAreaLights[ NUM_RECT_AREA_LIGHTS ];
#endif
#if NUM_HEMI_LIGHTS > 0
	struct HemisphereLight {
		vec3 direction;
		vec3 skyColor;
		vec3 groundColor;
	};
	uniform HemisphereLight hemisphereLights[ NUM_HEMI_LIGHTS ];
	vec3 getHemisphereLightIrradiance( const in HemisphereLight hemiLight, const in vec3 normal ) {
		float dotNL = dot( normal, hemiLight.direction );
		float hemiDiffuseWeight = 0.5 * dotNL + 0.5;
		vec3 irradiance = mix( hemiLight.groundColor, hemiLight.skyColor, hemiDiffuseWeight );
		return irradiance;
	}
#endif`,lh=`#ifdef USE_ENVMAP
	vec3 getIBLIrradiance( const in vec3 normal ) {
		#ifdef ENVMAP_TYPE_CUBE_UV
			vec3 worldNormal = inverseTransformDirection( normal, viewMatrix );
			vec4 envMapColor = textureCubeUV( envMap, worldNormal, 1.0 );
			return PI * envMapColor.rgb * envMapIntensity;
		#else
			return vec3( 0.0 );
		#endif
	}
	vec3 getIBLRadiance( const in vec3 viewDir, const in vec3 normal, const in float roughness ) {
		#ifdef ENVMAP_TYPE_CUBE_UV
			vec3 reflectVec = reflect( - viewDir, normal );
			reflectVec = normalize( mix( reflectVec, normal, roughness * roughness) );
			reflectVec = inverseTransformDirection( reflectVec, viewMatrix );
			vec4 envMapColor = textureCubeUV( envMap, reflectVec, roughness );
			return envMapColor.rgb * envMapIntensity;
		#else
			return vec3( 0.0 );
		#endif
	}
	#ifdef USE_ANISOTROPY
		vec3 getIBLAnisotropyRadiance( const in vec3 viewDir, const in vec3 normal, const in float roughness, const in vec3 bitangent, const in float anisotropy ) {
			#ifdef ENVMAP_TYPE_CUBE_UV
				vec3 bentNormal = cross( bitangent, viewDir );
				bentNormal = normalize( cross( bentNormal, bitangent ) );
				bentNormal = normalize( mix( bentNormal, normal, pow2( pow2( 1.0 - anisotropy * ( 1.0 - roughness ) ) ) ) );
				return getIBLRadiance( viewDir, bentNormal, roughness );
			#else
				return vec3( 0.0 );
			#endif
		}
	#endif
#endif`,ch=`ToonMaterial material;
material.diffuseColor = diffuseColor.rgb;`,uh=`varying vec3 vViewPosition;
struct ToonMaterial {
	vec3 diffuseColor;
};
void RE_Direct_Toon( const in IncidentLight directLight, const in GeometricContext geometry, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {
	vec3 irradiance = getGradientIrradiance( geometry.normal, directLight.direction ) * directLight.color;
	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
void RE_IndirectDiffuse_Toon( const in vec3 irradiance, const in GeometricContext geometry, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
#define RE_Direct				RE_Direct_Toon
#define RE_IndirectDiffuse		RE_IndirectDiffuse_Toon`,hh=`BlinnPhongMaterial material;
material.diffuseColor = diffuseColor.rgb;
material.specularColor = specular;
material.specularShininess = shininess;
material.specularStrength = specularStrength;`,fh=`varying vec3 vViewPosition;
struct BlinnPhongMaterial {
	vec3 diffuseColor;
	vec3 specularColor;
	float specularShininess;
	float specularStrength;
};
void RE_Direct_BlinnPhong( const in IncidentLight directLight, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {
	float dotNL = saturate( dot( geometry.normal, directLight.direction ) );
	vec3 irradiance = dotNL * directLight.color;
	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
	reflectedLight.directSpecular += irradiance * BRDF_BlinnPhong( directLight.direction, geometry.viewDir, geometry.normal, material.specularColor, material.specularShininess ) * material.specularStrength;
}
void RE_IndirectDiffuse_BlinnPhong( const in vec3 irradiance, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
#define RE_Direct				RE_Direct_BlinnPhong
#define RE_IndirectDiffuse		RE_IndirectDiffuse_BlinnPhong`,dh=`PhysicalMaterial material;
material.diffuseColor = diffuseColor.rgb * ( 1.0 - metalnessFactor );
vec3 dxy = max( abs( dFdx( geometryNormal ) ), abs( dFdy( geometryNormal ) ) );
float geometryRoughness = max( max( dxy.x, dxy.y ), dxy.z );
material.roughness = max( roughnessFactor, 0.0525 );material.roughness += geometryRoughness;
material.roughness = min( material.roughness, 1.0 );
#ifdef IOR
	material.ior = ior;
	#ifdef USE_SPECULAR
		float specularIntensityFactor = specularIntensity;
		vec3 specularColorFactor = specularColor;
		#ifdef USE_SPECULAR_COLORMAP
			specularColorFactor *= texture2D( specularColorMap, vSpecularColorMapUv ).rgb;
		#endif
		#ifdef USE_SPECULAR_INTENSITYMAP
			specularIntensityFactor *= texture2D( specularIntensityMap, vSpecularIntensityMapUv ).a;
		#endif
		material.specularF90 = mix( specularIntensityFactor, 1.0, metalnessFactor );
	#else
		float specularIntensityFactor = 1.0;
		vec3 specularColorFactor = vec3( 1.0 );
		material.specularF90 = 1.0;
	#endif
	material.specularColor = mix( min( pow2( ( material.ior - 1.0 ) / ( material.ior + 1.0 ) ) * specularColorFactor, vec3( 1.0 ) ) * specularIntensityFactor, diffuseColor.rgb, metalnessFactor );
#else
	material.specularColor = mix( vec3( 0.04 ), diffuseColor.rgb, metalnessFactor );
	material.specularF90 = 1.0;
#endif
#ifdef USE_CLEARCOAT
	material.clearcoat = clearcoat;
	material.clearcoatRoughness = clearcoatRoughness;
	material.clearcoatF0 = vec3( 0.04 );
	material.clearcoatF90 = 1.0;
	#ifdef USE_CLEARCOATMAP
		material.clearcoat *= texture2D( clearcoatMap, vClearcoatMapUv ).x;
	#endif
	#ifdef USE_CLEARCOAT_ROUGHNESSMAP
		material.clearcoatRoughness *= texture2D( clearcoatRoughnessMap, vClearcoatRoughnessMapUv ).y;
	#endif
	material.clearcoat = saturate( material.clearcoat );	material.clearcoatRoughness = max( material.clearcoatRoughness, 0.0525 );
	material.clearcoatRoughness += geometryRoughness;
	material.clearcoatRoughness = min( material.clearcoatRoughness, 1.0 );
#endif
#ifdef USE_IRIDESCENCE
	material.iridescence = iridescence;
	material.iridescenceIOR = iridescenceIOR;
	#ifdef USE_IRIDESCENCEMAP
		material.iridescence *= texture2D( iridescenceMap, vIridescenceMapUv ).r;
	#endif
	#ifdef USE_IRIDESCENCE_THICKNESSMAP
		material.iridescenceThickness = (iridescenceThicknessMaximum - iridescenceThicknessMinimum) * texture2D( iridescenceThicknessMap, vIridescenceThicknessMapUv ).g + iridescenceThicknessMinimum;
	#else
		material.iridescenceThickness = iridescenceThicknessMaximum;
	#endif
#endif
#ifdef USE_SHEEN
	material.sheenColor = sheenColor;
	#ifdef USE_SHEEN_COLORMAP
		material.sheenColor *= texture2D( sheenColorMap, vSheenColorMapUv ).rgb;
	#endif
	material.sheenRoughness = clamp( sheenRoughness, 0.07, 1.0 );
	#ifdef USE_SHEEN_ROUGHNESSMAP
		material.sheenRoughness *= texture2D( sheenRoughnessMap, vSheenRoughnessMapUv ).a;
	#endif
#endif
#ifdef USE_ANISOTROPY
	#ifdef USE_ANISOTROPYMAP
		mat2 anisotropyMat = mat2( anisotropyVector.x, anisotropyVector.y, - anisotropyVector.y, anisotropyVector.x );
		vec3 anisotropyPolar = texture2D( anisotropyMap, vAnisotropyMapUv ).rgb;
		vec2 anisotropyV = anisotropyMat * normalize( 2.0 * anisotropyPolar.rg - vec2( 1.0 ) ) * anisotropyPolar.b;
	#else
		vec2 anisotropyV = anisotropyVector;
	#endif
	material.anisotropy = length( anisotropyV );
	anisotropyV /= material.anisotropy;
	material.anisotropy = saturate( material.anisotropy );
	material.alphaT = mix( pow2( material.roughness ), 1.0, pow2( material.anisotropy ) );
	material.anisotropyT = tbn[ 0 ] * anisotropyV.x - tbn[ 1 ] * anisotropyV.y;
	material.anisotropyB = tbn[ 1 ] * anisotropyV.x + tbn[ 0 ] * anisotropyV.y;
#endif`,ph=`struct PhysicalMaterial {
	vec3 diffuseColor;
	float roughness;
	vec3 specularColor;
	float specularF90;
	#ifdef USE_CLEARCOAT
		float clearcoat;
		float clearcoatRoughness;
		vec3 clearcoatF0;
		float clearcoatF90;
	#endif
	#ifdef USE_IRIDESCENCE
		float iridescence;
		float iridescenceIOR;
		float iridescenceThickness;
		vec3 iridescenceFresnel;
		vec3 iridescenceF0;
	#endif
	#ifdef USE_SHEEN
		vec3 sheenColor;
		float sheenRoughness;
	#endif
	#ifdef IOR
		float ior;
	#endif
	#ifdef USE_TRANSMISSION
		float transmission;
		float transmissionAlpha;
		float thickness;
		float attenuationDistance;
		vec3 attenuationColor;
	#endif
	#ifdef USE_ANISOTROPY
		float anisotropy;
		float alphaT;
		vec3 anisotropyT;
		vec3 anisotropyB;
	#endif
};
vec3 clearcoatSpecular = vec3( 0.0 );
vec3 sheenSpecular = vec3( 0.0 );
vec3 Schlick_to_F0( const in vec3 f, const in float f90, const in float dotVH ) {
    float x = clamp( 1.0 - dotVH, 0.0, 1.0 );
    float x2 = x * x;
    float x5 = clamp( x * x2 * x2, 0.0, 0.9999 );
    return ( f - vec3( f90 ) * x5 ) / ( 1.0 - x5 );
}
float V_GGX_SmithCorrelated( const in float alpha, const in float dotNL, const in float dotNV ) {
	float a2 = pow2( alpha );
	float gv = dotNL * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );
	float gl = dotNV * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );
	return 0.5 / max( gv + gl, EPSILON );
}
float D_GGX( const in float alpha, const in float dotNH ) {
	float a2 = pow2( alpha );
	float denom = pow2( dotNH ) * ( a2 - 1.0 ) + 1.0;
	return RECIPROCAL_PI * a2 / pow2( denom );
}
#ifdef USE_ANISOTROPY
	float V_GGX_SmithCorrelated_Anisotropic( const in float alphaT, const in float alphaB, const in float dotTV, const in float dotBV, const in float dotTL, const in float dotBL, const in float dotNV, const in float dotNL ) {
		float gv = dotNL * length( vec3( alphaT * dotTV, alphaB * dotBV, dotNV ) );
		float gl = dotNV * length( vec3( alphaT * dotTL, alphaB * dotBL, dotNL ) );
		float v = 0.5 / ( gv + gl );
		return saturate(v);
	}
	float D_GGX_Anisotropic( const in float alphaT, const in float alphaB, const in float dotNH, const in float dotTH, const in float dotBH ) {
		float a2 = alphaT * alphaB;
		highp vec3 v = vec3( alphaB * dotTH, alphaT * dotBH, a2 * dotNH );
		highp float v2 = dot( v, v );
		float w2 = a2 / v2;
		return RECIPROCAL_PI * a2 * pow2 ( w2 );
	}
#endif
#ifdef USE_CLEARCOAT
	vec3 BRDF_GGX_Clearcoat( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in PhysicalMaterial material) {
		vec3 f0 = material.clearcoatF0;
		float f90 = material.clearcoatF90;
		float roughness = material.clearcoatRoughness;
		float alpha = pow2( roughness );
		vec3 halfDir = normalize( lightDir + viewDir );
		float dotNL = saturate( dot( normal, lightDir ) );
		float dotNV = saturate( dot( normal, viewDir ) );
		float dotNH = saturate( dot( normal, halfDir ) );
		float dotVH = saturate( dot( viewDir, halfDir ) );
		vec3 F = F_Schlick( f0, f90, dotVH );
		float V = V_GGX_SmithCorrelated( alpha, dotNL, dotNV );
		float D = D_GGX( alpha, dotNH );
		return F * ( V * D );
	}
#endif
vec3 BRDF_GGX( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in PhysicalMaterial material ) {
	vec3 f0 = material.specularColor;
	float f90 = material.specularF90;
	float roughness = material.roughness;
	float alpha = pow2( roughness );
	vec3 halfDir = normalize( lightDir + viewDir );
	float dotNL = saturate( dot( normal, lightDir ) );
	float dotNV = saturate( dot( normal, viewDir ) );
	float dotNH = saturate( dot( normal, halfDir ) );
	float dotVH = saturate( dot( viewDir, halfDir ) );
	vec3 F = F_Schlick( f0, f90, dotVH );
	#ifdef USE_IRIDESCENCE
		F = mix( F, material.iridescenceFresnel, material.iridescence );
	#endif
	#ifdef USE_ANISOTROPY
		float dotTL = dot( material.anisotropyT, lightDir );
		float dotTV = dot( material.anisotropyT, viewDir );
		float dotTH = dot( material.anisotropyT, halfDir );
		float dotBL = dot( material.anisotropyB, lightDir );
		float dotBV = dot( material.anisotropyB, viewDir );
		float dotBH = dot( material.anisotropyB, halfDir );
		float V = V_GGX_SmithCorrelated_Anisotropic( material.alphaT, alpha, dotTV, dotBV, dotTL, dotBL, dotNV, dotNL );
		float D = D_GGX_Anisotropic( material.alphaT, alpha, dotNH, dotTH, dotBH );
	#else
		float V = V_GGX_SmithCorrelated( alpha, dotNL, dotNV );
		float D = D_GGX( alpha, dotNH );
	#endif
	return F * ( V * D );
}
vec2 LTC_Uv( const in vec3 N, const in vec3 V, const in float roughness ) {
	const float LUT_SIZE = 64.0;
	const float LUT_SCALE = ( LUT_SIZE - 1.0 ) / LUT_SIZE;
	const float LUT_BIAS = 0.5 / LUT_SIZE;
	float dotNV = saturate( dot( N, V ) );
	vec2 uv = vec2( roughness, sqrt( 1.0 - dotNV ) );
	uv = uv * LUT_SCALE + LUT_BIAS;
	return uv;
}
float LTC_ClippedSphereFormFactor( const in vec3 f ) {
	float l = length( f );
	return max( ( l * l + f.z ) / ( l + 1.0 ), 0.0 );
}
vec3 LTC_EdgeVectorFormFactor( const in vec3 v1, const in vec3 v2 ) {
	float x = dot( v1, v2 );
	float y = abs( x );
	float a = 0.8543985 + ( 0.4965155 + 0.0145206 * y ) * y;
	float b = 3.4175940 + ( 4.1616724 + y ) * y;
	float v = a / b;
	float theta_sintheta = ( x > 0.0 ) ? v : 0.5 * inversesqrt( max( 1.0 - x * x, 1e-7 ) ) - v;
	return cross( v1, v2 ) * theta_sintheta;
}
vec3 LTC_Evaluate( const in vec3 N, const in vec3 V, const in vec3 P, const in mat3 mInv, const in vec3 rectCoords[ 4 ] ) {
	vec3 v1 = rectCoords[ 1 ] - rectCoords[ 0 ];
	vec3 v2 = rectCoords[ 3 ] - rectCoords[ 0 ];
	vec3 lightNormal = cross( v1, v2 );
	if( dot( lightNormal, P - rectCoords[ 0 ] ) < 0.0 ) return vec3( 0.0 );
	vec3 T1, T2;
	T1 = normalize( V - N * dot( V, N ) );
	T2 = - cross( N, T1 );
	mat3 mat = mInv * transposeMat3( mat3( T1, T2, N ) );
	vec3 coords[ 4 ];
	coords[ 0 ] = mat * ( rectCoords[ 0 ] - P );
	coords[ 1 ] = mat * ( rectCoords[ 1 ] - P );
	coords[ 2 ] = mat * ( rectCoords[ 2 ] - P );
	coords[ 3 ] = mat * ( rectCoords[ 3 ] - P );
	coords[ 0 ] = normalize( coords[ 0 ] );
	coords[ 1 ] = normalize( coords[ 1 ] );
	coords[ 2 ] = normalize( coords[ 2 ] );
	coords[ 3 ] = normalize( coords[ 3 ] );
	vec3 vectorFormFactor = vec3( 0.0 );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 0 ], coords[ 1 ] );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 1 ], coords[ 2 ] );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 2 ], coords[ 3 ] );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 3 ], coords[ 0 ] );
	float result = LTC_ClippedSphereFormFactor( vectorFormFactor );
	return vec3( result );
}
#if defined( USE_SHEEN )
float D_Charlie( float roughness, float dotNH ) {
	float alpha = pow2( roughness );
	float invAlpha = 1.0 / alpha;
	float cos2h = dotNH * dotNH;
	float sin2h = max( 1.0 - cos2h, 0.0078125 );
	return ( 2.0 + invAlpha ) * pow( sin2h, invAlpha * 0.5 ) / ( 2.0 * PI );
}
float V_Neubelt( float dotNV, float dotNL ) {
	return saturate( 1.0 / ( 4.0 * ( dotNL + dotNV - dotNL * dotNV ) ) );
}
vec3 BRDF_Sheen( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, vec3 sheenColor, const in float sheenRoughness ) {
	vec3 halfDir = normalize( lightDir + viewDir );
	float dotNL = saturate( dot( normal, lightDir ) );
	float dotNV = saturate( dot( normal, viewDir ) );
	float dotNH = saturate( dot( normal, halfDir ) );
	float D = D_Charlie( sheenRoughness, dotNH );
	float V = V_Neubelt( dotNV, dotNL );
	return sheenColor * ( D * V );
}
#endif
float IBLSheenBRDF( const in vec3 normal, const in vec3 viewDir, const in float roughness ) {
	float dotNV = saturate( dot( normal, viewDir ) );
	float r2 = roughness * roughness;
	float a = roughness < 0.25 ? -339.2 * r2 + 161.4 * roughness - 25.9 : -8.48 * r2 + 14.3 * roughness - 9.95;
	float b = roughness < 0.25 ? 44.0 * r2 - 23.7 * roughness + 3.26 : 1.97 * r2 - 3.27 * roughness + 0.72;
	float DG = exp( a * dotNV + b ) + ( roughness < 0.25 ? 0.0 : 0.1 * ( roughness - 0.25 ) );
	return saturate( DG * RECIPROCAL_PI );
}
vec2 DFGApprox( const in vec3 normal, const in vec3 viewDir, const in float roughness ) {
	float dotNV = saturate( dot( normal, viewDir ) );
	const vec4 c0 = vec4( - 1, - 0.0275, - 0.572, 0.022 );
	const vec4 c1 = vec4( 1, 0.0425, 1.04, - 0.04 );
	vec4 r = roughness * c0 + c1;
	float a004 = min( r.x * r.x, exp2( - 9.28 * dotNV ) ) * r.x + r.y;
	vec2 fab = vec2( - 1.04, 1.04 ) * a004 + r.zw;
	return fab;
}
vec3 EnvironmentBRDF( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float roughness ) {
	vec2 fab = DFGApprox( normal, viewDir, roughness );
	return specularColor * fab.x + specularF90 * fab.y;
}
#ifdef USE_IRIDESCENCE
void computeMultiscatteringIridescence( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float iridescence, const in vec3 iridescenceF0, const in float roughness, inout vec3 singleScatter, inout vec3 multiScatter ) {
#else
void computeMultiscattering( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float roughness, inout vec3 singleScatter, inout vec3 multiScatter ) {
#endif
	vec2 fab = DFGApprox( normal, viewDir, roughness );
	#ifdef USE_IRIDESCENCE
		vec3 Fr = mix( specularColor, iridescenceF0, iridescence );
	#else
		vec3 Fr = specularColor;
	#endif
	vec3 FssEss = Fr * fab.x + specularF90 * fab.y;
	float Ess = fab.x + fab.y;
	float Ems = 1.0 - Ess;
	vec3 Favg = Fr + ( 1.0 - Fr ) * 0.047619;	vec3 Fms = FssEss * Favg / ( 1.0 - Ems * Favg );
	singleScatter += FssEss;
	multiScatter += Fms * Ems;
}
#if NUM_RECT_AREA_LIGHTS > 0
	void RE_Direct_RectArea_Physical( const in RectAreaLight rectAreaLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {
		vec3 normal = geometry.normal;
		vec3 viewDir = geometry.viewDir;
		vec3 position = geometry.position;
		vec3 lightPos = rectAreaLight.position;
		vec3 halfWidth = rectAreaLight.halfWidth;
		vec3 halfHeight = rectAreaLight.halfHeight;
		vec3 lightColor = rectAreaLight.color;
		float roughness = material.roughness;
		vec3 rectCoords[ 4 ];
		rectCoords[ 0 ] = lightPos + halfWidth - halfHeight;		rectCoords[ 1 ] = lightPos - halfWidth - halfHeight;
		rectCoords[ 2 ] = lightPos - halfWidth + halfHeight;
		rectCoords[ 3 ] = lightPos + halfWidth + halfHeight;
		vec2 uv = LTC_Uv( normal, viewDir, roughness );
		vec4 t1 = texture2D( ltc_1, uv );
		vec4 t2 = texture2D( ltc_2, uv );
		mat3 mInv = mat3(
			vec3( t1.x, 0, t1.y ),
			vec3(    0, 1,    0 ),
			vec3( t1.z, 0, t1.w )
		);
		vec3 fresnel = ( material.specularColor * t2.x + ( vec3( 1.0 ) - material.specularColor ) * t2.y );
		reflectedLight.directSpecular += lightColor * fresnel * LTC_Evaluate( normal, viewDir, position, mInv, rectCoords );
		reflectedLight.directDiffuse += lightColor * material.diffuseColor * LTC_Evaluate( normal, viewDir, position, mat3( 1.0 ), rectCoords );
	}
#endif
void RE_Direct_Physical( const in IncidentLight directLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {
	float dotNL = saturate( dot( geometry.normal, directLight.direction ) );
	vec3 irradiance = dotNL * directLight.color;
	#ifdef USE_CLEARCOAT
		float dotNLcc = saturate( dot( geometry.clearcoatNormal, directLight.direction ) );
		vec3 ccIrradiance = dotNLcc * directLight.color;
		clearcoatSpecular += ccIrradiance * BRDF_GGX_Clearcoat( directLight.direction, geometry.viewDir, geometry.clearcoatNormal, material );
	#endif
	#ifdef USE_SHEEN
		sheenSpecular += irradiance * BRDF_Sheen( directLight.direction, geometry.viewDir, geometry.normal, material.sheenColor, material.sheenRoughness );
	#endif
	reflectedLight.directSpecular += irradiance * BRDF_GGX( directLight.direction, geometry.viewDir, geometry.normal, material );
	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
void RE_IndirectDiffuse_Physical( const in vec3 irradiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
void RE_IndirectSpecular_Physical( const in vec3 radiance, const in vec3 irradiance, const in vec3 clearcoatRadiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight) {
	#ifdef USE_CLEARCOAT
		clearcoatSpecular += clearcoatRadiance * EnvironmentBRDF( geometry.clearcoatNormal, geometry.viewDir, material.clearcoatF0, material.clearcoatF90, material.clearcoatRoughness );
	#endif
	#ifdef USE_SHEEN
		sheenSpecular += irradiance * material.sheenColor * IBLSheenBRDF( geometry.normal, geometry.viewDir, material.sheenRoughness );
	#endif
	vec3 singleScattering = vec3( 0.0 );
	vec3 multiScattering = vec3( 0.0 );
	vec3 cosineWeightedIrradiance = irradiance * RECIPROCAL_PI;
	#ifdef USE_IRIDESCENCE
		computeMultiscatteringIridescence( geometry.normal, geometry.viewDir, material.specularColor, material.specularF90, material.iridescence, material.iridescenceFresnel, material.roughness, singleScattering, multiScattering );
	#else
		computeMultiscattering( geometry.normal, geometry.viewDir, material.specularColor, material.specularF90, material.roughness, singleScattering, multiScattering );
	#endif
	vec3 totalScattering = singleScattering + multiScattering;
	vec3 diffuse = material.diffuseColor * ( 1.0 - max( max( totalScattering.r, totalScattering.g ), totalScattering.b ) );
	reflectedLight.indirectSpecular += radiance * singleScattering;
	reflectedLight.indirectSpecular += multiScattering * cosineWeightedIrradiance;
	reflectedLight.indirectDiffuse += diffuse * cosineWeightedIrradiance;
}
#define RE_Direct				RE_Direct_Physical
#define RE_Direct_RectArea		RE_Direct_RectArea_Physical
#define RE_IndirectDiffuse		RE_IndirectDiffuse_Physical
#define RE_IndirectSpecular		RE_IndirectSpecular_Physical
float computeSpecularOcclusion( const in float dotNV, const in float ambientOcclusion, const in float roughness ) {
	return saturate( pow( dotNV + ambientOcclusion, exp2( - 16.0 * roughness - 1.0 ) ) - 1.0 + ambientOcclusion );
}`,mh=`
GeometricContext geometry;
geometry.position = - vViewPosition;
geometry.normal = normal;
geometry.viewDir = ( isOrthographic ) ? vec3( 0, 0, 1 ) : normalize( vViewPosition );
#ifdef USE_CLEARCOAT
	geometry.clearcoatNormal = clearcoatNormal;
#endif
#ifdef USE_IRIDESCENCE
	float dotNVi = saturate( dot( normal, geometry.viewDir ) );
	if ( material.iridescenceThickness == 0.0 ) {
		material.iridescence = 0.0;
	} else {
		material.iridescence = saturate( material.iridescence );
	}
	if ( material.iridescence > 0.0 ) {
		material.iridescenceFresnel = evalIridescence( 1.0, material.iridescenceIOR, dotNVi, material.iridescenceThickness, material.specularColor );
		material.iridescenceF0 = Schlick_to_F0( material.iridescenceFresnel, 1.0, dotNVi );
	}
#endif
IncidentLight directLight;
#if ( NUM_POINT_LIGHTS > 0 ) && defined( RE_Direct )
	PointLight pointLight;
	#if defined( USE_SHADOWMAP ) && NUM_POINT_LIGHT_SHADOWS > 0
	PointLightShadow pointLightShadow;
	#endif
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {
		pointLight = pointLights[ i ];
		getPointLightInfo( pointLight, geometry, directLight );
		#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_POINT_LIGHT_SHADOWS )
		pointLightShadow = pointLightShadows[ i ];
		directLight.color *= ( directLight.visible && receiveShadow ) ? getPointShadow( pointShadowMap[ i ], pointLightShadow.shadowMapSize, pointLightShadow.shadowBias, pointLightShadow.shadowRadius, vPointShadowCoord[ i ], pointLightShadow.shadowCameraNear, pointLightShadow.shadowCameraFar ) : 1.0;
		#endif
		RE_Direct( directLight, geometry, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if ( NUM_SPOT_LIGHTS > 0 ) && defined( RE_Direct )
	SpotLight spotLight;
	vec4 spotColor;
	vec3 spotLightCoord;
	bool inSpotLightMap;
	#if defined( USE_SHADOWMAP ) && NUM_SPOT_LIGHT_SHADOWS > 0
	SpotLightShadow spotLightShadow;
	#endif
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {
		spotLight = spotLights[ i ];
		getSpotLightInfo( spotLight, geometry, directLight );
		#if ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS_WITH_MAPS )
		#define SPOT_LIGHT_MAP_INDEX UNROLLED_LOOP_INDEX
		#elif ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )
		#define SPOT_LIGHT_MAP_INDEX NUM_SPOT_LIGHT_MAPS
		#else
		#define SPOT_LIGHT_MAP_INDEX ( UNROLLED_LOOP_INDEX - NUM_SPOT_LIGHT_SHADOWS + NUM_SPOT_LIGHT_SHADOWS_WITH_MAPS )
		#endif
		#if ( SPOT_LIGHT_MAP_INDEX < NUM_SPOT_LIGHT_MAPS )
			spotLightCoord = vSpotLightCoord[ i ].xyz / vSpotLightCoord[ i ].w;
			inSpotLightMap = all( lessThan( abs( spotLightCoord * 2. - 1. ), vec3( 1.0 ) ) );
			spotColor = texture2D( spotLightMap[ SPOT_LIGHT_MAP_INDEX ], spotLightCoord.xy );
			directLight.color = inSpotLightMap ? directLight.color * spotColor.rgb : directLight.color;
		#endif
		#undef SPOT_LIGHT_MAP_INDEX
		#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )
		spotLightShadow = spotLightShadows[ i ];
		directLight.color *= ( directLight.visible && receiveShadow ) ? getShadow( spotShadowMap[ i ], spotLightShadow.shadowMapSize, spotLightShadow.shadowBias, spotLightShadow.shadowRadius, vSpotLightCoord[ i ] ) : 1.0;
		#endif
		RE_Direct( directLight, geometry, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if ( NUM_DIR_LIGHTS > 0 ) && defined( RE_Direct )
	DirectionalLight directionalLight;
	#if defined( USE_SHADOWMAP ) && NUM_DIR_LIGHT_SHADOWS > 0
	DirectionalLightShadow directionalLightShadow;
	#endif
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {
		directionalLight = directionalLights[ i ];
		getDirectionalLightInfo( directionalLight, geometry, directLight );
		#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_DIR_LIGHT_SHADOWS )
		directionalLightShadow = directionalLightShadows[ i ];
		directLight.color *= ( directLight.visible && receiveShadow ) ? getShadow( directionalShadowMap[ i ], directionalLightShadow.shadowMapSize, directionalLightShadow.shadowBias, directionalLightShadow.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;
		#endif
		RE_Direct( directLight, geometry, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if ( NUM_RECT_AREA_LIGHTS > 0 ) && defined( RE_Direct_RectArea )
	RectAreaLight rectAreaLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_RECT_AREA_LIGHTS; i ++ ) {
		rectAreaLight = rectAreaLights[ i ];
		RE_Direct_RectArea( rectAreaLight, geometry, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if defined( RE_IndirectDiffuse )
	vec3 iblIrradiance = vec3( 0.0 );
	vec3 irradiance = getAmbientLightIrradiance( ambientLightColor );
	irradiance += getLightProbeIrradiance( lightProbe, geometry.normal );
	#if ( NUM_HEMI_LIGHTS > 0 )
		#pragma unroll_loop_start
		for ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {
			irradiance += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry.normal );
		}
		#pragma unroll_loop_end
	#endif
#endif
#if defined( RE_IndirectSpecular )
	vec3 radiance = vec3( 0.0 );
	vec3 clearcoatRadiance = vec3( 0.0 );
#endif`,_h=`#if defined( RE_IndirectDiffuse )
	#ifdef USE_LIGHTMAP
		vec4 lightMapTexel = texture2D( lightMap, vLightMapUv );
		vec3 lightMapIrradiance = lightMapTexel.rgb * lightMapIntensity;
		irradiance += lightMapIrradiance;
	#endif
	#if defined( USE_ENVMAP ) && defined( STANDARD ) && defined( ENVMAP_TYPE_CUBE_UV )
		iblIrradiance += getIBLIrradiance( geometry.normal );
	#endif
#endif
#if defined( USE_ENVMAP ) && defined( RE_IndirectSpecular )
	#ifdef USE_ANISOTROPY
		radiance += getIBLAnisotropyRadiance( geometry.viewDir, geometry.normal, material.roughness, material.anisotropyB, material.anisotropy );
	#else
		radiance += getIBLRadiance( geometry.viewDir, geometry.normal, material.roughness );
	#endif
	#ifdef USE_CLEARCOAT
		clearcoatRadiance += getIBLRadiance( geometry.viewDir, geometry.clearcoatNormal, material.clearcoatRoughness );
	#endif
#endif`,gh=`#if defined( RE_IndirectDiffuse )
	RE_IndirectDiffuse( irradiance, geometry, material, reflectedLight );
#endif
#if defined( RE_IndirectSpecular )
	RE_IndirectSpecular( radiance, iblIrradiance, clearcoatRadiance, geometry, material, reflectedLight );
#endif`,vh=`#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )
	gl_FragDepthEXT = vIsPerspective == 0.0 ? gl_FragCoord.z : log2( vFragDepth ) * logDepthBufFC * 0.5;
#endif`,xh=`#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )
	uniform float logDepthBufFC;
	varying float vFragDepth;
	varying float vIsPerspective;
#endif`,yh=`#ifdef USE_LOGDEPTHBUF
	#ifdef USE_LOGDEPTHBUF_EXT
		varying float vFragDepth;
		varying float vIsPerspective;
	#else
		uniform float logDepthBufFC;
	#endif
#endif`,Mh=`#ifdef USE_LOGDEPTHBUF
	#ifdef USE_LOGDEPTHBUF_EXT
		vFragDepth = 1.0 + gl_Position.w;
		vIsPerspective = float( isPerspectiveMatrix( projectionMatrix ) );
	#else
		if ( isPerspectiveMatrix( projectionMatrix ) ) {
			gl_Position.z = log2( max( EPSILON, gl_Position.w + 1.0 ) ) * logDepthBufFC - 1.0;
			gl_Position.z *= gl_Position.w;
		}
	#endif
#endif`,Sh=`#ifdef USE_MAP
	vec4 sampledDiffuseColor = texture2D( map, vMapUv );
	#ifdef DECODE_VIDEO_TEXTURE
		sampledDiffuseColor = vec4( mix( pow( sampledDiffuseColor.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), sampledDiffuseColor.rgb * 0.0773993808, vec3( lessThanEqual( sampledDiffuseColor.rgb, vec3( 0.04045 ) ) ) ), sampledDiffuseColor.w );
	
	#endif
	diffuseColor *= sampledDiffuseColor;
#endif`,Eh=`#ifdef USE_MAP
	uniform sampler2D map;
#endif`,Th=`#if defined( USE_MAP ) || defined( USE_ALPHAMAP )
	#if defined( USE_POINTS_UV )
		vec2 uv = vUv;
	#else
		vec2 uv = ( uvTransform * vec3( gl_PointCoord.x, 1.0 - gl_PointCoord.y, 1 ) ).xy;
	#endif
#endif
#ifdef USE_MAP
	diffuseColor *= texture2D( map, uv );
#endif
#ifdef USE_ALPHAMAP
	diffuseColor.a *= texture2D( alphaMap, uv ).g;
#endif`,bh=`#if defined( USE_POINTS_UV )
	varying vec2 vUv;
#else
	#if defined( USE_MAP ) || defined( USE_ALPHAMAP )
		uniform mat3 uvTransform;
	#endif
#endif
#ifdef USE_MAP
	uniform sampler2D map;
#endif
#ifdef USE_ALPHAMAP
	uniform sampler2D alphaMap;
#endif`,wh=`float metalnessFactor = metalness;
#ifdef USE_METALNESSMAP
	vec4 texelMetalness = texture2D( metalnessMap, vMetalnessMapUv );
	metalnessFactor *= texelMetalness.b;
#endif`,Ah=`#ifdef USE_METALNESSMAP
	uniform sampler2D metalnessMap;
#endif`,Rh=`#if defined( USE_MORPHCOLORS ) && defined( MORPHTARGETS_TEXTURE )
	vColor *= morphTargetBaseInfluence;
	for ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {
		#if defined( USE_COLOR_ALPHA )
			if ( morphTargetInfluences[ i ] != 0.0 ) vColor += getMorph( gl_VertexID, i, 2 ) * morphTargetInfluences[ i ];
		#elif defined( USE_COLOR )
			if ( morphTargetInfluences[ i ] != 0.0 ) vColor += getMorph( gl_VertexID, i, 2 ).rgb * morphTargetInfluences[ i ];
		#endif
	}
#endif`,Ch=`#ifdef USE_MORPHNORMALS
	objectNormal *= morphTargetBaseInfluence;
	#ifdef MORPHTARGETS_TEXTURE
		for ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {
			if ( morphTargetInfluences[ i ] != 0.0 ) objectNormal += getMorph( gl_VertexID, i, 1 ).xyz * morphTargetInfluences[ i ];
		}
	#else
		objectNormal += morphNormal0 * morphTargetInfluences[ 0 ];
		objectNormal += morphNormal1 * morphTargetInfluences[ 1 ];
		objectNormal += morphNormal2 * morphTargetInfluences[ 2 ];
		objectNormal += morphNormal3 * morphTargetInfluences[ 3 ];
	#endif
#endif`,Ph=`#ifdef USE_MORPHTARGETS
	uniform float morphTargetBaseInfluence;
	#ifdef MORPHTARGETS_TEXTURE
		uniform float morphTargetInfluences[ MORPHTARGETS_COUNT ];
		uniform sampler2DArray morphTargetsTexture;
		uniform ivec2 morphTargetsTextureSize;
		vec4 getMorph( const in int vertexIndex, const in int morphTargetIndex, const in int offset ) {
			int texelIndex = vertexIndex * MORPHTARGETS_TEXTURE_STRIDE + offset;
			int y = texelIndex / morphTargetsTextureSize.x;
			int x = texelIndex - y * morphTargetsTextureSize.x;
			ivec3 morphUV = ivec3( x, y, morphTargetIndex );
			return texelFetch( morphTargetsTexture, morphUV, 0 );
		}
	#else
		#ifndef USE_MORPHNORMALS
			uniform float morphTargetInfluences[ 8 ];
		#else
			uniform float morphTargetInfluences[ 4 ];
		#endif
	#endif
#endif`,Lh=`#ifdef USE_MORPHTARGETS
	transformed *= morphTargetBaseInfluence;
	#ifdef MORPHTARGETS_TEXTURE
		for ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {
			if ( morphTargetInfluences[ i ] != 0.0 ) transformed += getMorph( gl_VertexID, i, 0 ).xyz * morphTargetInfluences[ i ];
		}
	#else
		transformed += morphTarget0 * morphTargetInfluences[ 0 ];
		transformed += morphTarget1 * morphTargetInfluences[ 1 ];
		transformed += morphTarget2 * morphTargetInfluences[ 2 ];
		transformed += morphTarget3 * morphTargetInfluences[ 3 ];
		#ifndef USE_MORPHNORMALS
			transformed += morphTarget4 * morphTargetInfluences[ 4 ];
			transformed += morphTarget5 * morphTargetInfluences[ 5 ];
			transformed += morphTarget6 * morphTargetInfluences[ 6 ];
			transformed += morphTarget7 * morphTargetInfluences[ 7 ];
		#endif
	#endif
#endif`,Dh=`float faceDirection = gl_FrontFacing ? 1.0 : - 1.0;
#ifdef FLAT_SHADED
	vec3 fdx = dFdx( vViewPosition );
	vec3 fdy = dFdy( vViewPosition );
	vec3 normal = normalize( cross( fdx, fdy ) );
#else
	vec3 normal = normalize( vNormal );
	#ifdef DOUBLE_SIDED
		normal *= faceDirection;
	#endif
#endif
#if defined( USE_NORMALMAP_TANGENTSPACE ) || defined( USE_CLEARCOAT_NORMALMAP ) || defined( USE_ANISOTROPY )
	#ifdef USE_TANGENT
		mat3 tbn = mat3( normalize( vTangent ), normalize( vBitangent ), normal );
	#else
		mat3 tbn = getTangentFrame( - vViewPosition, normal,
		#if defined( USE_NORMALMAP )
			vNormalMapUv
		#elif defined( USE_CLEARCOAT_NORMALMAP )
			vClearcoatNormalMapUv
		#else
			vUv
		#endif
		);
	#endif
	#if defined( DOUBLE_SIDED ) && ! defined( FLAT_SHADED )
		tbn[0] *= faceDirection;
		tbn[1] *= faceDirection;
	#endif
#endif
#ifdef USE_CLEARCOAT_NORMALMAP
	#ifdef USE_TANGENT
		mat3 tbn2 = mat3( normalize( vTangent ), normalize( vBitangent ), normal );
	#else
		mat3 tbn2 = getTangentFrame( - vViewPosition, normal, vClearcoatNormalMapUv );
	#endif
	#if defined( DOUBLE_SIDED ) && ! defined( FLAT_SHADED )
		tbn2[0] *= faceDirection;
		tbn2[1] *= faceDirection;
	#endif
#endif
vec3 geometryNormal = normal;`,Uh=`#ifdef USE_NORMALMAP_OBJECTSPACE
	normal = texture2D( normalMap, vNormalMapUv ).xyz * 2.0 - 1.0;
	#ifdef FLIP_SIDED
		normal = - normal;
	#endif
	#ifdef DOUBLE_SIDED
		normal = normal * faceDirection;
	#endif
	normal = normalize( normalMatrix * normal );
#elif defined( USE_NORMALMAP_TANGENTSPACE )
	vec3 mapN = texture2D( normalMap, vNormalMapUv ).xyz * 2.0 - 1.0;
	mapN.xy *= normalScale;
	normal = normalize( tbn * mapN );
#elif defined( USE_BUMPMAP )
	normal = perturbNormalArb( - vViewPosition, normal, dHdxy_fwd(), faceDirection );
#endif`,Ih=`#ifndef FLAT_SHADED
	varying vec3 vNormal;
	#ifdef USE_TANGENT
		varying vec3 vTangent;
		varying vec3 vBitangent;
	#endif
#endif`,Oh=`#ifndef FLAT_SHADED
	varying vec3 vNormal;
	#ifdef USE_TANGENT
		varying vec3 vTangent;
		varying vec3 vBitangent;
	#endif
#endif`,Nh=`#ifndef FLAT_SHADED
	vNormal = normalize( transformedNormal );
	#ifdef USE_TANGENT
		vTangent = normalize( transformedTangent );
		vBitangent = normalize( cross( vNormal, vTangent ) * tangent.w );
	#endif
#endif`,Fh=`#ifdef USE_NORMALMAP
	uniform sampler2D normalMap;
	uniform vec2 normalScale;
#endif
#ifdef USE_NORMALMAP_OBJECTSPACE
	uniform mat3 normalMatrix;
#endif
#if ! defined ( USE_TANGENT ) && ( defined ( USE_NORMALMAP_TANGENTSPACE ) || defined ( USE_CLEARCOAT_NORMALMAP ) || defined( USE_ANISOTROPY ) )
	mat3 getTangentFrame( vec3 eye_pos, vec3 surf_norm, vec2 uv ) {
		vec3 q0 = dFdx( eye_pos.xyz );
		vec3 q1 = dFdy( eye_pos.xyz );
		vec2 st0 = dFdx( uv.st );
		vec2 st1 = dFdy( uv.st );
		vec3 N = surf_norm;
		vec3 q1perp = cross( q1, N );
		vec3 q0perp = cross( N, q0 );
		vec3 T = q1perp * st0.x + q0perp * st1.x;
		vec3 B = q1perp * st0.y + q0perp * st1.y;
		float det = max( dot( T, T ), dot( B, B ) );
		float scale = ( det == 0.0 ) ? 0.0 : inversesqrt( det );
		return mat3( T * scale, B * scale, N );
	}
#endif`,zh=`#ifdef USE_CLEARCOAT
	vec3 clearcoatNormal = geometryNormal;
#endif`,Bh=`#ifdef USE_CLEARCOAT_NORMALMAP
	vec3 clearcoatMapN = texture2D( clearcoatNormalMap, vClearcoatNormalMapUv ).xyz * 2.0 - 1.0;
	clearcoatMapN.xy *= clearcoatNormalScale;
	clearcoatNormal = normalize( tbn2 * clearcoatMapN );
#endif`,kh=`#ifdef USE_CLEARCOATMAP
	uniform sampler2D clearcoatMap;
#endif
#ifdef USE_CLEARCOAT_NORMALMAP
	uniform sampler2D clearcoatNormalMap;
	uniform vec2 clearcoatNormalScale;
#endif
#ifdef USE_CLEARCOAT_ROUGHNESSMAP
	uniform sampler2D clearcoatRoughnessMap;
#endif`,Gh=`#ifdef USE_IRIDESCENCEMAP
	uniform sampler2D iridescenceMap;
#endif
#ifdef USE_IRIDESCENCE_THICKNESSMAP
	uniform sampler2D iridescenceThicknessMap;
#endif`,Hh=`#ifdef OPAQUE
diffuseColor.a = 1.0;
#endif
#ifdef USE_TRANSMISSION
diffuseColor.a *= material.transmissionAlpha;
#endif
gl_FragColor = vec4( outgoingLight, diffuseColor.a );`,Vh=`vec3 packNormalToRGB( const in vec3 normal ) {
	return normalize( normal ) * 0.5 + 0.5;
}
vec3 unpackRGBToNormal( const in vec3 rgb ) {
	return 2.0 * rgb.xyz - 1.0;
}
const float PackUpscale = 256. / 255.;const float UnpackDownscale = 255. / 256.;
const vec3 PackFactors = vec3( 256. * 256. * 256., 256. * 256., 256. );
const vec4 UnpackFactors = UnpackDownscale / vec4( PackFactors, 1. );
const float ShiftRight8 = 1. / 256.;
vec4 packDepthToRGBA( const in float v ) {
	vec4 r = vec4( fract( v * PackFactors ), v );
	r.yzw -= r.xyz * ShiftRight8;	return r * PackUpscale;
}
float unpackRGBAToDepth( const in vec4 v ) {
	return dot( v, UnpackFactors );
}
vec2 packDepthToRG( in highp float v ) {
	return packDepthToRGBA( v ).yx;
}
float unpackRGToDepth( const in highp vec2 v ) {
	return unpackRGBAToDepth( vec4( v.xy, 0.0, 0.0 ) );
}
vec4 pack2HalfToRGBA( vec2 v ) {
	vec4 r = vec4( v.x, fract( v.x * 255.0 ), v.y, fract( v.y * 255.0 ) );
	return vec4( r.x - r.y / 255.0, r.y, r.z - r.w / 255.0, r.w );
}
vec2 unpackRGBATo2Half( vec4 v ) {
	return vec2( v.x + ( v.y / 255.0 ), v.z + ( v.w / 255.0 ) );
}
float viewZToOrthographicDepth( const in float viewZ, const in float near, const in float far ) {
	return ( viewZ + near ) / ( near - far );
}
float orthographicDepthToViewZ( const in float depth, const in float near, const in float far ) {
	return depth * ( near - far ) - near;
}
float viewZToPerspectiveDepth( const in float viewZ, const in float near, const in float far ) {
	return ( ( near + viewZ ) * far ) / ( ( far - near ) * viewZ );
}
float perspectiveDepthToViewZ( const in float depth, const in float near, const in float far ) {
	return ( near * far ) / ( ( far - near ) * depth - far );
}`,Wh=`#ifdef PREMULTIPLIED_ALPHA
	gl_FragColor.rgb *= gl_FragColor.a;
#endif`,Xh=`vec4 mvPosition = vec4( transformed, 1.0 );
#ifdef USE_INSTANCING
	mvPosition = instanceMatrix * mvPosition;
#endif
mvPosition = modelViewMatrix * mvPosition;
gl_Position = projectionMatrix * mvPosition;`,qh=`#ifdef DITHERING
	gl_FragColor.rgb = dithering( gl_FragColor.rgb );
#endif`,Yh=`#ifdef DITHERING
	vec3 dithering( vec3 color ) {
		float grid_position = rand( gl_FragCoord.xy );
		vec3 dither_shift_RGB = vec3( 0.25 / 255.0, -0.25 / 255.0, 0.25 / 255.0 );
		dither_shift_RGB = mix( 2.0 * dither_shift_RGB, -2.0 * dither_shift_RGB, grid_position );
		return color + dither_shift_RGB;
	}
#endif`,jh=`float roughnessFactor = roughness;
#ifdef USE_ROUGHNESSMAP
	vec4 texelRoughness = texture2D( roughnessMap, vRoughnessMapUv );
	roughnessFactor *= texelRoughness.g;
#endif`,Zh=`#ifdef USE_ROUGHNESSMAP
	uniform sampler2D roughnessMap;
#endif`,Kh=`#if NUM_SPOT_LIGHT_COORDS > 0
	varying vec4 vSpotLightCoord[ NUM_SPOT_LIGHT_COORDS ];
#endif
#if NUM_SPOT_LIGHT_MAPS > 0
	uniform sampler2D spotLightMap[ NUM_SPOT_LIGHT_MAPS ];
#endif
#ifdef USE_SHADOWMAP
	#if NUM_DIR_LIGHT_SHADOWS > 0
		uniform sampler2D directionalShadowMap[ NUM_DIR_LIGHT_SHADOWS ];
		varying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];
		struct DirectionalLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];
	#endif
	#if NUM_SPOT_LIGHT_SHADOWS > 0
		uniform sampler2D spotShadowMap[ NUM_SPOT_LIGHT_SHADOWS ];
		struct SpotLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
		uniform sampler2D pointShadowMap[ NUM_POINT_LIGHT_SHADOWS ];
		varying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];
		struct PointLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
			float shadowCameraNear;
			float shadowCameraFar;
		};
		uniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];
	#endif
	float texture2DCompare( sampler2D depths, vec2 uv, float compare ) {
		return step( compare, unpackRGBAToDepth( texture2D( depths, uv ) ) );
	}
	vec2 texture2DDistribution( sampler2D shadow, vec2 uv ) {
		return unpackRGBATo2Half( texture2D( shadow, uv ) );
	}
	float VSMShadow (sampler2D shadow, vec2 uv, float compare ){
		float occlusion = 1.0;
		vec2 distribution = texture2DDistribution( shadow, uv );
		float hard_shadow = step( compare , distribution.x );
		if (hard_shadow != 1.0 ) {
			float distance = compare - distribution.x ;
			float variance = max( 0.00000, distribution.y * distribution.y );
			float softness_probability = variance / (variance + distance * distance );			softness_probability = clamp( ( softness_probability - 0.3 ) / ( 0.95 - 0.3 ), 0.0, 1.0 );			occlusion = clamp( max( hard_shadow, softness_probability ), 0.0, 1.0 );
		}
		return occlusion;
	}
	float getShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord ) {
		float shadow = 1.0;
		shadowCoord.xyz /= shadowCoord.w;
		shadowCoord.z += shadowBias;
		bool inFrustum = shadowCoord.x >= 0.0 && shadowCoord.x <= 1.0 && shadowCoord.y >= 0.0 && shadowCoord.y <= 1.0;
		bool frustumTest = inFrustum && shadowCoord.z <= 1.0;
		if ( frustumTest ) {
		#if defined( SHADOWMAP_TYPE_PCF )
			vec2 texelSize = vec2( 1.0 ) / shadowMapSize;
			float dx0 = - texelSize.x * shadowRadius;
			float dy0 = - texelSize.y * shadowRadius;
			float dx1 = + texelSize.x * shadowRadius;
			float dy1 = + texelSize.y * shadowRadius;
			float dx2 = dx0 / 2.0;
			float dy2 = dy0 / 2.0;
			float dx3 = dx1 / 2.0;
			float dy3 = dy1 / 2.0;
			shadow = (
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy2 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy2 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy2 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy3 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy3 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy3 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy1 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy1 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy1 ), shadowCoord.z )
			) * ( 1.0 / 17.0 );
		#elif defined( SHADOWMAP_TYPE_PCF_SOFT )
			vec2 texelSize = vec2( 1.0 ) / shadowMapSize;
			float dx = texelSize.x;
			float dy = texelSize.y;
			vec2 uv = shadowCoord.xy;
			vec2 f = fract( uv * shadowMapSize + 0.5 );
			uv -= f * texelSize;
			shadow = (
				texture2DCompare( shadowMap, uv, shadowCoord.z ) +
				texture2DCompare( shadowMap, uv + vec2( dx, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, uv + vec2( 0.0, dy ), shadowCoord.z ) +
				texture2DCompare( shadowMap, uv + texelSize, shadowCoord.z ) +
				mix( texture2DCompare( shadowMap, uv + vec2( -dx, 0.0 ), shadowCoord.z ),
					 texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 0.0 ), shadowCoord.z ),
					 f.x ) +
				mix( texture2DCompare( shadowMap, uv + vec2( -dx, dy ), shadowCoord.z ),
					 texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, dy ), shadowCoord.z ),
					 f.x ) +
				mix( texture2DCompare( shadowMap, uv + vec2( 0.0, -dy ), shadowCoord.z ),
					 texture2DCompare( shadowMap, uv + vec2( 0.0, 2.0 * dy ), shadowCoord.z ),
					 f.y ) +
				mix( texture2DCompare( shadowMap, uv + vec2( dx, -dy ), shadowCoord.z ),
					 texture2DCompare( shadowMap, uv + vec2( dx, 2.0 * dy ), shadowCoord.z ),
					 f.y ) +
				mix( mix( texture2DCompare( shadowMap, uv + vec2( -dx, -dy ), shadowCoord.z ),
						  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, -dy ), shadowCoord.z ),
						  f.x ),
					 mix( texture2DCompare( shadowMap, uv + vec2( -dx, 2.0 * dy ), shadowCoord.z ),
						  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 2.0 * dy ), shadowCoord.z ),
						  f.x ),
					 f.y )
			) * ( 1.0 / 9.0 );
		#elif defined( SHADOWMAP_TYPE_VSM )
			shadow = VSMShadow( shadowMap, shadowCoord.xy, shadowCoord.z );
		#else
			shadow = texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z );
		#endif
		}
		return shadow;
	}
	vec2 cubeToUV( vec3 v, float texelSizeY ) {
		vec3 absV = abs( v );
		float scaleToCube = 1.0 / max( absV.x, max( absV.y, absV.z ) );
		absV *= scaleToCube;
		v *= scaleToCube * ( 1.0 - 2.0 * texelSizeY );
		vec2 planar = v.xy;
		float almostATexel = 1.5 * texelSizeY;
		float almostOne = 1.0 - almostATexel;
		if ( absV.z >= almostOne ) {
			if ( v.z > 0.0 )
				planar.x = 4.0 - v.x;
		} else if ( absV.x >= almostOne ) {
			float signX = sign( v.x );
			planar.x = v.z * signX + 2.0 * signX;
		} else if ( absV.y >= almostOne ) {
			float signY = sign( v.y );
			planar.x = v.x + 2.0 * signY + 2.0;
			planar.y = v.z * signY - 2.0;
		}
		return vec2( 0.125, 0.25 ) * planar + vec2( 0.375, 0.75 );
	}
	float getPointShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord, float shadowCameraNear, float shadowCameraFar ) {
		vec2 texelSize = vec2( 1.0 ) / ( shadowMapSize * vec2( 4.0, 2.0 ) );
		vec3 lightToPosition = shadowCoord.xyz;
		float dp = ( length( lightToPosition ) - shadowCameraNear ) / ( shadowCameraFar - shadowCameraNear );		dp += shadowBias;
		vec3 bd3D = normalize( lightToPosition );
		#if defined( SHADOWMAP_TYPE_PCF ) || defined( SHADOWMAP_TYPE_PCF_SOFT ) || defined( SHADOWMAP_TYPE_VSM )
			vec2 offset = vec2( - 1, 1 ) * shadowRadius * texelSize.y;
			return (
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyy, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyy, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyx, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyx, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxy, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxy, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxx, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxx, texelSize.y ), dp )
			) * ( 1.0 / 9.0 );
		#else
			return texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp );
		#endif
	}
#endif`,$h=`#if NUM_SPOT_LIGHT_COORDS > 0
	uniform mat4 spotLightMatrix[ NUM_SPOT_LIGHT_COORDS ];
	varying vec4 vSpotLightCoord[ NUM_SPOT_LIGHT_COORDS ];
#endif
#ifdef USE_SHADOWMAP
	#if NUM_DIR_LIGHT_SHADOWS > 0
		uniform mat4 directionalShadowMatrix[ NUM_DIR_LIGHT_SHADOWS ];
		varying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];
		struct DirectionalLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];
	#endif
	#if NUM_SPOT_LIGHT_SHADOWS > 0
		struct SpotLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
		uniform mat4 pointShadowMatrix[ NUM_POINT_LIGHT_SHADOWS ];
		varying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];
		struct PointLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
			float shadowCameraNear;
			float shadowCameraFar;
		};
		uniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];
	#endif
#endif`,Jh=`#if ( defined( USE_SHADOWMAP ) && ( NUM_DIR_LIGHT_SHADOWS > 0 || NUM_POINT_LIGHT_SHADOWS > 0 ) ) || ( NUM_SPOT_LIGHT_COORDS > 0 )
	vec3 shadowWorldNormal = inverseTransformDirection( transformedNormal, viewMatrix );
	vec4 shadowWorldPosition;
#endif
#if defined( USE_SHADOWMAP )
	#if NUM_DIR_LIGHT_SHADOWS > 0
		#pragma unroll_loop_start
		for ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {
			shadowWorldPosition = worldPosition + vec4( shadowWorldNormal * directionalLightShadows[ i ].shadowNormalBias, 0 );
			vDirectionalShadowCoord[ i ] = directionalShadowMatrix[ i ] * shadowWorldPosition;
		}
		#pragma unroll_loop_end
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
		#pragma unroll_loop_start
		for ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {
			shadowWorldPosition = worldPosition + vec4( shadowWorldNormal * pointLightShadows[ i ].shadowNormalBias, 0 );
			vPointShadowCoord[ i ] = pointShadowMatrix[ i ] * shadowWorldPosition;
		}
		#pragma unroll_loop_end
	#endif
#endif
#if NUM_SPOT_LIGHT_COORDS > 0
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_SPOT_LIGHT_COORDS; i ++ ) {
		shadowWorldPosition = worldPosition;
		#if ( defined( USE_SHADOWMAP ) && UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )
			shadowWorldPosition.xyz += shadowWorldNormal * spotLightShadows[ i ].shadowNormalBias;
		#endif
		vSpotLightCoord[ i ] = spotLightMatrix[ i ] * shadowWorldPosition;
	}
	#pragma unroll_loop_end
#endif`,Qh=`float getShadowMask() {
	float shadow = 1.0;
	#ifdef USE_SHADOWMAP
	#if NUM_DIR_LIGHT_SHADOWS > 0
	DirectionalLightShadow directionalLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {
		directionalLight = directionalLightShadows[ i ];
		shadow *= receiveShadow ? getShadow( directionalShadowMap[ i ], directionalLight.shadowMapSize, directionalLight.shadowBias, directionalLight.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;
	}
	#pragma unroll_loop_end
	#endif
	#if NUM_SPOT_LIGHT_SHADOWS > 0
	SpotLightShadow spotLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_SPOT_LIGHT_SHADOWS; i ++ ) {
		spotLight = spotLightShadows[ i ];
		shadow *= receiveShadow ? getShadow( spotShadowMap[ i ], spotLight.shadowMapSize, spotLight.shadowBias, spotLight.shadowRadius, vSpotLightCoord[ i ] ) : 1.0;
	}
	#pragma unroll_loop_end
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
	PointLightShadow pointLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {
		pointLight = pointLightShadows[ i ];
		shadow *= receiveShadow ? getPointShadow( pointShadowMap[ i ], pointLight.shadowMapSize, pointLight.shadowBias, pointLight.shadowRadius, vPointShadowCoord[ i ], pointLight.shadowCameraNear, pointLight.shadowCameraFar ) : 1.0;
	}
	#pragma unroll_loop_end
	#endif
	#endif
	return shadow;
}`,tf=`#ifdef USE_SKINNING
	mat4 boneMatX = getBoneMatrix( skinIndex.x );
	mat4 boneMatY = getBoneMatrix( skinIndex.y );
	mat4 boneMatZ = getBoneMatrix( skinIndex.z );
	mat4 boneMatW = getBoneMatrix( skinIndex.w );
#endif`,ef=`#ifdef USE_SKINNING
	uniform mat4 bindMatrix;
	uniform mat4 bindMatrixInverse;
	uniform highp sampler2D boneTexture;
	uniform int boneTextureSize;
	mat4 getBoneMatrix( const in float i ) {
		float j = i * 4.0;
		float x = mod( j, float( boneTextureSize ) );
		float y = floor( j / float( boneTextureSize ) );
		float dx = 1.0 / float( boneTextureSize );
		float dy = 1.0 / float( boneTextureSize );
		y = dy * ( y + 0.5 );
		vec4 v1 = texture2D( boneTexture, vec2( dx * ( x + 0.5 ), y ) );
		vec4 v2 = texture2D( boneTexture, vec2( dx * ( x + 1.5 ), y ) );
		vec4 v3 = texture2D( boneTexture, vec2( dx * ( x + 2.5 ), y ) );
		vec4 v4 = texture2D( boneTexture, vec2( dx * ( x + 3.5 ), y ) );
		mat4 bone = mat4( v1, v2, v3, v4 );
		return bone;
	}
#endif`,nf=`#ifdef USE_SKINNING
	vec4 skinVertex = bindMatrix * vec4( transformed, 1.0 );
	vec4 skinned = vec4( 0.0 );
	skinned += boneMatX * skinVertex * skinWeight.x;
	skinned += boneMatY * skinVertex * skinWeight.y;
	skinned += boneMatZ * skinVertex * skinWeight.z;
	skinned += boneMatW * skinVertex * skinWeight.w;
	transformed = ( bindMatrixInverse * skinned ).xyz;
#endif`,rf=`#ifdef USE_SKINNING
	mat4 skinMatrix = mat4( 0.0 );
	skinMatrix += skinWeight.x * boneMatX;
	skinMatrix += skinWeight.y * boneMatY;
	skinMatrix += skinWeight.z * boneMatZ;
	skinMatrix += skinWeight.w * boneMatW;
	skinMatrix = bindMatrixInverse * skinMatrix * bindMatrix;
	objectNormal = vec4( skinMatrix * vec4( objectNormal, 0.0 ) ).xyz;
	#ifdef USE_TANGENT
		objectTangent = vec4( skinMatrix * vec4( objectTangent, 0.0 ) ).xyz;
	#endif
#endif`,sf=`float specularStrength;
#ifdef USE_SPECULARMAP
	vec4 texelSpecular = texture2D( specularMap, vSpecularMapUv );
	specularStrength = texelSpecular.r;
#else
	specularStrength = 1.0;
#endif`,of=`#ifdef USE_SPECULARMAP
	uniform sampler2D specularMap;
#endif`,af=`#if defined( TONE_MAPPING )
	gl_FragColor.rgb = toneMapping( gl_FragColor.rgb );
#endif`,lf=`#ifndef saturate
#define saturate( a ) clamp( a, 0.0, 1.0 )
#endif
uniform float toneMappingExposure;
vec3 LinearToneMapping( vec3 color ) {
	return saturate( toneMappingExposure * color );
}
vec3 ReinhardToneMapping( vec3 color ) {
	color *= toneMappingExposure;
	return saturate( color / ( vec3( 1.0 ) + color ) );
}
vec3 OptimizedCineonToneMapping( vec3 color ) {
	color *= toneMappingExposure;
	color = max( vec3( 0.0 ), color - 0.004 );
	return pow( ( color * ( 6.2 * color + 0.5 ) ) / ( color * ( 6.2 * color + 1.7 ) + 0.06 ), vec3( 2.2 ) );
}
vec3 RRTAndODTFit( vec3 v ) {
	vec3 a = v * ( v + 0.0245786 ) - 0.000090537;
	vec3 b = v * ( 0.983729 * v + 0.4329510 ) + 0.238081;
	return a / b;
}
vec3 ACESFilmicToneMapping( vec3 color ) {
	const mat3 ACESInputMat = mat3(
		vec3( 0.59719, 0.07600, 0.02840 ),		vec3( 0.35458, 0.90834, 0.13383 ),
		vec3( 0.04823, 0.01566, 0.83777 )
	);
	const mat3 ACESOutputMat = mat3(
		vec3(  1.60475, -0.10208, -0.00327 ),		vec3( -0.53108,  1.10813, -0.07276 ),
		vec3( -0.07367, -0.00605,  1.07602 )
	);
	color *= toneMappingExposure / 0.6;
	color = ACESInputMat * color;
	color = RRTAndODTFit( color );
	color = ACESOutputMat * color;
	return saturate( color );
}
vec3 CustomToneMapping( vec3 color ) { return color; }`,cf=`#ifdef USE_TRANSMISSION
	material.transmission = transmission;
	material.transmissionAlpha = 1.0;
	material.thickness = thickness;
	material.attenuationDistance = attenuationDistance;
	material.attenuationColor = attenuationColor;
	#ifdef USE_TRANSMISSIONMAP
		material.transmission *= texture2D( transmissionMap, vTransmissionMapUv ).r;
	#endif
	#ifdef USE_THICKNESSMAP
		material.thickness *= texture2D( thicknessMap, vThicknessMapUv ).g;
	#endif
	vec3 pos = vWorldPosition;
	vec3 v = normalize( cameraPosition - pos );
	vec3 n = inverseTransformDirection( normal, viewMatrix );
	vec4 transmitted = getIBLVolumeRefraction(
		n, v, material.roughness, material.diffuseColor, material.specularColor, material.specularF90,
		pos, modelMatrix, viewMatrix, projectionMatrix, material.ior, material.thickness,
		material.attenuationColor, material.attenuationDistance );
	material.transmissionAlpha = mix( material.transmissionAlpha, transmitted.a, material.transmission );
	totalDiffuse = mix( totalDiffuse, transmitted.rgb, material.transmission );
#endif`,uf=`#ifdef USE_TRANSMISSION
	uniform float transmission;
	uniform float thickness;
	uniform float attenuationDistance;
	uniform vec3 attenuationColor;
	#ifdef USE_TRANSMISSIONMAP
		uniform sampler2D transmissionMap;
	#endif
	#ifdef USE_THICKNESSMAP
		uniform sampler2D thicknessMap;
	#endif
	uniform vec2 transmissionSamplerSize;
	uniform sampler2D transmissionSamplerMap;
	uniform mat4 modelMatrix;
	uniform mat4 projectionMatrix;
	varying vec3 vWorldPosition;
	float w0( float a ) {
		return ( 1.0 / 6.0 ) * ( a * ( a * ( - a + 3.0 ) - 3.0 ) + 1.0 );
	}
	float w1( float a ) {
		return ( 1.0 / 6.0 ) * ( a *  a * ( 3.0 * a - 6.0 ) + 4.0 );
	}
	float w2( float a ){
		return ( 1.0 / 6.0 ) * ( a * ( a * ( - 3.0 * a + 3.0 ) + 3.0 ) + 1.0 );
	}
	float w3( float a ) {
		return ( 1.0 / 6.0 ) * ( a * a * a );
	}
	float g0( float a ) {
		return w0( a ) + w1( a );
	}
	float g1( float a ) {
		return w2( a ) + w3( a );
	}
	float h0( float a ) {
		return - 1.0 + w1( a ) / ( w0( a ) + w1( a ) );
	}
	float h1( float a ) {
		return 1.0 + w3( a ) / ( w2( a ) + w3( a ) );
	}
	vec4 bicubic( sampler2D tex, vec2 uv, vec4 texelSize, float lod ) {
		uv = uv * texelSize.zw + 0.5;
		vec2 iuv = floor( uv );
		vec2 fuv = fract( uv );
		float g0x = g0( fuv.x );
		float g1x = g1( fuv.x );
		float h0x = h0( fuv.x );
		float h1x = h1( fuv.x );
		float h0y = h0( fuv.y );
		float h1y = h1( fuv.y );
		vec2 p0 = ( vec2( iuv.x + h0x, iuv.y + h0y ) - 0.5 ) * texelSize.xy;
		vec2 p1 = ( vec2( iuv.x + h1x, iuv.y + h0y ) - 0.5 ) * texelSize.xy;
		vec2 p2 = ( vec2( iuv.x + h0x, iuv.y + h1y ) - 0.5 ) * texelSize.xy;
		vec2 p3 = ( vec2( iuv.x + h1x, iuv.y + h1y ) - 0.5 ) * texelSize.xy;
		return g0( fuv.y ) * ( g0x * textureLod( tex, p0, lod ) + g1x * textureLod( tex, p1, lod ) ) +
			g1( fuv.y ) * ( g0x * textureLod( tex, p2, lod ) + g1x * textureLod( tex, p3, lod ) );
	}
	vec4 textureBicubic( sampler2D sampler, vec2 uv, float lod ) {
		vec2 fLodSize = vec2( textureSize( sampler, int( lod ) ) );
		vec2 cLodSize = vec2( textureSize( sampler, int( lod + 1.0 ) ) );
		vec2 fLodSizeInv = 1.0 / fLodSize;
		vec2 cLodSizeInv = 1.0 / cLodSize;
		vec4 fSample = bicubic( sampler, uv, vec4( fLodSizeInv, fLodSize ), floor( lod ) );
		vec4 cSample = bicubic( sampler, uv, vec4( cLodSizeInv, cLodSize ), ceil( lod ) );
		return mix( fSample, cSample, fract( lod ) );
	}
	vec3 getVolumeTransmissionRay( const in vec3 n, const in vec3 v, const in float thickness, const in float ior, const in mat4 modelMatrix ) {
		vec3 refractionVector = refract( - v, normalize( n ), 1.0 / ior );
		vec3 modelScale;
		modelScale.x = length( vec3( modelMatrix[ 0 ].xyz ) );
		modelScale.y = length( vec3( modelMatrix[ 1 ].xyz ) );
		modelScale.z = length( vec3( modelMatrix[ 2 ].xyz ) );
		return normalize( refractionVector ) * thickness * modelScale;
	}
	float applyIorToRoughness( const in float roughness, const in float ior ) {
		return roughness * clamp( ior * 2.0 - 2.0, 0.0, 1.0 );
	}
	vec4 getTransmissionSample( const in vec2 fragCoord, const in float roughness, const in float ior ) {
		float lod = log2( transmissionSamplerSize.x ) * applyIorToRoughness( roughness, ior );
		return textureBicubic( transmissionSamplerMap, fragCoord.xy, lod );
	}
	vec3 volumeAttenuation( const in float transmissionDistance, const in vec3 attenuationColor, const in float attenuationDistance ) {
		if ( isinf( attenuationDistance ) ) {
			return vec3( 1.0 );
		} else {
			vec3 attenuationCoefficient = -log( attenuationColor ) / attenuationDistance;
			vec3 transmittance = exp( - attenuationCoefficient * transmissionDistance );			return transmittance;
		}
	}
	vec4 getIBLVolumeRefraction( const in vec3 n, const in vec3 v, const in float roughness, const in vec3 diffuseColor,
		const in vec3 specularColor, const in float specularF90, const in vec3 position, const in mat4 modelMatrix,
		const in mat4 viewMatrix, const in mat4 projMatrix, const in float ior, const in float thickness,
		const in vec3 attenuationColor, const in float attenuationDistance ) {
		vec3 transmissionRay = getVolumeTransmissionRay( n, v, thickness, ior, modelMatrix );
		vec3 refractedRayExit = position + transmissionRay;
		vec4 ndcPos = projMatrix * viewMatrix * vec4( refractedRayExit, 1.0 );
		vec2 refractionCoords = ndcPos.xy / ndcPos.w;
		refractionCoords += 1.0;
		refractionCoords /= 2.0;
		vec4 transmittedLight = getTransmissionSample( refractionCoords, roughness, ior );
		vec3 transmittance = diffuseColor * volumeAttenuation( length( transmissionRay ), attenuationColor, attenuationDistance );
		vec3 attenuatedColor = transmittance * transmittedLight.rgb;
		vec3 F = EnvironmentBRDF( n, v, specularColor, specularF90, roughness );
		float transmittanceFactor = ( transmittance.r + transmittance.g + transmittance.b ) / 3.0;
		return vec4( ( 1.0 - F ) * attenuatedColor, 1.0 - ( 1.0 - transmittedLight.a ) * transmittanceFactor );
	}
#endif`,hf=`#if defined( USE_UV ) || defined( USE_ANISOTROPY )
	varying vec2 vUv;
#endif
#ifdef USE_MAP
	varying vec2 vMapUv;
#endif
#ifdef USE_ALPHAMAP
	varying vec2 vAlphaMapUv;
#endif
#ifdef USE_LIGHTMAP
	varying vec2 vLightMapUv;
#endif
#ifdef USE_AOMAP
	varying vec2 vAoMapUv;
#endif
#ifdef USE_BUMPMAP
	varying vec2 vBumpMapUv;
#endif
#ifdef USE_NORMALMAP
	varying vec2 vNormalMapUv;
#endif
#ifdef USE_EMISSIVEMAP
	varying vec2 vEmissiveMapUv;
#endif
#ifdef USE_METALNESSMAP
	varying vec2 vMetalnessMapUv;
#endif
#ifdef USE_ROUGHNESSMAP
	varying vec2 vRoughnessMapUv;
#endif
#ifdef USE_ANISOTROPYMAP
	varying vec2 vAnisotropyMapUv;
#endif
#ifdef USE_CLEARCOATMAP
	varying vec2 vClearcoatMapUv;
#endif
#ifdef USE_CLEARCOAT_NORMALMAP
	varying vec2 vClearcoatNormalMapUv;
#endif
#ifdef USE_CLEARCOAT_ROUGHNESSMAP
	varying vec2 vClearcoatRoughnessMapUv;
#endif
#ifdef USE_IRIDESCENCEMAP
	varying vec2 vIridescenceMapUv;
#endif
#ifdef USE_IRIDESCENCE_THICKNESSMAP
	varying vec2 vIridescenceThicknessMapUv;
#endif
#ifdef USE_SHEEN_COLORMAP
	varying vec2 vSheenColorMapUv;
#endif
#ifdef USE_SHEEN_ROUGHNESSMAP
	varying vec2 vSheenRoughnessMapUv;
#endif
#ifdef USE_SPECULARMAP
	varying vec2 vSpecularMapUv;
#endif
#ifdef USE_SPECULAR_COLORMAP
	varying vec2 vSpecularColorMapUv;
#endif
#ifdef USE_SPECULAR_INTENSITYMAP
	varying vec2 vSpecularIntensityMapUv;
#endif
#ifdef USE_TRANSMISSIONMAP
	uniform mat3 transmissionMapTransform;
	varying vec2 vTransmissionMapUv;
#endif
#ifdef USE_THICKNESSMAP
	uniform mat3 thicknessMapTransform;
	varying vec2 vThicknessMapUv;
#endif`,ff=`#if defined( USE_UV ) || defined( USE_ANISOTROPY )
	varying vec2 vUv;
#endif
#ifdef USE_MAP
	uniform mat3 mapTransform;
	varying vec2 vMapUv;
#endif
#ifdef USE_ALPHAMAP
	uniform mat3 alphaMapTransform;
	varying vec2 vAlphaMapUv;
#endif
#ifdef USE_LIGHTMAP
	uniform mat3 lightMapTransform;
	varying vec2 vLightMapUv;
#endif
#ifdef USE_AOMAP
	uniform mat3 aoMapTransform;
	varying vec2 vAoMapUv;
#endif
#ifdef USE_BUMPMAP
	uniform mat3 bumpMapTransform;
	varying vec2 vBumpMapUv;
#endif
#ifdef USE_NORMALMAP
	uniform mat3 normalMapTransform;
	varying vec2 vNormalMapUv;
#endif
#ifdef USE_DISPLACEMENTMAP
	uniform mat3 displacementMapTransform;
	varying vec2 vDisplacementMapUv;
#endif
#ifdef USE_EMISSIVEMAP
	uniform mat3 emissiveMapTransform;
	varying vec2 vEmissiveMapUv;
#endif
#ifdef USE_METALNESSMAP
	uniform mat3 metalnessMapTransform;
	varying vec2 vMetalnessMapUv;
#endif
#ifdef USE_ROUGHNESSMAP
	uniform mat3 roughnessMapTransform;
	varying vec2 vRoughnessMapUv;
#endif
#ifdef USE_ANISOTROPYMAP
	uniform mat3 anisotropyMapTransform;
	varying vec2 vAnisotropyMapUv;
#endif
#ifdef USE_CLEARCOATMAP
	uniform mat3 clearcoatMapTransform;
	varying vec2 vClearcoatMapUv;
#endif
#ifdef USE_CLEARCOAT_NORMALMAP
	uniform mat3 clearcoatNormalMapTransform;
	varying vec2 vClearcoatNormalMapUv;
#endif
#ifdef USE_CLEARCOAT_ROUGHNESSMAP
	uniform mat3 clearcoatRoughnessMapTransform;
	varying vec2 vClearcoatRoughnessMapUv;
#endif
#ifdef USE_SHEEN_COLORMAP
	uniform mat3 sheenColorMapTransform;
	varying vec2 vSheenColorMapUv;
#endif
#ifdef USE_SHEEN_ROUGHNESSMAP
	uniform mat3 sheenRoughnessMapTransform;
	varying vec2 vSheenRoughnessMapUv;
#endif
#ifdef USE_IRIDESCENCEMAP
	uniform mat3 iridescenceMapTransform;
	varying vec2 vIridescenceMapUv;
#endif
#ifdef USE_IRIDESCENCE_THICKNESSMAP
	uniform mat3 iridescenceThicknessMapTransform;
	varying vec2 vIridescenceThicknessMapUv;
#endif
#ifdef USE_SPECULARMAP
	uniform mat3 specularMapTransform;
	varying vec2 vSpecularMapUv;
#endif
#ifdef USE_SPECULAR_COLORMAP
	uniform mat3 specularColorMapTransform;
	varying vec2 vSpecularColorMapUv;
#endif
#ifdef USE_SPECULAR_INTENSITYMAP
	uniform mat3 specularIntensityMapTransform;
	varying vec2 vSpecularIntensityMapUv;
#endif
#ifdef USE_TRANSMISSIONMAP
	uniform mat3 transmissionMapTransform;
	varying vec2 vTransmissionMapUv;
#endif
#ifdef USE_THICKNESSMAP
	uniform mat3 thicknessMapTransform;
	varying vec2 vThicknessMapUv;
#endif`,df=`#if defined( USE_UV ) || defined( USE_ANISOTROPY )
	vUv = vec3( uv, 1 ).xy;
#endif
#ifdef USE_MAP
	vMapUv = ( mapTransform * vec3( MAP_UV, 1 ) ).xy;
#endif
#ifdef USE_ALPHAMAP
	vAlphaMapUv = ( alphaMapTransform * vec3( ALPHAMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_LIGHTMAP
	vLightMapUv = ( lightMapTransform * vec3( LIGHTMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_AOMAP
	vAoMapUv = ( aoMapTransform * vec3( AOMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_BUMPMAP
	vBumpMapUv = ( bumpMapTransform * vec3( BUMPMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_NORMALMAP
	vNormalMapUv = ( normalMapTransform * vec3( NORMALMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_DISPLACEMENTMAP
	vDisplacementMapUv = ( displacementMapTransform * vec3( DISPLACEMENTMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_EMISSIVEMAP
	vEmissiveMapUv = ( emissiveMapTransform * vec3( EMISSIVEMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_METALNESSMAP
	vMetalnessMapUv = ( metalnessMapTransform * vec3( METALNESSMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_ROUGHNESSMAP
	vRoughnessMapUv = ( roughnessMapTransform * vec3( ROUGHNESSMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_ANISOTROPYMAP
	vAnisotropyMapUv = ( anisotropyMapTransform * vec3( ANISOTROPYMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_CLEARCOATMAP
	vClearcoatMapUv = ( clearcoatMapTransform * vec3( CLEARCOATMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_CLEARCOAT_NORMALMAP
	vClearcoatNormalMapUv = ( clearcoatNormalMapTransform * vec3( CLEARCOAT_NORMALMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_CLEARCOAT_ROUGHNESSMAP
	vClearcoatRoughnessMapUv = ( clearcoatRoughnessMapTransform * vec3( CLEARCOAT_ROUGHNESSMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_IRIDESCENCEMAP
	vIridescenceMapUv = ( iridescenceMapTransform * vec3( IRIDESCENCEMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_IRIDESCENCE_THICKNESSMAP
	vIridescenceThicknessMapUv = ( iridescenceThicknessMapTransform * vec3( IRIDESCENCE_THICKNESSMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_SHEEN_COLORMAP
	vSheenColorMapUv = ( sheenColorMapTransform * vec3( SHEEN_COLORMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_SHEEN_ROUGHNESSMAP
	vSheenRoughnessMapUv = ( sheenRoughnessMapTransform * vec3( SHEEN_ROUGHNESSMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_SPECULARMAP
	vSpecularMapUv = ( specularMapTransform * vec3( SPECULARMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_SPECULAR_COLORMAP
	vSpecularColorMapUv = ( specularColorMapTransform * vec3( SPECULAR_COLORMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_SPECULAR_INTENSITYMAP
	vSpecularIntensityMapUv = ( specularIntensityMapTransform * vec3( SPECULAR_INTENSITYMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_TRANSMISSIONMAP
	vTransmissionMapUv = ( transmissionMapTransform * vec3( TRANSMISSIONMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_THICKNESSMAP
	vThicknessMapUv = ( thicknessMapTransform * vec3( THICKNESSMAP_UV, 1 ) ).xy;
#endif`,pf=`#if defined( USE_ENVMAP ) || defined( DISTANCE ) || defined ( USE_SHADOWMAP ) || defined ( USE_TRANSMISSION ) || NUM_SPOT_LIGHT_COORDS > 0
	vec4 worldPosition = vec4( transformed, 1.0 );
	#ifdef USE_INSTANCING
		worldPosition = instanceMatrix * worldPosition;
	#endif
	worldPosition = modelMatrix * worldPosition;
#endif`;const mf=`varying vec2 vUv;
uniform mat3 uvTransform;
void main() {
	vUv = ( uvTransform * vec3( uv, 1 ) ).xy;
	gl_Position = vec4( position.xy, 1.0, 1.0 );
}`,_f=`uniform sampler2D t2D;
uniform float backgroundIntensity;
varying vec2 vUv;
void main() {
	vec4 texColor = texture2D( t2D, vUv );
	#ifdef DECODE_VIDEO_TEXTURE
		texColor = vec4( mix( pow( texColor.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), texColor.rgb * 0.0773993808, vec3( lessThanEqual( texColor.rgb, vec3( 0.04045 ) ) ) ), texColor.w );
	#endif
	texColor.rgb *= backgroundIntensity;
	gl_FragColor = texColor;
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
}`,gf=`varying vec3 vWorldDirection;
#include <common>
void main() {
	vWorldDirection = transformDirection( position, modelMatrix );
	#include <begin_vertex>
	#include <project_vertex>
	gl_Position.z = gl_Position.w;
}`,vf=`#ifdef ENVMAP_TYPE_CUBE
	uniform samplerCube envMap;
#elif defined( ENVMAP_TYPE_CUBE_UV )
	uniform sampler2D envMap;
#endif
uniform float flipEnvMap;
uniform float backgroundBlurriness;
uniform float backgroundIntensity;
varying vec3 vWorldDirection;
#include <cube_uv_reflection_fragment>
void main() {
	#ifdef ENVMAP_TYPE_CUBE
		vec4 texColor = textureCube( envMap, vec3( flipEnvMap * vWorldDirection.x, vWorldDirection.yz ) );
	#elif defined( ENVMAP_TYPE_CUBE_UV )
		vec4 texColor = textureCubeUV( envMap, vWorldDirection, backgroundBlurriness );
	#else
		vec4 texColor = vec4( 0.0, 0.0, 0.0, 1.0 );
	#endif
	texColor.rgb *= backgroundIntensity;
	gl_FragColor = texColor;
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
}`,xf=`varying vec3 vWorldDirection;
#include <common>
void main() {
	vWorldDirection = transformDirection( position, modelMatrix );
	#include <begin_vertex>
	#include <project_vertex>
	gl_Position.z = gl_Position.w;
}`,yf=`uniform samplerCube tCube;
uniform float tFlip;
uniform float opacity;
varying vec3 vWorldDirection;
void main() {
	vec4 texColor = textureCube( tCube, vec3( tFlip * vWorldDirection.x, vWorldDirection.yz ) );
	gl_FragColor = texColor;
	gl_FragColor.a *= opacity;
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
}`,Mf=`#include <common>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
varying vec2 vHighPrecisionZW;
void main() {
	#include <uv_vertex>
	#include <skinbase_vertex>
	#ifdef USE_DISPLACEMENTMAP
		#include <beginnormal_vertex>
		#include <morphnormal_vertex>
		#include <skinnormal_vertex>
	#endif
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vHighPrecisionZW = gl_Position.zw;
}`,Sf=`#if DEPTH_PACKING == 3200
	uniform float opacity;
#endif
#include <common>
#include <packing>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
varying vec2 vHighPrecisionZW;
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( 1.0 );
	#if DEPTH_PACKING == 3200
		diffuseColor.a = opacity;
	#endif
	#include <map_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <logdepthbuf_fragment>
	float fragCoordZ = 0.5 * vHighPrecisionZW[0] / vHighPrecisionZW[1] + 0.5;
	#if DEPTH_PACKING == 3200
		gl_FragColor = vec4( vec3( 1.0 - fragCoordZ ), opacity );
	#elif DEPTH_PACKING == 3201
		gl_FragColor = packDepthToRGBA( fragCoordZ );
	#endif
}`,Ef=`#define DISTANCE
varying vec3 vWorldPosition;
#include <common>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <skinbase_vertex>
	#ifdef USE_DISPLACEMENTMAP
		#include <beginnormal_vertex>
		#include <morphnormal_vertex>
		#include <skinnormal_vertex>
	#endif
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <worldpos_vertex>
	#include <clipping_planes_vertex>
	vWorldPosition = worldPosition.xyz;
}`,Tf=`#define DISTANCE
uniform vec3 referencePosition;
uniform float nearDistance;
uniform float farDistance;
varying vec3 vWorldPosition;
#include <common>
#include <packing>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <clipping_planes_pars_fragment>
void main () {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( 1.0 );
	#include <map_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	float dist = length( vWorldPosition - referencePosition );
	dist = ( dist - nearDistance ) / ( farDistance - nearDistance );
	dist = saturate( dist );
	gl_FragColor = packDepthToRGBA( dist );
}`,bf=`varying vec3 vWorldDirection;
#include <common>
void main() {
	vWorldDirection = transformDirection( position, modelMatrix );
	#include <begin_vertex>
	#include <project_vertex>
}`,wf=`uniform sampler2D tEquirect;
varying vec3 vWorldDirection;
#include <common>
void main() {
	vec3 direction = normalize( vWorldDirection );
	vec2 sampleUV = equirectUv( direction );
	gl_FragColor = texture2D( tEquirect, sampleUV );
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
}`,Af=`uniform float scale;
attribute float lineDistance;
varying float vLineDistance;
#include <common>
#include <uv_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	vLineDistance = scale * lineDistance;
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphcolor_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <fog_vertex>
}`,Rf=`uniform vec3 diffuse;
uniform float opacity;
uniform float dashSize;
uniform float totalSize;
varying float vLineDistance;
#include <common>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <fog_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	if ( mod( vLineDistance, totalSize ) > dashSize ) {
		discard;
	}
	vec3 outgoingLight = vec3( 0.0 );
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	outgoingLight = diffuseColor.rgb;
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
}`,Cf=`#include <common>
#include <uv_pars_vertex>
#include <envmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphcolor_vertex>
	#if defined ( USE_ENVMAP ) || defined ( USE_SKINNING )
		#include <beginnormal_vertex>
		#include <morphnormal_vertex>
		#include <skinbase_vertex>
		#include <skinnormal_vertex>
		#include <defaultnormal_vertex>
	#endif
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <worldpos_vertex>
	#include <envmap_vertex>
	#include <fog_vertex>
}`,Pf=`uniform vec3 diffuse;
uniform float opacity;
#ifndef FLAT_SHADED
	varying vec3 vNormal;
#endif
#include <common>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_pars_fragment>
#include <fog_pars_fragment>
#include <specularmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <specularmap_fragment>
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	#ifdef USE_LIGHTMAP
		vec4 lightMapTexel = texture2D( lightMap, vLightMapUv );
		reflectedLight.indirectDiffuse += lightMapTexel.rgb * lightMapIntensity * RECIPROCAL_PI;
	#else
		reflectedLight.indirectDiffuse += vec3( 1.0 );
	#endif
	#include <aomap_fragment>
	reflectedLight.indirectDiffuse *= diffuseColor.rgb;
	vec3 outgoingLight = reflectedLight.indirectDiffuse;
	#include <envmap_fragment>
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,Lf=`#define LAMBERT
varying vec3 vViewPosition;
#include <common>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <envmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphcolor_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <envmap_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,Df=`#define LAMBERT
uniform vec3 diffuse;
uniform vec3 emissive;
uniform float opacity;
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_pars_fragment>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <normal_pars_fragment>
#include <lights_lambert_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <specularmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( diffuse, opacity );
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <specularmap_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <emissivemap_fragment>
	#include <lights_lambert_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>
	#include <aomap_fragment>
	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;
	#include <envmap_fragment>
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,Uf=`#define MATCAP
varying vec3 vViewPosition;
#include <common>
#include <uv_pars_vertex>
#include <color_pars_vertex>
#include <displacementmap_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphcolor_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <fog_vertex>
	vViewPosition = - mvPosition.xyz;
}`,If=`#define MATCAP
uniform vec3 diffuse;
uniform float opacity;
uniform sampler2D matcap;
varying vec3 vViewPosition;
#include <common>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <fog_pars_fragment>
#include <normal_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	vec3 viewDir = normalize( vViewPosition );
	vec3 x = normalize( vec3( viewDir.z, 0.0, - viewDir.x ) );
	vec3 y = cross( viewDir, x );
	vec2 uv = vec2( dot( x, normal ), dot( y, normal ) ) * 0.495 + 0.5;
	#ifdef USE_MATCAP
		vec4 matcapColor = texture2D( matcap, uv );
	#else
		vec4 matcapColor = vec4( vec3( mix( 0.2, 0.8, uv.y ) ), 1.0 );
	#endif
	vec3 outgoingLight = diffuseColor.rgb * matcapColor.rgb;
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,Of=`#define NORMAL
#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP_TANGENTSPACE )
	varying vec3 vViewPosition;
#endif
#include <common>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP_TANGENTSPACE )
	vViewPosition = - mvPosition.xyz;
#endif
}`,Nf=`#define NORMAL
uniform float opacity;
#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP_TANGENTSPACE )
	varying vec3 vViewPosition;
#endif
#include <packing>
#include <uv_pars_fragment>
#include <normal_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	#include <logdepthbuf_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	gl_FragColor = vec4( packNormalToRGB( normal ), opacity );
	#ifdef OPAQUE
		gl_FragColor.a = 1.0;
	#endif
}`,Ff=`#define PHONG
varying vec3 vViewPosition;
#include <common>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <envmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphcolor_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <envmap_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,zf=`#define PHONG
uniform vec3 diffuse;
uniform vec3 emissive;
uniform vec3 specular;
uniform float shininess;
uniform float opacity;
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_pars_fragment>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <normal_pars_fragment>
#include <lights_phong_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <specularmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( diffuse, opacity );
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <specularmap_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <emissivemap_fragment>
	#include <lights_phong_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>
	#include <aomap_fragment>
	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;
	#include <envmap_fragment>
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,Bf=`#define STANDARD
varying vec3 vViewPosition;
#ifdef USE_TRANSMISSION
	varying vec3 vWorldPosition;
#endif
#include <common>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphcolor_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
#ifdef USE_TRANSMISSION
	vWorldPosition = worldPosition.xyz;
#endif
}`,kf=`#define STANDARD
#ifdef PHYSICAL
	#define IOR
	#define USE_SPECULAR
#endif
uniform vec3 diffuse;
uniform vec3 emissive;
uniform float roughness;
uniform float metalness;
uniform float opacity;
#ifdef IOR
	uniform float ior;
#endif
#ifdef USE_SPECULAR
	uniform float specularIntensity;
	uniform vec3 specularColor;
	#ifdef USE_SPECULAR_COLORMAP
		uniform sampler2D specularColorMap;
	#endif
	#ifdef USE_SPECULAR_INTENSITYMAP
		uniform sampler2D specularIntensityMap;
	#endif
#endif
#ifdef USE_CLEARCOAT
	uniform float clearcoat;
	uniform float clearcoatRoughness;
#endif
#ifdef USE_IRIDESCENCE
	uniform float iridescence;
	uniform float iridescenceIOR;
	uniform float iridescenceThicknessMinimum;
	uniform float iridescenceThicknessMaximum;
#endif
#ifdef USE_SHEEN
	uniform vec3 sheenColor;
	uniform float sheenRoughness;
	#ifdef USE_SHEEN_COLORMAP
		uniform sampler2D sheenColorMap;
	#endif
	#ifdef USE_SHEEN_ROUGHNESSMAP
		uniform sampler2D sheenRoughnessMap;
	#endif
#endif
#ifdef USE_ANISOTROPY
	uniform vec2 anisotropyVector;
	#ifdef USE_ANISOTROPYMAP
		uniform sampler2D anisotropyMap;
	#endif
#endif
varying vec3 vViewPosition;
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <iridescence_fragment>
#include <cube_uv_reflection_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_physical_pars_fragment>
#include <fog_pars_fragment>
#include <lights_pars_begin>
#include <normal_pars_fragment>
#include <lights_physical_pars_fragment>
#include <transmission_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <clearcoat_pars_fragment>
#include <iridescence_pars_fragment>
#include <roughnessmap_pars_fragment>
#include <metalnessmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( diffuse, opacity );
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <roughnessmap_fragment>
	#include <metalnessmap_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <clearcoat_normal_fragment_begin>
	#include <clearcoat_normal_fragment_maps>
	#include <emissivemap_fragment>
	#include <lights_physical_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>
	#include <aomap_fragment>
	vec3 totalDiffuse = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse;
	vec3 totalSpecular = reflectedLight.directSpecular + reflectedLight.indirectSpecular;
	#include <transmission_fragment>
	vec3 outgoingLight = totalDiffuse + totalSpecular + totalEmissiveRadiance;
	#ifdef USE_SHEEN
		float sheenEnergyComp = 1.0 - 0.157 * max3( material.sheenColor );
		outgoingLight = outgoingLight * sheenEnergyComp + sheenSpecular;
	#endif
	#ifdef USE_CLEARCOAT
		float dotNVcc = saturate( dot( geometry.clearcoatNormal, geometry.viewDir ) );
		vec3 Fcc = F_Schlick( material.clearcoatF0, material.clearcoatF90, dotNVcc );
		outgoingLight = outgoingLight * ( 1.0 - material.clearcoat * Fcc ) + clearcoatSpecular * material.clearcoat;
	#endif
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,Gf=`#define TOON
varying vec3 vViewPosition;
#include <common>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphcolor_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,Hf=`#define TOON
uniform vec3 diffuse;
uniform vec3 emissive;
uniform float opacity;
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <gradientmap_pars_fragment>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <normal_pars_fragment>
#include <lights_toon_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( diffuse, opacity );
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <emissivemap_fragment>
	#include <lights_toon_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>
	#include <aomap_fragment>
	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,Vf=`uniform float size;
uniform float scale;
#include <common>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
#ifdef USE_POINTS_UV
	varying vec2 vUv;
	uniform mat3 uvTransform;
#endif
void main() {
	#ifdef USE_POINTS_UV
		vUv = ( uvTransform * vec3( uv, 1 ) ).xy;
	#endif
	#include <color_vertex>
	#include <morphcolor_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <project_vertex>
	gl_PointSize = size;
	#ifdef USE_SIZEATTENUATION
		bool isPerspective = isPerspectiveMatrix( projectionMatrix );
		if ( isPerspective ) gl_PointSize *= ( scale / - mvPosition.z );
	#endif
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <worldpos_vertex>
	#include <fog_vertex>
}`,Wf=`uniform vec3 diffuse;
uniform float opacity;
#include <common>
#include <color_pars_fragment>
#include <map_particle_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <fog_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec3 outgoingLight = vec3( 0.0 );
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <logdepthbuf_fragment>
	#include <map_particle_fragment>
	#include <color_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	outgoingLight = diffuseColor.rgb;
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
}`,Xf=`#include <common>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <shadowmap_pars_vertex>
void main() {
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <worldpos_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,qf=`uniform vec3 color;
uniform float opacity;
#include <common>
#include <packing>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <logdepthbuf_pars_fragment>
#include <shadowmap_pars_fragment>
#include <shadowmask_pars_fragment>
void main() {
	#include <logdepthbuf_fragment>
	gl_FragColor = vec4( color, opacity * ( 1.0 - getShadowMask() ) );
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
}`,Yf=`uniform float rotation;
uniform vec2 center;
#include <common>
#include <uv_pars_vertex>
#include <fog_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	vec4 mvPosition = modelViewMatrix * vec4( 0.0, 0.0, 0.0, 1.0 );
	vec2 scale;
	scale.x = length( vec3( modelMatrix[ 0 ].x, modelMatrix[ 0 ].y, modelMatrix[ 0 ].z ) );
	scale.y = length( vec3( modelMatrix[ 1 ].x, modelMatrix[ 1 ].y, modelMatrix[ 1 ].z ) );
	#ifndef USE_SIZEATTENUATION
		bool isPerspective = isPerspectiveMatrix( projectionMatrix );
		if ( isPerspective ) scale *= - mvPosition.z;
	#endif
	vec2 alignedPosition = ( position.xy - ( center - vec2( 0.5 ) ) ) * scale;
	vec2 rotatedPosition;
	rotatedPosition.x = cos( rotation ) * alignedPosition.x - sin( rotation ) * alignedPosition.y;
	rotatedPosition.y = sin( rotation ) * alignedPosition.x + cos( rotation ) * alignedPosition.y;
	mvPosition.xy += rotatedPosition;
	gl_Position = projectionMatrix * mvPosition;
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <fog_vertex>
}`,jf=`uniform vec3 diffuse;
uniform float opacity;
#include <common>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <fog_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec3 outgoingLight = vec3( 0.0 );
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	outgoingLight = diffuseColor.rgb;
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
}`,At={alphahash_fragment:gu,alphahash_pars_fragment:vu,alphamap_fragment:xu,alphamap_pars_fragment:yu,alphatest_fragment:Mu,alphatest_pars_fragment:Su,aomap_fragment:Eu,aomap_pars_fragment:Tu,begin_vertex:bu,beginnormal_vertex:wu,bsdfs:Au,iridescence_fragment:Ru,bumpmap_pars_fragment:Cu,clipping_planes_fragment:Pu,clipping_planes_pars_fragment:Lu,clipping_planes_pars_vertex:Du,clipping_planes_vertex:Uu,color_fragment:Iu,color_pars_fragment:Ou,color_pars_vertex:Nu,color_vertex:Fu,common:zu,cube_uv_reflection_fragment:Bu,defaultnormal_vertex:ku,displacementmap_pars_vertex:Gu,displacementmap_vertex:Hu,emissivemap_fragment:Vu,emissivemap_pars_fragment:Wu,colorspace_fragment:Xu,colorspace_pars_fragment:qu,envmap_fragment:Yu,envmap_common_pars_fragment:ju,envmap_pars_fragment:Zu,envmap_pars_vertex:Ku,envmap_physical_pars_fragment:lh,envmap_vertex:$u,fog_vertex:Ju,fog_pars_vertex:Qu,fog_fragment:th,fog_pars_fragment:eh,gradientmap_pars_fragment:nh,lightmap_fragment:ih,lightmap_pars_fragment:rh,lights_lambert_fragment:sh,lights_lambert_pars_fragment:oh,lights_pars_begin:ah,lights_toon_fragment:ch,lights_toon_pars_fragment:uh,lights_phong_fragment:hh,lights_phong_pars_fragment:fh,lights_physical_fragment:dh,lights_physical_pars_fragment:ph,lights_fragment_begin:mh,lights_fragment_maps:_h,lights_fragment_end:gh,logdepthbuf_fragment:vh,logdepthbuf_pars_fragment:xh,logdepthbuf_pars_vertex:yh,logdepthbuf_vertex:Mh,map_fragment:Sh,map_pars_fragment:Eh,map_particle_fragment:Th,map_particle_pars_fragment:bh,metalnessmap_fragment:wh,metalnessmap_pars_fragment:Ah,morphcolor_vertex:Rh,morphnormal_vertex:Ch,morphtarget_pars_vertex:Ph,morphtarget_vertex:Lh,normal_fragment_begin:Dh,normal_fragment_maps:Uh,normal_pars_fragment:Ih,normal_pars_vertex:Oh,normal_vertex:Nh,normalmap_pars_fragment:Fh,clearcoat_normal_fragment_begin:zh,clearcoat_normal_fragment_maps:Bh,clearcoat_pars_fragment:kh,iridescence_pars_fragment:Gh,opaque_fragment:Hh,packing:Vh,premultiplied_alpha_fragment:Wh,project_vertex:Xh,dithering_fragment:qh,dithering_pars_fragment:Yh,roughnessmap_fragment:jh,roughnessmap_pars_fragment:Zh,shadowmap_pars_fragment:Kh,shadowmap_pars_vertex:$h,shadowmap_vertex:Jh,shadowmask_pars_fragment:Qh,skinbase_vertex:tf,skinning_pars_vertex:ef,skinning_vertex:nf,skinnormal_vertex:rf,specularmap_fragment:sf,specularmap_pars_fragment:of,tonemapping_fragment:af,tonemapping_pars_fragment:lf,transmission_fragment:cf,transmission_pars_fragment:uf,uv_pars_fragment:hf,uv_pars_vertex:ff,uv_vertex:df,worldpos_vertex:pf,background_vert:mf,background_frag:_f,backgroundCube_vert:gf,backgroundCube_frag:vf,cube_vert:xf,cube_frag:yf,depth_vert:Mf,depth_frag:Sf,distanceRGBA_vert:Ef,distanceRGBA_frag:Tf,equirect_vert:bf,equirect_frag:wf,linedashed_vert:Af,linedashed_frag:Rf,meshbasic_vert:Cf,meshbasic_frag:Pf,meshlambert_vert:Lf,meshlambert_frag:Df,meshmatcap_vert:Uf,meshmatcap_frag:If,meshnormal_vert:Of,meshnormal_frag:Nf,meshphong_vert:Ff,meshphong_frag:zf,meshphysical_vert:Bf,meshphysical_frag:kf,meshtoon_vert:Gf,meshtoon_frag:Hf,points_vert:Vf,points_frag:Wf,shadow_vert:Xf,shadow_frag:qf,sprite_vert:Yf,sprite_frag:jf},pt={common:{diffuse:{value:new qt(16777215)},opacity:{value:1},map:{value:null},mapTransform:{value:new zt},alphaMap:{value:null},alphaMapTransform:{value:new zt},alphaTest:{value:0}},specularmap:{specularMap:{value:null},specularMapTransform:{value:new zt}},envmap:{envMap:{value:null},flipEnvMap:{value:-1},reflectivity:{value:1},ior:{value:1.5},refractionRatio:{value:.98}},aomap:{aoMap:{value:null},aoMapIntensity:{value:1},aoMapTransform:{value:new zt}},lightmap:{lightMap:{value:null},lightMapIntensity:{value:1},lightMapTransform:{value:new zt}},bumpmap:{bumpMap:{value:null},bumpMapTransform:{value:new zt},bumpScale:{value:1}},normalmap:{normalMap:{value:null},normalMapTransform:{value:new zt},normalScale:{value:new it(1,1)}},displacementmap:{displacementMap:{value:null},displacementMapTransform:{value:new zt},displacementScale:{value:1},displacementBias:{value:0}},emissivemap:{emissiveMap:{value:null},emissiveMapTransform:{value:new zt}},metalnessmap:{metalnessMap:{value:null},metalnessMapTransform:{value:new zt}},roughnessmap:{roughnessMap:{value:null},roughnessMapTransform:{value:new zt}},gradientmap:{gradientMap:{value:null}},fog:{fogDensity:{value:25e-5},fogNear:{value:1},fogFar:{value:2e3},fogColor:{value:new qt(16777215)}},lights:{ambientLightColor:{value:[]},lightProbe:{value:[]},directionalLights:{value:[],properties:{direction:{},color:{}}},directionalLightShadows:{value:[],properties:{shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{}}},directionalShadowMap:{value:[]},directionalShadowMatrix:{value:[]},spotLights:{value:[],properties:{color:{},position:{},direction:{},distance:{},coneCos:{},penumbraCos:{},decay:{}}},spotLightShadows:{value:[],properties:{shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{}}},spotLightMap:{value:[]},spotShadowMap:{value:[]},spotLightMatrix:{value:[]},pointLights:{value:[],properties:{color:{},position:{},decay:{},distance:{}}},pointLightShadows:{value:[],properties:{shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{},shadowCameraNear:{},shadowCameraFar:{}}},pointShadowMap:{value:[]},pointShadowMatrix:{value:[]},hemisphereLights:{value:[],properties:{direction:{},skyColor:{},groundColor:{}}},rectAreaLights:{value:[],properties:{color:{},position:{},width:{},height:{}}},ltc_1:{value:null},ltc_2:{value:null}},points:{diffuse:{value:new qt(16777215)},opacity:{value:1},size:{value:1},scale:{value:1},map:{value:null},alphaMap:{value:null},alphaMapTransform:{value:new zt},alphaTest:{value:0},uvTransform:{value:new zt}},sprite:{diffuse:{value:new qt(16777215)},opacity:{value:1},center:{value:new it(.5,.5)},rotation:{value:0},map:{value:null},mapTransform:{value:new zt},alphaMap:{value:null},alphaMapTransform:{value:new zt},alphaTest:{value:0}}},Fn={basic:{uniforms:je([pt.common,pt.specularmap,pt.envmap,pt.aomap,pt.lightmap,pt.fog]),vertexShader:At.meshbasic_vert,fragmentShader:At.meshbasic_frag},lambert:{uniforms:je([pt.common,pt.specularmap,pt.envmap,pt.aomap,pt.lightmap,pt.emissivemap,pt.bumpmap,pt.normalmap,pt.displacementmap,pt.fog,pt.lights,{emissive:{value:new qt(0)}}]),vertexShader:At.meshlambert_vert,fragmentShader:At.meshlambert_frag},phong:{uniforms:je([pt.common,pt.specularmap,pt.envmap,pt.aomap,pt.lightmap,pt.emissivemap,pt.bumpmap,pt.normalmap,pt.displacementmap,pt.fog,pt.lights,{emissive:{value:new qt(0)},specular:{value:new qt(1118481)},shininess:{value:30}}]),vertexShader:At.meshphong_vert,fragmentShader:At.meshphong_frag},standard:{uniforms:je([pt.common,pt.envmap,pt.aomap,pt.lightmap,pt.emissivemap,pt.bumpmap,pt.normalmap,pt.displacementmap,pt.roughnessmap,pt.metalnessmap,pt.fog,pt.lights,{emissive:{value:new qt(0)},roughness:{value:1},metalness:{value:0},envMapIntensity:{value:1}}]),vertexShader:At.meshphysical_vert,fragmentShader:At.meshphysical_frag},toon:{uniforms:je([pt.common,pt.aomap,pt.lightmap,pt.emissivemap,pt.bumpmap,pt.normalmap,pt.displacementmap,pt.gradientmap,pt.fog,pt.lights,{emissive:{value:new qt(0)}}]),vertexShader:At.meshtoon_vert,fragmentShader:At.meshtoon_frag},matcap:{uniforms:je([pt.common,pt.bumpmap,pt.normalmap,pt.displacementmap,pt.fog,{matcap:{value:null}}]),vertexShader:At.meshmatcap_vert,fragmentShader:At.meshmatcap_frag},points:{uniforms:je([pt.points,pt.fog]),vertexShader:At.points_vert,fragmentShader:At.points_frag},dashed:{uniforms:je([pt.common,pt.fog,{scale:{value:1},dashSize:{value:1},totalSize:{value:2}}]),vertexShader:At.linedashed_vert,fragmentShader:At.linedashed_frag},depth:{uniforms:je([pt.common,pt.displacementmap]),vertexShader:At.depth_vert,fragmentShader:At.depth_frag},normal:{uniforms:je([pt.common,pt.bumpmap,pt.normalmap,pt.displacementmap,{opacity:{value:1}}]),vertexShader:At.meshnormal_vert,fragmentShader:At.meshnormal_frag},sprite:{uniforms:je([pt.sprite,pt.fog]),vertexShader:At.sprite_vert,fragmentShader:At.sprite_frag},background:{uniforms:{uvTransform:{value:new zt},t2D:{value:null},backgroundIntensity:{value:1}},vertexShader:At.background_vert,fragmentShader:At.background_frag},backgroundCube:{uniforms:{envMap:{value:null},flipEnvMap:{value:-1},backgroundBlurriness:{value:0},backgroundIntensity:{value:1}},vertexShader:At.backgroundCube_vert,fragmentShader:At.backgroundCube_frag},cube:{uniforms:{tCube:{value:null},tFlip:{value:-1},opacity:{value:1}},vertexShader:At.cube_vert,fragmentShader:At.cube_frag},equirect:{uniforms:{tEquirect:{value:null}},vertexShader:At.equirect_vert,fragmentShader:At.equirect_frag},distanceRGBA:{uniforms:je([pt.common,pt.displacementmap,{referencePosition:{value:new P},nearDistance:{value:1},farDistance:{value:1e3}}]),vertexShader:At.distanceRGBA_vert,fragmentShader:At.distanceRGBA_frag},shadow:{uniforms:je([pt.lights,pt.fog,{color:{value:new qt(0)},opacity:{value:1}}]),vertexShader:At.shadow_vert,fragmentShader:At.shadow_frag}};Fn.physical={uniforms:je([Fn.standard.uniforms,{clearcoat:{value:0},clearcoatMap:{value:null},clearcoatMapTransform:{value:new zt},clearcoatNormalMap:{value:null},clearcoatNormalMapTransform:{value:new zt},clearcoatNormalScale:{value:new it(1,1)},clearcoatRoughness:{value:0},clearcoatRoughnessMap:{value:null},clearcoatRoughnessMapTransform:{value:new zt},iridescence:{value:0},iridescenceMap:{value:null},iridescenceMapTransform:{value:new zt},iridescenceIOR:{value:1.3},iridescenceThicknessMinimum:{value:100},iridescenceThicknessMaximum:{value:400},iridescenceThicknessMap:{value:null},iridescenceThicknessMapTransform:{value:new zt},sheen:{value:0},sheenColor:{value:new qt(0)},sheenColorMap:{value:null},sheenColorMapTransform:{value:new zt},sheenRoughness:{value:1},sheenRoughnessMap:{value:null},sheenRoughnessMapTransform:{value:new zt},transmission:{value:0},transmissionMap:{value:null},transmissionMapTransform:{value:new zt},transmissionSamplerSize:{value:new it},transmissionSamplerMap:{value:null},thickness:{value:0},thicknessMap:{value:null},thicknessMapTransform:{value:new zt},attenuationDistance:{value:0},attenuationColor:{value:new qt(0)},specularColor:{value:new qt(1,1,1)},specularColorMap:{value:null},specularColorMapTransform:{value:new zt},specularIntensity:{value:1},specularIntensityMap:{value:null},specularIntensityMapTransform:{value:new zt},anisotropyVector:{value:new it},anisotropyMap:{value:null},anisotropyMapTransform:{value:new zt}}]),vertexShader:At.meshphysical_vert,fragmentShader:At.meshphysical_frag};const Mo={r:0,b:0,g:0};function Zf(r,t,e,n,i,s,o){const a=new qt(0);let l=s===!0?0:1,c,u,h=null,f=0,d=null;function g(m,p){let M=!1,v=p.isScene===!0?p.background:null;v&&v.isTexture&&(v=(p.backgroundBlurriness>0?e:t).get(v)),v===null?_(a,l):v&&v.isColor&&(_(v,1),M=!0);const x=r.xr.getEnvironmentBlendMode();x==="additive"?n.buffers.color.setClear(0,0,0,1,o):x==="alpha-blend"&&n.buffers.color.setClear(0,0,0,0,o),(r.autoClear||M)&&r.clear(r.autoClearColor,r.autoClearDepth,r.autoClearStencil),v&&(v.isCubeTexture||v.mapping===Jo)?(u===void 0&&(u=new me(new os(1,1,1),new oi({name:"BackgroundCubeMaterial",uniforms:ts(Fn.backgroundCube.uniforms),vertexShader:Fn.backgroundCube.vertexShader,fragmentShader:Fn.backgroundCube.fragmentShader,side:ze,depthTest:!1,depthWrite:!1,fog:!1})),u.geometry.deleteAttribute("normal"),u.geometry.deleteAttribute("uv"),u.onBeforeRender=function(S,T,E){this.matrixWorld.copyPosition(E.matrixWorld)},Object.defineProperty(u.material,"envMap",{get:function(){return this.uniforms.envMap.value}}),i.update(u)),u.material.uniforms.envMap.value=v,u.material.uniforms.flipEnvMap.value=v.isCubeTexture&&v.isRenderTargetTexture===!1?-1:1,u.material.uniforms.backgroundBlurriness.value=p.backgroundBlurriness,u.material.uniforms.backgroundIntensity.value=p.backgroundIntensity,u.material.toneMapped=v.colorSpace!==ae,(h!==v||f!==v.version||d!==r.toneMapping)&&(u.material.needsUpdate=!0,h=v,f=v.version,d=r.toneMapping),u.layers.enableAll(),m.unshift(u,u.geometry,u.material,0,0,null)):v&&v.isTexture&&(c===void 0&&(c=new me(new ji(2,2),new oi({name:"BackgroundMaterial",uniforms:ts(Fn.background.uniforms),vertexShader:Fn.background.vertexShader,fragmentShader:Fn.background.fragmentShader,side:wn,depthTest:!1,depthWrite:!1,fog:!1})),c.geometry.deleteAttribute("normal"),Object.defineProperty(c.material,"map",{get:function(){return this.uniforms.t2D.value}}),i.update(c)),c.material.uniforms.t2D.value=v,c.material.uniforms.backgroundIntensity.value=p.backgroundIntensity,c.material.toneMapped=v.colorSpace!==ae,v.matrixAutoUpdate===!0&&v.updateMatrix(),c.material.uniforms.uvTransform.value.copy(v.matrix),(h!==v||f!==v.version||d!==r.toneMapping)&&(c.material.needsUpdate=!0,h=v,f=v.version,d=r.toneMapping),c.layers.enableAll(),m.unshift(c,c.geometry,c.material,0,0,null))}function _(m,p){m.getRGB(Mo,Yl(r)),n.buffers.color.setClear(Mo.r,Mo.g,Mo.b,p,o)}return{getClearColor:function(){return a},setClearColor:function(m,p=1){a.set(m),l=p,_(a,l)},getClearAlpha:function(){return l},setClearAlpha:function(m){l=m,_(a,l)},render:g}}function Kf(r,t,e,n){const i=r.getParameter(r.MAX_VERTEX_ATTRIBS),s=n.isWebGL2?null:t.get("OES_vertex_array_object"),o=n.isWebGL2||s!==null,a={},l=m(null);let c=l,u=!1;function h(O,N,X,k,Y){let Q=!1;if(o){const $=_(k,X,N);c!==$&&(c=$,d(c.object)),Q=p(O,k,X,Y),Q&&M(O,k,X,Y)}else{const $=N.wireframe===!0;(c.geometry!==k.id||c.program!==X.id||c.wireframe!==$)&&(c.geometry=k.id,c.program=X.id,c.wireframe=$,Q=!0)}Y!==null&&e.update(Y,r.ELEMENT_ARRAY_BUFFER),(Q||u)&&(u=!1,A(O,N,X,k),Y!==null&&r.bindBuffer(r.ELEMENT_ARRAY_BUFFER,e.get(Y).buffer))}function f(){return n.isWebGL2?r.createVertexArray():s.createVertexArrayOES()}function d(O){return n.isWebGL2?r.bindVertexArray(O):s.bindVertexArrayOES(O)}function g(O){return n.isWebGL2?r.deleteVertexArray(O):s.deleteVertexArrayOES(O)}function _(O,N,X){const k=X.wireframe===!0;let Y=a[O.id];Y===void 0&&(Y={},a[O.id]=Y);let Q=Y[N.id];Q===void 0&&(Q={},Y[N.id]=Q);let $=Q[k];return $===void 0&&($=m(f()),Q[k]=$),$}function m(O){const N=[],X=[],k=[];for(let Y=0;Y<i;Y++)N[Y]=0,X[Y]=0,k[Y]=0;return{geometry:null,program:null,wireframe:!1,newAttributes:N,enabledAttributes:X,attributeDivisors:k,object:O,attributes:{},index:null}}function p(O,N,X,k){const Y=c.attributes,Q=N.attributes;let $=0;const B=X.getAttributes();for(const V in B)if(B[V].location>=0){const ct=Y[V];let _t=Q[V];if(_t===void 0&&(V==="instanceMatrix"&&O.instanceMatrix&&(_t=O.instanceMatrix),V==="instanceColor"&&O.instanceColor&&(_t=O.instanceColor)),ct===void 0||ct.attribute!==_t||_t&&ct.data!==_t.data)return!0;$++}return c.attributesNum!==$||c.index!==k}function M(O,N,X,k){const Y={},Q=N.attributes;let $=0;const B=X.getAttributes();for(const V in B)if(B[V].location>=0){let ct=Q[V];ct===void 0&&(V==="instanceMatrix"&&O.instanceMatrix&&(ct=O.instanceMatrix),V==="instanceColor"&&O.instanceColor&&(ct=O.instanceColor));const _t={};_t.attribute=ct,ct&&ct.data&&(_t.data=ct.data),Y[V]=_t,$++}c.attributes=Y,c.attributesNum=$,c.index=k}function v(){const O=c.newAttributes;for(let N=0,X=O.length;N<X;N++)O[N]=0}function x(O){S(O,0)}function S(O,N){const X=c.newAttributes,k=c.enabledAttributes,Y=c.attributeDivisors;X[O]=1,k[O]===0&&(r.enableVertexAttribArray(O),k[O]=1),Y[O]!==N&&((n.isWebGL2?r:t.get("ANGLE_instanced_arrays"))[n.isWebGL2?"vertexAttribDivisor":"vertexAttribDivisorANGLE"](O,N),Y[O]=N)}function T(){const O=c.newAttributes,N=c.enabledAttributes;for(let X=0,k=N.length;X<k;X++)N[X]!==O[X]&&(r.disableVertexAttribArray(X),N[X]=0)}function E(O,N,X,k,Y,Q,$){$===!0?r.vertexAttribIPointer(O,N,X,Y,Q):r.vertexAttribPointer(O,N,X,k,Y,Q)}function A(O,N,X,k){if(n.isWebGL2===!1&&(O.isInstancedMesh||k.isInstancedBufferGeometry)&&t.get("ANGLE_instanced_arrays")===null)return;v();const Y=k.attributes,Q=X.getAttributes(),$=N.defaultAttributeValues;for(const B in Q){const V=Q[B];if(V.location>=0){let ht=Y[B];if(ht===void 0&&(B==="instanceMatrix"&&O.instanceMatrix&&(ht=O.instanceMatrix),B==="instanceColor"&&O.instanceColor&&(ht=O.instanceColor)),ht!==void 0){const ct=ht.normalized,_t=ht.itemSize,Rt=e.get(ht);if(Rt===void 0)continue;const wt=Rt.buffer,bt=Rt.type,Vt=Rt.bytesPerElement,Kt=n.isWebGL2===!0&&(bt===r.INT||bt===r.UNSIGNED_INT||ht.gpuType===Ul);if(ht.isInterleavedBufferAttribute){const Ct=ht.data,L=Ct.stride,ut=ht.offset;if(Ct.isInstancedInterleavedBuffer){for(let J=0;J<V.locationSize;J++)S(V.location+J,Ct.meshPerAttribute);O.isInstancedMesh!==!0&&k._maxInstanceCount===void 0&&(k._maxInstanceCount=Ct.meshPerAttribute*Ct.count)}else for(let J=0;J<V.locationSize;J++)x(V.location+J);r.bindBuffer(r.ARRAY_BUFFER,wt);for(let J=0;J<V.locationSize;J++)E(V.location+J,_t/V.locationSize,bt,ct,L*Vt,(ut+_t/V.locationSize*J)*Vt,Kt)}else{if(ht.isInstancedBufferAttribute){for(let Ct=0;Ct<V.locationSize;Ct++)S(V.location+Ct,ht.meshPerAttribute);O.isInstancedMesh!==!0&&k._maxInstanceCount===void 0&&(k._maxInstanceCount=ht.meshPerAttribute*ht.count)}else for(let Ct=0;Ct<V.locationSize;Ct++)x(V.location+Ct);r.bindBuffer(r.ARRAY_BUFFER,wt);for(let Ct=0;Ct<V.locationSize;Ct++)E(V.location+Ct,_t/V.locationSize,bt,ct,_t*Vt,_t/V.locationSize*Ct*Vt,Kt)}}else if($!==void 0){const ct=$[B];if(ct!==void 0)switch(ct.length){case 2:r.vertexAttrib2fv(V.location,ct);break;case 3:r.vertexAttrib3fv(V.location,ct);break;case 4:r.vertexAttrib4fv(V.location,ct);break;default:r.vertexAttrib1fv(V.location,ct)}}}}T()}function y(){z();for(const O in a){const N=a[O];for(const X in N){const k=N[X];for(const Y in k)g(k[Y].object),delete k[Y];delete N[X]}delete a[O]}}function b(O){if(a[O.id]===void 0)return;const N=a[O.id];for(const X in N){const k=N[X];for(const Y in k)g(k[Y].object),delete k[Y];delete N[X]}delete a[O.id]}function F(O){for(const N in a){const X=a[N];if(X[O.id]===void 0)continue;const k=X[O.id];for(const Y in k)g(k[Y].object),delete k[Y];delete X[O.id]}}function z(){I(),u=!0,c!==l&&(c=l,d(c.object))}function I(){l.geometry=null,l.program=null,l.wireframe=!1}return{setup:h,reset:z,resetDefaultState:I,dispose:y,releaseStatesOfGeometry:b,releaseStatesOfProgram:F,initAttributes:v,enableAttribute:x,disableUnusedAttributes:T}}function $f(r,t,e,n){const i=n.isWebGL2;let s;function o(c){s=c}function a(c,u){r.drawArrays(s,c,u),e.update(u,s,1)}function l(c,u,h){if(h===0)return;let f,d;if(i)f=r,d="drawArraysInstanced";else if(f=t.get("ANGLE_instanced_arrays"),d="drawArraysInstancedANGLE",f===null){console.error("THREE.WebGLBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.");return}f[d](s,c,u,h),e.update(u,s,h)}this.setMode=o,this.render=a,this.renderInstances=l}function Jf(r,t,e){let n;function i(){if(n!==void 0)return n;if(t.has("EXT_texture_filter_anisotropic")===!0){const E=t.get("EXT_texture_filter_anisotropic");n=r.getParameter(E.MAX_TEXTURE_MAX_ANISOTROPY_EXT)}else n=0;return n}function s(E){if(E==="highp"){if(r.getShaderPrecisionFormat(r.VERTEX_SHADER,r.HIGH_FLOAT).precision>0&&r.getShaderPrecisionFormat(r.FRAGMENT_SHADER,r.HIGH_FLOAT).precision>0)return"highp";E="mediump"}return E==="mediump"&&r.getShaderPrecisionFormat(r.VERTEX_SHADER,r.MEDIUM_FLOAT).precision>0&&r.getShaderPrecisionFormat(r.FRAGMENT_SHADER,r.MEDIUM_FLOAT).precision>0?"mediump":"lowp"}const o=typeof WebGL2RenderingContext<"u"&&r.constructor.name==="WebGL2RenderingContext";let a=e.precision!==void 0?e.precision:"highp";const l=s(a);l!==a&&(console.warn("THREE.WebGLRenderer:",a,"not supported, using",l,"instead."),a=l);const c=o||t.has("WEBGL_draw_buffers"),u=e.logarithmicDepthBuffer===!0,h=r.getParameter(r.MAX_TEXTURE_IMAGE_UNITS),f=r.getParameter(r.MAX_VERTEX_TEXTURE_IMAGE_UNITS),d=r.getParameter(r.MAX_TEXTURE_SIZE),g=r.getParameter(r.MAX_CUBE_MAP_TEXTURE_SIZE),_=r.getParameter(r.MAX_VERTEX_ATTRIBS),m=r.getParameter(r.MAX_VERTEX_UNIFORM_VECTORS),p=r.getParameter(r.MAX_VARYING_VECTORS),M=r.getParameter(r.MAX_FRAGMENT_UNIFORM_VECTORS),v=f>0,x=o||t.has("OES_texture_float"),S=v&&x,T=o?r.getParameter(r.MAX_SAMPLES):0;return{isWebGL2:o,drawBuffers:c,getMaxAnisotropy:i,getMaxPrecision:s,precision:a,logarithmicDepthBuffer:u,maxTextures:h,maxVertexTextures:f,maxTextureSize:d,maxCubemapSize:g,maxAttributes:_,maxVertexUniforms:m,maxVaryings:p,maxFragmentUniforms:M,vertexTextures:v,floatFragmentTextures:x,floatVertexTextures:S,maxSamples:T}}function Qf(r){const t=this;let e=null,n=0,i=!1,s=!1;const o=new pi,a=new zt,l={value:null,needsUpdate:!1};this.uniform=l,this.numPlanes=0,this.numIntersection=0,this.init=function(h,f){const d=h.length!==0||f||n!==0||i;return i=f,n=h.length,d},this.beginShadows=function(){s=!0,u(null)},this.endShadows=function(){s=!1},this.setGlobalState=function(h,f){e=u(h,f,0)},this.setState=function(h,f,d){const g=h.clippingPlanes,_=h.clipIntersection,m=h.clipShadows,p=r.get(h);if(!i||g===null||g.length===0||s&&!m)s?u(null):c();else{const M=s?0:n,v=M*4;let x=p.clippingState||null;l.value=x,x=u(g,f,v,d);for(let S=0;S!==v;++S)x[S]=e[S];p.clippingState=x,this.numIntersection=_?this.numPlanes:0,this.numPlanes+=M}};function c(){l.value!==e&&(l.value=e,l.needsUpdate=n>0),t.numPlanes=n,t.numIntersection=0}function u(h,f,d,g){const _=h!==null?h.length:0;let m=null;if(_!==0){if(m=l.value,g!==!0||m===null){const p=d+_*4,M=f.matrixWorldInverse;a.getNormalMatrix(M),(m===null||m.length<p)&&(m=new Float32Array(p));for(let v=0,x=d;v!==_;++v,x+=4)o.copy(h[v]).applyMatrix4(M,a),o.normal.toArray(m,x),m[x+3]=o.constant}l.value=m,l.needsUpdate=!0}return t.numPlanes=_,t.numIntersection=0,m}}function td(r){let t=new WeakMap;function e(o,a){return a===c0?o.mapping=$r:a===u0&&(o.mapping=Jr),o}function n(o){if(o&&o.isTexture&&o.isRenderTargetTexture===!1){const a=o.mapping;if(a===c0||a===u0)if(t.has(o)){const l=t.get(o).texture;return e(l,o.mapping)}else{const l=o.image;if(l&&l.height>0){const c=new du(l.height/2);return c.fromEquirectangularTexture(r,o),t.set(o,c),o.addEventListener("dispose",i),e(c.texture,o.mapping)}else return null}}return o}function i(o){const a=o.target;a.removeEventListener("dispose",i);const l=t.get(a);l!==void 0&&(t.delete(a),l.dispose())}function s(){t=new WeakMap}return{get:n,dispose:s}}class $l extends jl{constructor(t=-1,e=1,n=1,i=-1,s=.1,o=2e3){super(),this.isOrthographicCamera=!0,this.type="OrthographicCamera",this.zoom=1,this.view=null,this.left=t,this.right=e,this.top=n,this.bottom=i,this.near=s,this.far=o,this.updateProjectionMatrix()}copy(t,e){return super.copy(t,e),this.left=t.left,this.right=t.right,this.top=t.top,this.bottom=t.bottom,this.near=t.near,this.far=t.far,this.zoom=t.zoom,this.view=t.view===null?null:Object.assign({},t.view),this}setViewOffset(t,e,n,i,s,o){this.view===null&&(this.view={enabled:!0,fullWidth:1,fullHeight:1,offsetX:0,offsetY:0,width:1,height:1}),this.view.enabled=!0,this.view.fullWidth=t,this.view.fullHeight=e,this.view.offsetX=n,this.view.offsetY=i,this.view.width=s,this.view.height=o,this.updateProjectionMatrix()}clearViewOffset(){this.view!==null&&(this.view.enabled=!1),this.updateProjectionMatrix()}updateProjectionMatrix(){const t=(this.right-this.left)/(2*this.zoom),e=(this.top-this.bottom)/(2*this.zoom),n=(this.right+this.left)/2,i=(this.top+this.bottom)/2;let s=n-t,o=n+t,a=i+e,l=i-e;if(this.view!==null&&this.view.enabled){const c=(this.right-this.left)/this.view.fullWidth/this.zoom,u=(this.top-this.bottom)/this.view.fullHeight/this.zoom;s+=c*this.view.offsetX,o=s+c*this.view.width,a-=u*this.view.offsetY,l=a-u*this.view.height}this.projectionMatrix.makeOrthographic(s,o,a,l,this.near,this.far,this.coordinateSystem),this.projectionMatrixInverse.copy(this.projectionMatrix).invert()}toJSON(t){const e=super.toJSON(t);return e.object.zoom=this.zoom,e.object.left=this.left,e.object.right=this.right,e.object.top=this.top,e.object.bottom=this.bottom,e.object.near=this.near,e.object.far=this.far,this.view!==null&&(e.object.view=Object.assign({},this.view)),e}}const Or=4,y1=[.125,.215,.35,.446,.526,.582],ki=20,Fa=new $l,M1=new qt;let za=null;const zi=(1+Math.sqrt(5))/2,Ar=1/zi,S1=[new P(1,1,1),new P(-1,1,1),new P(1,1,-1),new P(-1,1,-1),new P(0,zi,Ar),new P(0,zi,-Ar),new P(Ar,0,zi),new P(-Ar,0,zi),new P(zi,Ar,0),new P(-zi,Ar,0)];class E1{constructor(t){this._renderer=t,this._pingPongRenderTarget=null,this._lodMax=0,this._cubeSize=0,this._lodPlanes=[],this._sizeLods=[],this._sigmas=[],this._blurMaterial=null,this._cubemapMaterial=null,this._equirectMaterial=null,this._compileMaterial(this._blurMaterial)}fromScene(t,e=0,n=.1,i=100){za=this._renderer.getRenderTarget(),this._setSize(256);const s=this._allocateTargets();return s.depthBuffer=!0,this._sceneToCubeUV(t,n,i,s),e>0&&this._blur(s,0,0,e),this._applyPMREM(s),this._cleanup(s),s}fromEquirectangular(t,e=null){return this._fromTexture(t,e)}fromCubemap(t,e=null){return this._fromTexture(t,e)}compileCubemapShader(){this._cubemapMaterial===null&&(this._cubemapMaterial=w1(),this._compileMaterial(this._cubemapMaterial))}compileEquirectangularShader(){this._equirectMaterial===null&&(this._equirectMaterial=b1(),this._compileMaterial(this._equirectMaterial))}dispose(){this._dispose(),this._cubemapMaterial!==null&&this._cubemapMaterial.dispose(),this._equirectMaterial!==null&&this._equirectMaterial.dispose()}_setSize(t){this._lodMax=Math.floor(Math.log2(t)),this._cubeSize=Math.pow(2,this._lodMax)}_dispose(){this._blurMaterial!==null&&this._blurMaterial.dispose(),this._pingPongRenderTarget!==null&&this._pingPongRenderTarget.dispose();for(let t=0;t<this._lodPlanes.length;t++)this._lodPlanes[t].dispose()}_cleanup(t){this._renderer.setRenderTarget(za),t.scissorTest=!1,So(t,0,0,t.width,t.height)}_fromTexture(t,e){t.mapping===$r||t.mapping===Jr?this._setSize(t.image.length===0?16:t.image[0].width||t.image[0].image.width):this._setSize(t.image.width/4),za=this._renderer.getRenderTarget();const n=e||this._allocateTargets();return this._textureToCubeUV(t,n),this._applyPMREM(n),this._cleanup(n),n}_allocateTargets(){const t=3*Math.max(this._cubeSize,112),e=4*this._cubeSize,n={magFilter:yn,minFilter:yn,generateMipmaps:!1,type:Cs,format:In,colorSpace:Hn,depthBuffer:!1},i=T1(t,e,n);if(this._pingPongRenderTarget===null||this._pingPongRenderTarget.width!==t||this._pingPongRenderTarget.height!==e){this._pingPongRenderTarget!==null&&this._dispose(),this._pingPongRenderTarget=T1(t,e,n);const{_lodMax:s}=this;({sizeLods:this._sizeLods,lodPlanes:this._lodPlanes,sigmas:this._sigmas}=ed(s)),this._blurMaterial=nd(s,t,e)}return i}_compileMaterial(t){const e=new me(this._lodPlanes[0],t);this._renderer.compile(e,Fa)}_sceneToCubeUV(t,e,n,i){const a=new Sn(90,1,e,n),l=[1,-1,1,1,1,1],c=[1,1,1,-1,-1,-1],u=this._renderer,h=u.autoClear,f=u.toneMapping;u.getClearColor(M1),u.toneMapping=Ei,u.autoClear=!1;const d=new kn({name:"PMREM.Background",side:ze,depthWrite:!1,depthTest:!1}),g=new me(new os,d);let _=!1;const m=t.background;m?m.isColor&&(d.color.copy(m),t.background=null,_=!0):(d.color.copy(M1),_=!0);for(let p=0;p<6;p++){const M=p%3;M===0?(a.up.set(0,l[p],0),a.lookAt(c[p],0,0)):M===1?(a.up.set(0,0,l[p]),a.lookAt(0,c[p],0)):(a.up.set(0,l[p],0),a.lookAt(0,0,c[p]));const v=this._cubeSize;So(i,M*v,p>2?v:0,v,v),u.setRenderTarget(i),_&&u.render(g,a),u.render(t,a)}g.geometry.dispose(),g.material.dispose(),u.toneMapping=f,u.autoClear=h,t.background=m}_textureToCubeUV(t,e){const n=this._renderer,i=t.mapping===$r||t.mapping===Jr;i?(this._cubemapMaterial===null&&(this._cubemapMaterial=w1()),this._cubemapMaterial.uniforms.flipEnvMap.value=t.isRenderTargetTexture===!1?-1:1):this._equirectMaterial===null&&(this._equirectMaterial=b1());const s=i?this._cubemapMaterial:this._equirectMaterial,o=new me(this._lodPlanes[0],s),a=s.uniforms;a.envMap.value=t;const l=this._cubeSize;So(e,0,0,3*l,2*l),n.setRenderTarget(e),n.render(o,Fa)}_applyPMREM(t){const e=this._renderer,n=e.autoClear;e.autoClear=!1;for(let i=1;i<this._lodPlanes.length;i++){const s=Math.sqrt(this._sigmas[i]*this._sigmas[i]-this._sigmas[i-1]*this._sigmas[i-1]),o=S1[(i-1)%S1.length];this._blur(t,i-1,i,s,o)}e.autoClear=n}_blur(t,e,n,i,s){const o=this._pingPongRenderTarget;this._halfBlur(t,o,e,n,i,"latitudinal",s),this._halfBlur(o,t,n,n,i,"longitudinal",s)}_halfBlur(t,e,n,i,s,o,a){const l=this._renderer,c=this._blurMaterial;o!=="latitudinal"&&o!=="longitudinal"&&console.error("blur direction must be either latitudinal or longitudinal!");const u=3,h=new me(this._lodPlanes[i],c),f=c.uniforms,d=this._sizeLods[n]-1,g=isFinite(s)?Math.PI/(2*d):2*Math.PI/(2*ki-1),_=s/g,m=isFinite(s)?1+Math.floor(u*_):ki;m>ki&&console.warn(`sigmaRadians, ${s}, is too large and will clip, as it requested ${m} samples when the maximum is set to ${ki}`);const p=[];let M=0;for(let E=0;E<ki;++E){const A=E/_,y=Math.exp(-A*A/2);p.push(y),E===0?M+=y:E<m&&(M+=2*y)}for(let E=0;E<p.length;E++)p[E]=p[E]/M;f.envMap.value=t.texture,f.samples.value=m,f.weights.value=p,f.latitudinal.value=o==="latitudinal",a&&(f.poleAxis.value=a);const{_lodMax:v}=this;f.dTheta.value=g,f.mipInt.value=v-n;const x=this._sizeLods[i],S=3*x*(i>v-Or?i-v+Or:0),T=4*(this._cubeSize-x);So(e,S,T,3*x,2*x),l.setRenderTarget(e),l.render(h,Fa)}}function ed(r){const t=[],e=[],n=[];let i=r;const s=r-Or+1+y1.length;for(let o=0;o<s;o++){const a=Math.pow(2,i);e.push(a);let l=1/a;o>r-Or?l=y1[o-r+Or-1]:o===0&&(l=0),n.push(l);const c=1/(a-2),u=-c,h=1+c,f=[u,u,h,u,h,h,u,u,h,h,u,h],d=6,g=6,_=3,m=2,p=1,M=new Float32Array(_*g*d),v=new Float32Array(m*g*d),x=new Float32Array(p*g*d);for(let T=0;T<d;T++){const E=T%3*2/3-1,A=T>2?0:-1,y=[E,A,0,E+2/3,A,0,E+2/3,A+1,0,E,A,0,E+2/3,A+1,0,E,A+1,0];M.set(y,_*g*T),v.set(f,m*g*T);const b=[T,T,T,T,T,T];x.set(b,p*g*T)}const S=new Ae;S.setAttribute("position",new oe(M,_)),S.setAttribute("uv",new oe(v,m)),S.setAttribute("faceIndex",new oe(x,p)),t.push(S),i>Or&&i--}return{lodPlanes:t,sizeLods:e,sigmas:n}}function T1(r,t,e){const n=new tr(r,t,e);return n.texture.mapping=Jo,n.texture.name="PMREM.cubeUv",n.scissorTest=!0,n}function So(r,t,e,n,i){r.viewport.set(t,e,n,i),r.scissor.set(t,e,n,i)}function nd(r,t,e){const n=new Float32Array(ki),i=new P(0,1,0);return new oi({name:"SphericalGaussianBlur",defines:{n:ki,CUBEUV_TEXEL_WIDTH:1/t,CUBEUV_TEXEL_HEIGHT:1/e,CUBEUV_MAX_MIP:`${r}.0`},uniforms:{envMap:{value:null},samples:{value:1},weights:{value:n},latitudinal:{value:!1},dTheta:{value:0},mipInt:{value:0},poleAxis:{value:i}},vertexShader:W0(),fragmentShader:`

			precision mediump float;
			precision mediump int;

			varying vec3 vOutputDirection;

			uniform sampler2D envMap;
			uniform int samples;
			uniform float weights[ n ];
			uniform bool latitudinal;
			uniform float dTheta;
			uniform float mipInt;
			uniform vec3 poleAxis;

			#define ENVMAP_TYPE_CUBE_UV
			#include <cube_uv_reflection_fragment>

			vec3 getSample( float theta, vec3 axis ) {

				float cosTheta = cos( theta );
				// Rodrigues' axis-angle rotation
				vec3 sampleDirection = vOutputDirection * cosTheta
					+ cross( axis, vOutputDirection ) * sin( theta )
					+ axis * dot( axis, vOutputDirection ) * ( 1.0 - cosTheta );

				return bilinearCubeUV( envMap, sampleDirection, mipInt );

			}

			void main() {

				vec3 axis = latitudinal ? poleAxis : cross( poleAxis, vOutputDirection );

				if ( all( equal( axis, vec3( 0.0 ) ) ) ) {

					axis = vec3( vOutputDirection.z, 0.0, - vOutputDirection.x );

				}

				axis = normalize( axis );

				gl_FragColor = vec4( 0.0, 0.0, 0.0, 1.0 );
				gl_FragColor.rgb += weights[ 0 ] * getSample( 0.0, axis );

				for ( int i = 1; i < n; i++ ) {

					if ( i >= samples ) {

						break;

					}

					float theta = dTheta * float( i );
					gl_FragColor.rgb += weights[ i ] * getSample( -1.0 * theta, axis );
					gl_FragColor.rgb += weights[ i ] * getSample( theta, axis );

				}

			}
		`,blending:Si,depthTest:!1,depthWrite:!1})}function b1(){return new oi({name:"EquirectangularToCubeUV",uniforms:{envMap:{value:null}},vertexShader:W0(),fragmentShader:`

			precision mediump float;
			precision mediump int;

			varying vec3 vOutputDirection;

			uniform sampler2D envMap;

			#include <common>

			void main() {

				vec3 outputDirection = normalize( vOutputDirection );
				vec2 uv = equirectUv( outputDirection );

				gl_FragColor = vec4( texture2D ( envMap, uv ).rgb, 1.0 );

			}
		`,blending:Si,depthTest:!1,depthWrite:!1})}function w1(){return new oi({name:"CubemapToCubeUV",uniforms:{envMap:{value:null},flipEnvMap:{value:-1}},vertexShader:W0(),fragmentShader:`

			precision mediump float;
			precision mediump int;

			uniform float flipEnvMap;

			varying vec3 vOutputDirection;

			uniform samplerCube envMap;

			void main() {

				gl_FragColor = textureCube( envMap, vec3( flipEnvMap * vOutputDirection.x, vOutputDirection.yz ) );

			}
		`,blending:Si,depthTest:!1,depthWrite:!1})}function W0(){return`

		precision mediump float;
		precision mediump int;

		attribute float faceIndex;

		varying vec3 vOutputDirection;

		// RH coordinate system; PMREM face-indexing convention
		vec3 getDirection( vec2 uv, float face ) {

			uv = 2.0 * uv - 1.0;

			vec3 direction = vec3( uv, 1.0 );

			if ( face == 0.0 ) {

				direction = direction.zyx; // ( 1, v, u ) pos x

			} else if ( face == 1.0 ) {

				direction = direction.xzy;
				direction.xz *= -1.0; // ( -u, 1, -v ) pos y

			} else if ( face == 2.0 ) {

				direction.x *= -1.0; // ( -u, v, 1 ) pos z

			} else if ( face == 3.0 ) {

				direction = direction.zyx;
				direction.xz *= -1.0; // ( -1, v, -u ) neg x

			} else if ( face == 4.0 ) {

				direction = direction.xzy;
				direction.xy *= -1.0; // ( -u, -1, v ) neg y

			} else if ( face == 5.0 ) {

				direction.z *= -1.0; // ( u, v, -1 ) neg z

			}

			return direction;

		}

		void main() {

			vOutputDirection = getDirection( uv, faceIndex );
			gl_Position = vec4( position, 1.0 );

		}
	`}function id(r){let t=new WeakMap,e=null;function n(a){if(a&&a.isTexture){const l=a.mapping,c=l===c0||l===u0,u=l===$r||l===Jr;if(c||u)if(a.isRenderTargetTexture&&a.needsPMREMUpdate===!0){a.needsPMREMUpdate=!1;let h=t.get(a);return e===null&&(e=new E1(r)),h=c?e.fromEquirectangular(a,h):e.fromCubemap(a,h),t.set(a,h),h.texture}else{if(t.has(a))return t.get(a).texture;{const h=a.image;if(c&&h&&h.height>0||u&&h&&i(h)){e===null&&(e=new E1(r));const f=c?e.fromEquirectangular(a):e.fromCubemap(a);return t.set(a,f),a.addEventListener("dispose",s),f.texture}else return null}}}return a}function i(a){let l=0;const c=6;for(let u=0;u<c;u++)a[u]!==void 0&&l++;return l===c}function s(a){const l=a.target;l.removeEventListener("dispose",s);const c=t.get(l);c!==void 0&&(t.delete(l),c.dispose())}function o(){t=new WeakMap,e!==null&&(e.dispose(),e=null)}return{get:n,dispose:o}}function rd(r){const t={};function e(n){if(t[n]!==void 0)return t[n];let i;switch(n){case"WEBGL_depth_texture":i=r.getExtension("WEBGL_depth_texture")||r.getExtension("MOZ_WEBGL_depth_texture")||r.getExtension("WEBKIT_WEBGL_depth_texture");break;case"EXT_texture_filter_anisotropic":i=r.getExtension("EXT_texture_filter_anisotropic")||r.getExtension("MOZ_EXT_texture_filter_anisotropic")||r.getExtension("WEBKIT_EXT_texture_filter_anisotropic");break;case"WEBGL_compressed_texture_s3tc":i=r.getExtension("WEBGL_compressed_texture_s3tc")||r.getExtension("MOZ_WEBGL_compressed_texture_s3tc")||r.getExtension("WEBKIT_WEBGL_compressed_texture_s3tc");break;case"WEBGL_compressed_texture_pvrtc":i=r.getExtension("WEBGL_compressed_texture_pvrtc")||r.getExtension("WEBKIT_WEBGL_compressed_texture_pvrtc");break;default:i=r.getExtension(n)}return t[n]=i,i}return{has:function(n){return e(n)!==null},init:function(n){n.isWebGL2?e("EXT_color_buffer_float"):(e("WEBGL_depth_texture"),e("OES_texture_float"),e("OES_texture_half_float"),e("OES_texture_half_float_linear"),e("OES_standard_derivatives"),e("OES_element_index_uint"),e("OES_vertex_array_object"),e("ANGLE_instanced_arrays")),e("OES_texture_float_linear"),e("EXT_color_buffer_half_float"),e("WEBGL_multisampled_render_to_texture")},get:function(n){const i=e(n);return i===null&&console.warn("THREE.WebGLRenderer: "+n+" extension not supported."),i}}}function sd(r,t,e,n){const i={},s=new WeakMap;function o(h){const f=h.target;f.index!==null&&t.remove(f.index);for(const g in f.attributes)t.remove(f.attributes[g]);for(const g in f.morphAttributes){const _=f.morphAttributes[g];for(let m=0,p=_.length;m<p;m++)t.remove(_[m])}f.removeEventListener("dispose",o),delete i[f.id];const d=s.get(f);d&&(t.remove(d),s.delete(f)),n.releaseStatesOfGeometry(f),f.isInstancedBufferGeometry===!0&&delete f._maxInstanceCount,e.memory.geometries--}function a(h,f){return i[f.id]===!0||(f.addEventListener("dispose",o),i[f.id]=!0,e.memory.geometries++),f}function l(h){const f=h.attributes;for(const g in f)t.update(f[g],r.ARRAY_BUFFER);const d=h.morphAttributes;for(const g in d){const _=d[g];for(let m=0,p=_.length;m<p;m++)t.update(_[m],r.ARRAY_BUFFER)}}function c(h){const f=[],d=h.index,g=h.attributes.position;let _=0;if(d!==null){const M=d.array;_=d.version;for(let v=0,x=M.length;v<x;v+=3){const S=M[v+0],T=M[v+1],E=M[v+2];f.push(S,T,T,E,E,S)}}else if(g!==void 0){const M=g.array;_=g.version;for(let v=0,x=M.length/3-1;v<x;v+=3){const S=v+0,T=v+1,E=v+2;f.push(S,T,T,E,E,S)}}else return;const m=new(kl(f)?ql:Xl)(f,1);m.version=_;const p=s.get(h);p&&t.remove(p),s.set(h,m)}function u(h){const f=s.get(h);if(f){const d=h.index;d!==null&&f.version<d.version&&c(h)}else c(h);return s.get(h)}return{get:a,update:l,getWireframeAttribute:u}}function od(r,t,e,n){const i=n.isWebGL2;let s;function o(f){s=f}let a,l;function c(f){a=f.type,l=f.bytesPerElement}function u(f,d){r.drawElements(s,d,a,f*l),e.update(d,s,1)}function h(f,d,g){if(g===0)return;let _,m;if(i)_=r,m="drawElementsInstanced";else if(_=t.get("ANGLE_instanced_arrays"),m="drawElementsInstancedANGLE",_===null){console.error("THREE.WebGLIndexedBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.");return}_[m](s,d,a,f*l,g),e.update(d,s,g)}this.setMode=o,this.setIndex=c,this.render=u,this.renderInstances=h}function ad(r){const t={geometries:0,textures:0},e={frame:0,calls:0,triangles:0,points:0,lines:0};function n(s,o,a){switch(e.calls++,o){case r.TRIANGLES:e.triangles+=a*(s/3);break;case r.LINES:e.lines+=a*(s/2);break;case r.LINE_STRIP:e.lines+=a*(s-1);break;case r.LINE_LOOP:e.lines+=a*s;break;case r.POINTS:e.points+=a*s;break;default:console.error("THREE.WebGLInfo: Unknown draw mode:",o);break}}function i(){e.calls=0,e.triangles=0,e.points=0,e.lines=0}return{memory:t,render:e,programs:null,autoReset:!0,reset:i,update:n}}function ld(r,t){return r[0]-t[0]}function cd(r,t){return Math.abs(t[1])-Math.abs(r[1])}function ud(r,t,e){const n={},i=new Float32Array(8),s=new WeakMap,o=new Ue,a=[];for(let c=0;c<8;c++)a[c]=[c,0];function l(c,u,h){const f=c.morphTargetInfluences;if(t.isWebGL2===!0){const g=u.morphAttributes.position||u.morphAttributes.normal||u.morphAttributes.color,_=g!==void 0?g.length:0;let m=s.get(u);if(m===void 0||m.count!==_){let N=function(){I.dispose(),s.delete(u),u.removeEventListener("dispose",N)};var d=N;m!==void 0&&m.texture.dispose();const v=u.morphAttributes.position!==void 0,x=u.morphAttributes.normal!==void 0,S=u.morphAttributes.color!==void 0,T=u.morphAttributes.position||[],E=u.morphAttributes.normal||[],A=u.morphAttributes.color||[];let y=0;v===!0&&(y=1),x===!0&&(y=2),S===!0&&(y=3);let b=u.attributes.position.count*y,F=1;b>t.maxTextureSize&&(F=Math.ceil(b/t.maxTextureSize),b=t.maxTextureSize);const z=new Float32Array(b*F*4*_),I=new Vl(z,b,F,_);I.type=vi,I.needsUpdate=!0;const O=y*4;for(let X=0;X<_;X++){const k=T[X],Y=E[X],Q=A[X],$=b*F*4*X;for(let B=0;B<k.count;B++){const V=B*O;v===!0&&(o.fromBufferAttribute(k,B),z[$+V+0]=o.x,z[$+V+1]=o.y,z[$+V+2]=o.z,z[$+V+3]=0),x===!0&&(o.fromBufferAttribute(Y,B),z[$+V+4]=o.x,z[$+V+5]=o.y,z[$+V+6]=o.z,z[$+V+7]=0),S===!0&&(o.fromBufferAttribute(Q,B),z[$+V+8]=o.x,z[$+V+9]=o.y,z[$+V+10]=o.z,z[$+V+11]=Q.itemSize===4?o.w:1)}}m={count:_,texture:I,size:new it(b,F)},s.set(u,m),u.addEventListener("dispose",N)}let p=0;for(let v=0;v<f.length;v++)p+=f[v];const M=u.morphTargetsRelative?1:1-p;h.getUniforms().setValue(r,"morphTargetBaseInfluence",M),h.getUniforms().setValue(r,"morphTargetInfluences",f),h.getUniforms().setValue(r,"morphTargetsTexture",m.texture,e),h.getUniforms().setValue(r,"morphTargetsTextureSize",m.size)}else{const g=f===void 0?0:f.length;let _=n[u.id];if(_===void 0||_.length!==g){_=[];for(let x=0;x<g;x++)_[x]=[x,0];n[u.id]=_}for(let x=0;x<g;x++){const S=_[x];S[0]=x,S[1]=f[x]}_.sort(cd);for(let x=0;x<8;x++)x<g&&_[x][1]?(a[x][0]=_[x][0],a[x][1]=_[x][1]):(a[x][0]=Number.MAX_SAFE_INTEGER,a[x][1]=0);a.sort(ld);const m=u.morphAttributes.position,p=u.morphAttributes.normal;let M=0;for(let x=0;x<8;x++){const S=a[x],T=S[0],E=S[1];T!==Number.MAX_SAFE_INTEGER&&E?(m&&u.getAttribute("morphTarget"+x)!==m[T]&&u.setAttribute("morphTarget"+x,m[T]),p&&u.getAttribute("morphNormal"+x)!==p[T]&&u.setAttribute("morphNormal"+x,p[T]),i[x]=E,M+=E):(m&&u.hasAttribute("morphTarget"+x)===!0&&u.deleteAttribute("morphTarget"+x),p&&u.hasAttribute("morphNormal"+x)===!0&&u.deleteAttribute("morphNormal"+x),i[x]=0)}const v=u.morphTargetsRelative?1:1-M;h.getUniforms().setValue(r,"morphTargetBaseInfluence",v),h.getUniforms().setValue(r,"morphTargetInfluences",i)}}return{update:l}}function hd(r,t,e,n){let i=new WeakMap;function s(l){const c=n.render.frame,u=l.geometry,h=t.get(l,u);if(i.get(h)!==c&&(t.update(h),i.set(h,c)),l.isInstancedMesh&&(l.hasEventListener("dispose",a)===!1&&l.addEventListener("dispose",a),i.get(l)!==c&&(e.update(l.instanceMatrix,r.ARRAY_BUFFER),l.instanceColor!==null&&e.update(l.instanceColor,r.ARRAY_BUFFER),i.set(l,c))),l.isSkinnedMesh){const f=l.skeleton;i.get(f)!==c&&(f.update(),i.set(f,c))}return h}function o(){i=new WeakMap}function a(l){const c=l.target;c.removeEventListener("dispose",a),e.remove(c.instanceMatrix),c.instanceColor!==null&&e.remove(c.instanceColor)}return{update:s,dispose:o}}const Jl=new tn,Ql=new Vl,tc=new K2,ec=new Zl,A1=[],R1=[],C1=new Float32Array(16),P1=new Float32Array(9),L1=new Float32Array(4);function as(r,t,e){const n=r[0];if(n<=0||n>0)return r;const i=t*e;let s=A1[i];if(s===void 0&&(s=new Float32Array(i),A1[i]=s),t!==0){n.toArray(s,0);for(let o=1,a=0;o!==t;++o)a+=e,r[o].toArray(s,a)}return s}function Re(r,t){if(r.length!==t.length)return!1;for(let e=0,n=r.length;e<n;e++)if(r[e]!==t[e])return!1;return!0}function Ce(r,t){for(let e=0,n=t.length;e<n;e++)r[e]=t[e]}function ea(r,t){let e=R1[t];e===void 0&&(e=new Int32Array(t),R1[t]=e);for(let n=0;n!==t;++n)e[n]=r.allocateTextureUnit();return e}function fd(r,t){const e=this.cache;e[0]!==t&&(r.uniform1f(this.addr,t),e[0]=t)}function dd(r,t){const e=this.cache;if(t.x!==void 0)(e[0]!==t.x||e[1]!==t.y)&&(r.uniform2f(this.addr,t.x,t.y),e[0]=t.x,e[1]=t.y);else{if(Re(e,t))return;r.uniform2fv(this.addr,t),Ce(e,t)}}function pd(r,t){const e=this.cache;if(t.x!==void 0)(e[0]!==t.x||e[1]!==t.y||e[2]!==t.z)&&(r.uniform3f(this.addr,t.x,t.y,t.z),e[0]=t.x,e[1]=t.y,e[2]=t.z);else if(t.r!==void 0)(e[0]!==t.r||e[1]!==t.g||e[2]!==t.b)&&(r.uniform3f(this.addr,t.r,t.g,t.b),e[0]=t.r,e[1]=t.g,e[2]=t.b);else{if(Re(e,t))return;r.uniform3fv(this.addr,t),Ce(e,t)}}function md(r,t){const e=this.cache;if(t.x!==void 0)(e[0]!==t.x||e[1]!==t.y||e[2]!==t.z||e[3]!==t.w)&&(r.uniform4f(this.addr,t.x,t.y,t.z,t.w),e[0]=t.x,e[1]=t.y,e[2]=t.z,e[3]=t.w);else{if(Re(e,t))return;r.uniform4fv(this.addr,t),Ce(e,t)}}function _d(r,t){const e=this.cache,n=t.elements;if(n===void 0){if(Re(e,t))return;r.uniformMatrix2fv(this.addr,!1,t),Ce(e,t)}else{if(Re(e,n))return;L1.set(n),r.uniformMatrix2fv(this.addr,!1,L1),Ce(e,n)}}function gd(r,t){const e=this.cache,n=t.elements;if(n===void 0){if(Re(e,t))return;r.uniformMatrix3fv(this.addr,!1,t),Ce(e,t)}else{if(Re(e,n))return;P1.set(n),r.uniformMatrix3fv(this.addr,!1,P1),Ce(e,n)}}function vd(r,t){const e=this.cache,n=t.elements;if(n===void 0){if(Re(e,t))return;r.uniformMatrix4fv(this.addr,!1,t),Ce(e,t)}else{if(Re(e,n))return;C1.set(n),r.uniformMatrix4fv(this.addr,!1,C1),Ce(e,n)}}function xd(r,t){const e=this.cache;e[0]!==t&&(r.uniform1i(this.addr,t),e[0]=t)}function yd(r,t){const e=this.cache;if(t.x!==void 0)(e[0]!==t.x||e[1]!==t.y)&&(r.uniform2i(this.addr,t.x,t.y),e[0]=t.x,e[1]=t.y);else{if(Re(e,t))return;r.uniform2iv(this.addr,t),Ce(e,t)}}function Md(r,t){const e=this.cache;if(t.x!==void 0)(e[0]!==t.x||e[1]!==t.y||e[2]!==t.z)&&(r.uniform3i(this.addr,t.x,t.y,t.z),e[0]=t.x,e[1]=t.y,e[2]=t.z);else{if(Re(e,t))return;r.uniform3iv(this.addr,t),Ce(e,t)}}function Sd(r,t){const e=this.cache;if(t.x!==void 0)(e[0]!==t.x||e[1]!==t.y||e[2]!==t.z||e[3]!==t.w)&&(r.uniform4i(this.addr,t.x,t.y,t.z,t.w),e[0]=t.x,e[1]=t.y,e[2]=t.z,e[3]=t.w);else{if(Re(e,t))return;r.uniform4iv(this.addr,t),Ce(e,t)}}function Ed(r,t){const e=this.cache;e[0]!==t&&(r.uniform1ui(this.addr,t),e[0]=t)}function Td(r,t){const e=this.cache;if(t.x!==void 0)(e[0]!==t.x||e[1]!==t.y)&&(r.uniform2ui(this.addr,t.x,t.y),e[0]=t.x,e[1]=t.y);else{if(Re(e,t))return;r.uniform2uiv(this.addr,t),Ce(e,t)}}function bd(r,t){const e=this.cache;if(t.x!==void 0)(e[0]!==t.x||e[1]!==t.y||e[2]!==t.z)&&(r.uniform3ui(this.addr,t.x,t.y,t.z),e[0]=t.x,e[1]=t.y,e[2]=t.z);else{if(Re(e,t))return;r.uniform3uiv(this.addr,t),Ce(e,t)}}function wd(r,t){const e=this.cache;if(t.x!==void 0)(e[0]!==t.x||e[1]!==t.y||e[2]!==t.z||e[3]!==t.w)&&(r.uniform4ui(this.addr,t.x,t.y,t.z,t.w),e[0]=t.x,e[1]=t.y,e[2]=t.z,e[3]=t.w);else{if(Re(e,t))return;r.uniform4uiv(this.addr,t),Ce(e,t)}}function Ad(r,t,e){const n=this.cache,i=e.allocateTextureUnit();n[0]!==i&&(r.uniform1i(this.addr,i),n[0]=i),e.setTexture2D(t||Jl,i)}function Rd(r,t,e){const n=this.cache,i=e.allocateTextureUnit();n[0]!==i&&(r.uniform1i(this.addr,i),n[0]=i),e.setTexture3D(t||tc,i)}function Cd(r,t,e){const n=this.cache,i=e.allocateTextureUnit();n[0]!==i&&(r.uniform1i(this.addr,i),n[0]=i),e.setTextureCube(t||ec,i)}function Pd(r,t,e){const n=this.cache,i=e.allocateTextureUnit();n[0]!==i&&(r.uniform1i(this.addr,i),n[0]=i),e.setTexture2DArray(t||Ql,i)}function Ld(r){switch(r){case 5126:return fd;case 35664:return dd;case 35665:return pd;case 35666:return md;case 35674:return _d;case 35675:return gd;case 35676:return vd;case 5124:case 35670:return xd;case 35667:case 35671:return yd;case 35668:case 35672:return Md;case 35669:case 35673:return Sd;case 5125:return Ed;case 36294:return Td;case 36295:return bd;case 36296:return wd;case 35678:case 36198:case 36298:case 36306:case 35682:return Ad;case 35679:case 36299:case 36307:return Rd;case 35680:case 36300:case 36308:case 36293:return Cd;case 36289:case 36303:case 36311:case 36292:return Pd}}function Dd(r,t){r.uniform1fv(this.addr,t)}function Ud(r,t){const e=as(t,this.size,2);r.uniform2fv(this.addr,e)}function Id(r,t){const e=as(t,this.size,3);r.uniform3fv(this.addr,e)}function Od(r,t){const e=as(t,this.size,4);r.uniform4fv(this.addr,e)}function Nd(r,t){const e=as(t,this.size,4);r.uniformMatrix2fv(this.addr,!1,e)}function Fd(r,t){const e=as(t,this.size,9);r.uniformMatrix3fv(this.addr,!1,e)}function zd(r,t){const e=as(t,this.size,16);r.uniformMatrix4fv(this.addr,!1,e)}function Bd(r,t){r.uniform1iv(this.addr,t)}function kd(r,t){r.uniform2iv(this.addr,t)}function Gd(r,t){r.uniform3iv(this.addr,t)}function Hd(r,t){r.uniform4iv(this.addr,t)}function Vd(r,t){r.uniform1uiv(this.addr,t)}function Wd(r,t){r.uniform2uiv(this.addr,t)}function Xd(r,t){r.uniform3uiv(this.addr,t)}function qd(r,t){r.uniform4uiv(this.addr,t)}function Yd(r,t,e){const n=this.cache,i=t.length,s=ea(e,i);Re(n,s)||(r.uniform1iv(this.addr,s),Ce(n,s));for(let o=0;o!==i;++o)e.setTexture2D(t[o]||Jl,s[o])}function jd(r,t,e){const n=this.cache,i=t.length,s=ea(e,i);Re(n,s)||(r.uniform1iv(this.addr,s),Ce(n,s));for(let o=0;o!==i;++o)e.setTexture3D(t[o]||tc,s[o])}function Zd(r,t,e){const n=this.cache,i=t.length,s=ea(e,i);Re(n,s)||(r.uniform1iv(this.addr,s),Ce(n,s));for(let o=0;o!==i;++o)e.setTextureCube(t[o]||ec,s[o])}function Kd(r,t,e){const n=this.cache,i=t.length,s=ea(e,i);Re(n,s)||(r.uniform1iv(this.addr,s),Ce(n,s));for(let o=0;o!==i;++o)e.setTexture2DArray(t[o]||Ql,s[o])}function $d(r){switch(r){case 5126:return Dd;case 35664:return Ud;case 35665:return Id;case 35666:return Od;case 35674:return Nd;case 35675:return Fd;case 35676:return zd;case 5124:case 35670:return Bd;case 35667:case 35671:return kd;case 35668:case 35672:return Gd;case 35669:case 35673:return Hd;case 5125:return Vd;case 36294:return Wd;case 36295:return Xd;case 36296:return qd;case 35678:case 36198:case 36298:case 36306:case 35682:return Yd;case 35679:case 36299:case 36307:return jd;case 35680:case 36300:case 36308:case 36293:return Zd;case 36289:case 36303:case 36311:case 36292:return Kd}}class Jd{constructor(t,e,n){this.id=t,this.addr=n,this.cache=[],this.setValue=Ld(e.type)}}class Qd{constructor(t,e,n){this.id=t,this.addr=n,this.cache=[],this.size=e.size,this.setValue=$d(e.type)}}class t9{constructor(t){this.id=t,this.seq=[],this.map={}}setValue(t,e,n){const i=this.seq;for(let s=0,o=i.length;s!==o;++s){const a=i[s];a.setValue(t,e[a.id],n)}}}const Ba=/(\w+)(\])?(\[|\.)?/g;function D1(r,t){r.seq.push(t),r.map[t.id]=t}function e9(r,t,e){const n=r.name,i=n.length;for(Ba.lastIndex=0;;){const s=Ba.exec(n),o=Ba.lastIndex;let a=s[1];const l=s[2]==="]",c=s[3];if(l&&(a=a|0),c===void 0||c==="["&&o+2===i){D1(e,c===void 0?new Jd(a,r,t):new Qd(a,r,t));break}else{let h=e.map[a];h===void 0&&(h=new t9(a),D1(e,h)),e=h}}}class Lo{constructor(t,e){this.seq=[],this.map={};const n=t.getProgramParameter(e,t.ACTIVE_UNIFORMS);for(let i=0;i<n;++i){const s=t.getActiveUniform(e,i),o=t.getUniformLocation(e,s.name);e9(s,o,this)}}setValue(t,e,n,i){const s=this.map[e];s!==void 0&&s.setValue(t,n,i)}setOptional(t,e,n){const i=e[n];i!==void 0&&this.setValue(t,n,i)}static upload(t,e,n,i){for(let s=0,o=e.length;s!==o;++s){const a=e[s],l=n[a.id];l.needsUpdate!==!1&&a.setValue(t,l.value,i)}}static seqWithValue(t,e){const n=[];for(let i=0,s=t.length;i!==s;++i){const o=t[i];o.id in e&&n.push(o)}return n}}function U1(r,t,e){const n=r.createShader(t);return r.shaderSource(n,e),r.compileShader(n),n}let n9=0;function i9(r,t){const e=r.split(`
`),n=[],i=Math.max(t-6,0),s=Math.min(t+6,e.length);for(let o=i;o<s;o++){const a=o+1;n.push(`${a===t?">":" "} ${a}: ${e[o]}`)}return n.join(`
`)}function r9(r){switch(r){case Hn:return["Linear","( value )"];case ae:return["sRGB","( value )"];default:return console.warn("THREE.WebGLProgram: Unsupported color space:",r),["Linear","( value )"]}}function I1(r,t,e){const n=r.getShaderParameter(t,r.COMPILE_STATUS),i=r.getShaderInfoLog(t).trim();if(n&&i==="")return"";const s=/ERROR: 0:(\d+)/.exec(i);if(s){const o=parseInt(s[1]);return e.toUpperCase()+`

`+i+`

`+i9(r.getShaderSource(t),o)}else return i}function s9(r,t){const e=r9(t);return"vec4 "+r+"( vec4 value ) { return LinearTo"+e[0]+e[1]+"; }"}function o9(r,t){let e;switch(t){case Q6:e="Linear";break;case t2:e="Reinhard";break;case e2:e="OptimizedCineon";break;case n2:e="ACESFilmic";break;case i2:e="Custom";break;default:console.warn("THREE.WebGLProgram: Unsupported toneMapping:",t),e="Linear"}return"vec3 "+r+"( vec3 color ) { return "+e+"ToneMapping( color ); }"}function a9(r){return[r.extensionDerivatives||r.envMapCubeUVHeight||r.bumpMap||r.normalMapTangentSpace||r.clearcoatNormalMap||r.flatShading||r.shaderID==="physical"?"#extension GL_OES_standard_derivatives : enable":"",(r.extensionFragDepth||r.logarithmicDepthBuffer)&&r.rendererExtensionFragDepth?"#extension GL_EXT_frag_depth : enable":"",r.extensionDrawBuffers&&r.rendererExtensionDrawBuffers?"#extension GL_EXT_draw_buffers : require":"",(r.extensionShaderTextureLOD||r.envMap||r.transmission)&&r.rendererExtensionShaderTextureLod?"#extension GL_EXT_shader_texture_lod : enable":""].filter(_s).join(`
`)}function l9(r){const t=[];for(const e in r){const n=r[e];n!==!1&&t.push("#define "+e+" "+n)}return t.join(`
`)}function c9(r,t){const e={},n=r.getProgramParameter(t,r.ACTIVE_ATTRIBUTES);for(let i=0;i<n;i++){const s=r.getActiveAttrib(t,i),o=s.name;let a=1;s.type===r.FLOAT_MAT2&&(a=2),s.type===r.FLOAT_MAT3&&(a=3),s.type===r.FLOAT_MAT4&&(a=4),e[o]={type:s.type,location:r.getAttribLocation(t,o),locationSize:a}}return e}function _s(r){return r!==""}function O1(r,t){const e=t.numSpotLightShadows+t.numSpotLightMaps-t.numSpotLightShadowsWithMaps;return r.replace(/NUM_DIR_LIGHTS/g,t.numDirLights).replace(/NUM_SPOT_LIGHTS/g,t.numSpotLights).replace(/NUM_SPOT_LIGHT_MAPS/g,t.numSpotLightMaps).replace(/NUM_SPOT_LIGHT_COORDS/g,e).replace(/NUM_RECT_AREA_LIGHTS/g,t.numRectAreaLights).replace(/NUM_POINT_LIGHTS/g,t.numPointLights).replace(/NUM_HEMI_LIGHTS/g,t.numHemiLights).replace(/NUM_DIR_LIGHT_SHADOWS/g,t.numDirLightShadows).replace(/NUM_SPOT_LIGHT_SHADOWS_WITH_MAPS/g,t.numSpotLightShadowsWithMaps).replace(/NUM_SPOT_LIGHT_SHADOWS/g,t.numSpotLightShadows).replace(/NUM_POINT_LIGHT_SHADOWS/g,t.numPointLightShadows)}function N1(r,t){return r.replace(/NUM_CLIPPING_PLANES/g,t.numClippingPlanes).replace(/UNION_CLIPPING_PLANES/g,t.numClippingPlanes-t.numClipIntersection)}const u9=/^[ \t]*#include +<([\w\d./]+)>/gm;function m0(r){return r.replace(u9,f9)}const h9=new Map([["encodings_fragment","colorspace_fragment"],["encodings_pars_fragment","colorspace_pars_fragment"],["output_fragment","opaque_fragment"]]);function f9(r,t){let e=At[t];if(e===void 0){const n=h9.get(t);if(n!==void 0)e=At[n],console.warn('THREE.WebGLRenderer: Shader chunk "%s" has been deprecated. Use "%s" instead.',t,n);else throw new Error("Can not resolve #include <"+t+">")}return m0(e)}const d9=/#pragma unroll_loop_start\s+for\s*\(\s*int\s+i\s*=\s*(\d+)\s*;\s*i\s*<\s*(\d+)\s*;\s*i\s*\+\+\s*\)\s*{([\s\S]+?)}\s+#pragma unroll_loop_end/g;function F1(r){return r.replace(d9,p9)}function p9(r,t,e,n){let i="";for(let s=parseInt(t);s<parseInt(e);s++)i+=n.replace(/\[\s*i\s*\]/g,"[ "+s+" ]").replace(/UNROLLED_LOOP_INDEX/g,s);return i}function z1(r){let t="precision "+r.precision+` float;
precision `+r.precision+" int;";return r.precision==="highp"?t+=`
#define HIGH_PRECISION`:r.precision==="mediump"?t+=`
#define MEDIUM_PRECISION`:r.precision==="lowp"&&(t+=`
#define LOW_PRECISION`),t}function m9(r){let t="SHADOWMAP_TYPE_BASIC";return r.shadowMapType===Rl?t="SHADOWMAP_TYPE_PCF":r.shadowMapType===L6?t="SHADOWMAP_TYPE_PCF_SOFT":r.shadowMapType===ei&&(t="SHADOWMAP_TYPE_VSM"),t}function _9(r){let t="ENVMAP_TYPE_CUBE";if(r.envMap)switch(r.envMapMode){case $r:case Jr:t="ENVMAP_TYPE_CUBE";break;case Jo:t="ENVMAP_TYPE_CUBE_UV";break}return t}function g9(r){let t="ENVMAP_MODE_REFLECTION";if(r.envMap)switch(r.envMapMode){case Jr:t="ENVMAP_MODE_REFRACTION";break}return t}function v9(r){let t="ENVMAP_BLENDING_NONE";if(r.envMap)switch(r.combine){case Ll:t="ENVMAP_BLENDING_MULTIPLY";break;case $6:t="ENVMAP_BLENDING_MIX";break;case J6:t="ENVMAP_BLENDING_ADD";break}return t}function x9(r){const t=r.envMapCubeUVHeight;if(t===null)return null;const e=Math.log2(t)-2,n=1/t;return{texelWidth:1/(3*Math.max(Math.pow(2,e),7*16)),texelHeight:n,maxMip:e}}function y9(r,t,e,n){const i=r.getContext(),s=e.defines;let o=e.vertexShader,a=e.fragmentShader;const l=m9(e),c=_9(e),u=g9(e),h=v9(e),f=x9(e),d=e.isWebGL2?"":a9(e),g=l9(s),_=i.createProgram();let m,p,M=e.glslVersion?"#version "+e.glslVersion+`
`:"";e.isRawShaderMaterial?(m=["#define SHADER_TYPE "+e.shaderType,"#define SHADER_NAME "+e.shaderName,g].filter(_s).join(`
`),m.length>0&&(m+=`
`),p=[d,"#define SHADER_TYPE "+e.shaderType,"#define SHADER_NAME "+e.shaderName,g].filter(_s).join(`
`),p.length>0&&(p+=`
`)):(m=[z1(e),"#define SHADER_TYPE "+e.shaderType,"#define SHADER_NAME "+e.shaderName,g,e.instancing?"#define USE_INSTANCING":"",e.instancingColor?"#define USE_INSTANCING_COLOR":"",e.useFog&&e.fog?"#define USE_FOG":"",e.useFog&&e.fogExp2?"#define FOG_EXP2":"",e.map?"#define USE_MAP":"",e.envMap?"#define USE_ENVMAP":"",e.envMap?"#define "+u:"",e.lightMap?"#define USE_LIGHTMAP":"",e.aoMap?"#define USE_AOMAP":"",e.bumpMap?"#define USE_BUMPMAP":"",e.normalMap?"#define USE_NORMALMAP":"",e.normalMapObjectSpace?"#define USE_NORMALMAP_OBJECTSPACE":"",e.normalMapTangentSpace?"#define USE_NORMALMAP_TANGENTSPACE":"",e.displacementMap?"#define USE_DISPLACEMENTMAP":"",e.emissiveMap?"#define USE_EMISSIVEMAP":"",e.anisotropyMap?"#define USE_ANISOTROPYMAP":"",e.clearcoatMap?"#define USE_CLEARCOATMAP":"",e.clearcoatRoughnessMap?"#define USE_CLEARCOAT_ROUGHNESSMAP":"",e.clearcoatNormalMap?"#define USE_CLEARCOAT_NORMALMAP":"",e.iridescenceMap?"#define USE_IRIDESCENCEMAP":"",e.iridescenceThicknessMap?"#define USE_IRIDESCENCE_THICKNESSMAP":"",e.specularMap?"#define USE_SPECULARMAP":"",e.specularColorMap?"#define USE_SPECULAR_COLORMAP":"",e.specularIntensityMap?"#define USE_SPECULAR_INTENSITYMAP":"",e.roughnessMap?"#define USE_ROUGHNESSMAP":"",e.metalnessMap?"#define USE_METALNESSMAP":"",e.alphaMap?"#define USE_ALPHAMAP":"",e.alphaHash?"#define USE_ALPHAHASH":"",e.transmission?"#define USE_TRANSMISSION":"",e.transmissionMap?"#define USE_TRANSMISSIONMAP":"",e.thicknessMap?"#define USE_THICKNESSMAP":"",e.sheenColorMap?"#define USE_SHEEN_COLORMAP":"",e.sheenRoughnessMap?"#define USE_SHEEN_ROUGHNESSMAP":"",e.mapUv?"#define MAP_UV "+e.mapUv:"",e.alphaMapUv?"#define ALPHAMAP_UV "+e.alphaMapUv:"",e.lightMapUv?"#define LIGHTMAP_UV "+e.lightMapUv:"",e.aoMapUv?"#define AOMAP_UV "+e.aoMapUv:"",e.emissiveMapUv?"#define EMISSIVEMAP_UV "+e.emissiveMapUv:"",e.bumpMapUv?"#define BUMPMAP_UV "+e.bumpMapUv:"",e.normalMapUv?"#define NORMALMAP_UV "+e.normalMapUv:"",e.displacementMapUv?"#define DISPLACEMENTMAP_UV "+e.displacementMapUv:"",e.metalnessMapUv?"#define METALNESSMAP_UV "+e.metalnessMapUv:"",e.roughnessMapUv?"#define ROUGHNESSMAP_UV "+e.roughnessMapUv:"",e.anisotropyMapUv?"#define ANISOTROPYMAP_UV "+e.anisotropyMapUv:"",e.clearcoatMapUv?"#define CLEARCOATMAP_UV "+e.clearcoatMapUv:"",e.clearcoatNormalMapUv?"#define CLEARCOAT_NORMALMAP_UV "+e.clearcoatNormalMapUv:"",e.clearcoatRoughnessMapUv?"#define CLEARCOAT_ROUGHNESSMAP_UV "+e.clearcoatRoughnessMapUv:"",e.iridescenceMapUv?"#define IRIDESCENCEMAP_UV "+e.iridescenceMapUv:"",e.iridescenceThicknessMapUv?"#define IRIDESCENCE_THICKNESSMAP_UV "+e.iridescenceThicknessMapUv:"",e.sheenColorMapUv?"#define SHEEN_COLORMAP_UV "+e.sheenColorMapUv:"",e.sheenRoughnessMapUv?"#define SHEEN_ROUGHNESSMAP_UV "+e.sheenRoughnessMapUv:"",e.specularMapUv?"#define SPECULARMAP_UV "+e.specularMapUv:"",e.specularColorMapUv?"#define SPECULAR_COLORMAP_UV "+e.specularColorMapUv:"",e.specularIntensityMapUv?"#define SPECULAR_INTENSITYMAP_UV "+e.specularIntensityMapUv:"",e.transmissionMapUv?"#define TRANSMISSIONMAP_UV "+e.transmissionMapUv:"",e.thicknessMapUv?"#define THICKNESSMAP_UV "+e.thicknessMapUv:"",e.vertexTangents&&e.flatShading===!1?"#define USE_TANGENT":"",e.vertexColors?"#define USE_COLOR":"",e.vertexAlphas?"#define USE_COLOR_ALPHA":"",e.vertexUv1s?"#define USE_UV1":"",e.vertexUv2s?"#define USE_UV2":"",e.vertexUv3s?"#define USE_UV3":"",e.pointsUvs?"#define USE_POINTS_UV":"",e.flatShading?"#define FLAT_SHADED":"",e.skinning?"#define USE_SKINNING":"",e.morphTargets?"#define USE_MORPHTARGETS":"",e.morphNormals&&e.flatShading===!1?"#define USE_MORPHNORMALS":"",e.morphColors&&e.isWebGL2?"#define USE_MORPHCOLORS":"",e.morphTargetsCount>0&&e.isWebGL2?"#define MORPHTARGETS_TEXTURE":"",e.morphTargetsCount>0&&e.isWebGL2?"#define MORPHTARGETS_TEXTURE_STRIDE "+e.morphTextureStride:"",e.morphTargetsCount>0&&e.isWebGL2?"#define MORPHTARGETS_COUNT "+e.morphTargetsCount:"",e.doubleSided?"#define DOUBLE_SIDED":"",e.flipSided?"#define FLIP_SIDED":"",e.shadowMapEnabled?"#define USE_SHADOWMAP":"",e.shadowMapEnabled?"#define "+l:"",e.sizeAttenuation?"#define USE_SIZEATTENUATION":"",e.useLegacyLights?"#define LEGACY_LIGHTS":"",e.logarithmicDepthBuffer?"#define USE_LOGDEPTHBUF":"",e.logarithmicDepthBuffer&&e.rendererExtensionFragDepth?"#define USE_LOGDEPTHBUF_EXT":"","uniform mat4 modelMatrix;","uniform mat4 modelViewMatrix;","uniform mat4 projectionMatrix;","uniform mat4 viewMatrix;","uniform mat3 normalMatrix;","uniform vec3 cameraPosition;","uniform bool isOrthographic;","#ifdef USE_INSTANCING","	attribute mat4 instanceMatrix;","#endif","#ifdef USE_INSTANCING_COLOR","	attribute vec3 instanceColor;","#endif","attribute vec3 position;","attribute vec3 normal;","attribute vec2 uv;","#ifdef USE_UV1","	attribute vec2 uv1;","#endif","#ifdef USE_UV2","	attribute vec2 uv2;","#endif","#ifdef USE_UV3","	attribute vec2 uv3;","#endif","#ifdef USE_TANGENT","	attribute vec4 tangent;","#endif","#if defined( USE_COLOR_ALPHA )","	attribute vec4 color;","#elif defined( USE_COLOR )","	attribute vec3 color;","#endif","#if ( defined( USE_MORPHTARGETS ) && ! defined( MORPHTARGETS_TEXTURE ) )","	attribute vec3 morphTarget0;","	attribute vec3 morphTarget1;","	attribute vec3 morphTarget2;","	attribute vec3 morphTarget3;","	#ifdef USE_MORPHNORMALS","		attribute vec3 morphNormal0;","		attribute vec3 morphNormal1;","		attribute vec3 morphNormal2;","		attribute vec3 morphNormal3;","	#else","		attribute vec3 morphTarget4;","		attribute vec3 morphTarget5;","		attribute vec3 morphTarget6;","		attribute vec3 morphTarget7;","	#endif","#endif","#ifdef USE_SKINNING","	attribute vec4 skinIndex;","	attribute vec4 skinWeight;","#endif",`
`].filter(_s).join(`
`),p=[d,z1(e),"#define SHADER_TYPE "+e.shaderType,"#define SHADER_NAME "+e.shaderName,g,e.useFog&&e.fog?"#define USE_FOG":"",e.useFog&&e.fogExp2?"#define FOG_EXP2":"",e.map?"#define USE_MAP":"",e.matcap?"#define USE_MATCAP":"",e.envMap?"#define USE_ENVMAP":"",e.envMap?"#define "+c:"",e.envMap?"#define "+u:"",e.envMap?"#define "+h:"",f?"#define CUBEUV_TEXEL_WIDTH "+f.texelWidth:"",f?"#define CUBEUV_TEXEL_HEIGHT "+f.texelHeight:"",f?"#define CUBEUV_MAX_MIP "+f.maxMip+".0":"",e.lightMap?"#define USE_LIGHTMAP":"",e.aoMap?"#define USE_AOMAP":"",e.bumpMap?"#define USE_BUMPMAP":"",e.normalMap?"#define USE_NORMALMAP":"",e.normalMapObjectSpace?"#define USE_NORMALMAP_OBJECTSPACE":"",e.normalMapTangentSpace?"#define USE_NORMALMAP_TANGENTSPACE":"",e.emissiveMap?"#define USE_EMISSIVEMAP":"",e.anisotropy?"#define USE_ANISOTROPY":"",e.anisotropyMap?"#define USE_ANISOTROPYMAP":"",e.clearcoat?"#define USE_CLEARCOAT":"",e.clearcoatMap?"#define USE_CLEARCOATMAP":"",e.clearcoatRoughnessMap?"#define USE_CLEARCOAT_ROUGHNESSMAP":"",e.clearcoatNormalMap?"#define USE_CLEARCOAT_NORMALMAP":"",e.iridescence?"#define USE_IRIDESCENCE":"",e.iridescenceMap?"#define USE_IRIDESCENCEMAP":"",e.iridescenceThicknessMap?"#define USE_IRIDESCENCE_THICKNESSMAP":"",e.specularMap?"#define USE_SPECULARMAP":"",e.specularColorMap?"#define USE_SPECULAR_COLORMAP":"",e.specularIntensityMap?"#define USE_SPECULAR_INTENSITYMAP":"",e.roughnessMap?"#define USE_ROUGHNESSMAP":"",e.metalnessMap?"#define USE_METALNESSMAP":"",e.alphaMap?"#define USE_ALPHAMAP":"",e.alphaTest?"#define USE_ALPHATEST":"",e.alphaHash?"#define USE_ALPHAHASH":"",e.sheen?"#define USE_SHEEN":"",e.sheenColorMap?"#define USE_SHEEN_COLORMAP":"",e.sheenRoughnessMap?"#define USE_SHEEN_ROUGHNESSMAP":"",e.transmission?"#define USE_TRANSMISSION":"",e.transmissionMap?"#define USE_TRANSMISSIONMAP":"",e.thicknessMap?"#define USE_THICKNESSMAP":"",e.vertexTangents&&e.flatShading===!1?"#define USE_TANGENT":"",e.vertexColors||e.instancingColor?"#define USE_COLOR":"",e.vertexAlphas?"#define USE_COLOR_ALPHA":"",e.vertexUv1s?"#define USE_UV1":"",e.vertexUv2s?"#define USE_UV2":"",e.vertexUv3s?"#define USE_UV3":"",e.pointsUvs?"#define USE_POINTS_UV":"",e.gradientMap?"#define USE_GRADIENTMAP":"",e.flatShading?"#define FLAT_SHADED":"",e.doubleSided?"#define DOUBLE_SIDED":"",e.flipSided?"#define FLIP_SIDED":"",e.shadowMapEnabled?"#define USE_SHADOWMAP":"",e.shadowMapEnabled?"#define "+l:"",e.premultipliedAlpha?"#define PREMULTIPLIED_ALPHA":"",e.useLegacyLights?"#define LEGACY_LIGHTS":"",e.decodeVideoTexture?"#define DECODE_VIDEO_TEXTURE":"",e.logarithmicDepthBuffer?"#define USE_LOGDEPTHBUF":"",e.logarithmicDepthBuffer&&e.rendererExtensionFragDepth?"#define USE_LOGDEPTHBUF_EXT":"","uniform mat4 viewMatrix;","uniform vec3 cameraPosition;","uniform bool isOrthographic;",e.toneMapping!==Ei?"#define TONE_MAPPING":"",e.toneMapping!==Ei?At.tonemapping_pars_fragment:"",e.toneMapping!==Ei?o9("toneMapping",e.toneMapping):"",e.dithering?"#define DITHERING":"",e.opaque?"#define OPAQUE":"",At.colorspace_pars_fragment,s9("linearToOutputTexel",e.outputColorSpace),e.useDepthPacking?"#define DEPTH_PACKING "+e.depthPacking:"",`
`].filter(_s).join(`
`)),o=m0(o),o=O1(o,e),o=N1(o,e),a=m0(a),a=O1(a,e),a=N1(a,e),o=F1(o),a=F1(a),e.isWebGL2&&e.isRawShaderMaterial!==!0&&(M=`#version 300 es
`,m=["precision mediump sampler2DArray;","#define attribute in","#define varying out","#define texture2D texture"].join(`
`)+`
`+m,p=["#define varying in",e.glslVersion===r1?"":"layout(location = 0) out highp vec4 pc_fragColor;",e.glslVersion===r1?"":"#define gl_FragColor pc_fragColor","#define gl_FragDepthEXT gl_FragDepth","#define texture2D texture","#define textureCube texture","#define texture2DProj textureProj","#define texture2DLodEXT textureLod","#define texture2DProjLodEXT textureProjLod","#define textureCubeLodEXT textureLod","#define texture2DGradEXT textureGrad","#define texture2DProjGradEXT textureProjGrad","#define textureCubeGradEXT textureGrad"].join(`
`)+`
`+p);const v=M+m+o,x=M+p+a,S=U1(i,i.VERTEX_SHADER,v),T=U1(i,i.FRAGMENT_SHADER,x);if(i.attachShader(_,S),i.attachShader(_,T),e.index0AttributeName!==void 0?i.bindAttribLocation(_,0,e.index0AttributeName):e.morphTargets===!0&&i.bindAttribLocation(_,0,"position"),i.linkProgram(_),r.debug.checkShaderErrors){const y=i.getProgramInfoLog(_).trim(),b=i.getShaderInfoLog(S).trim(),F=i.getShaderInfoLog(T).trim();let z=!0,I=!0;if(i.getProgramParameter(_,i.LINK_STATUS)===!1)if(z=!1,typeof r.debug.onShaderError=="function")r.debug.onShaderError(i,_,S,T);else{const O=I1(i,S,"vertex"),N=I1(i,T,"fragment");console.error("THREE.WebGLProgram: Shader Error "+i.getError()+" - VALIDATE_STATUS "+i.getProgramParameter(_,i.VALIDATE_STATUS)+`

Program Info Log: `+y+`
`+O+`
`+N)}else y!==""?console.warn("THREE.WebGLProgram: Program Info Log:",y):(b===""||F==="")&&(I=!1);I&&(this.diagnostics={runnable:z,programLog:y,vertexShader:{log:b,prefix:m},fragmentShader:{log:F,prefix:p}})}i.deleteShader(S),i.deleteShader(T);let E;this.getUniforms=function(){return E===void 0&&(E=new Lo(i,_)),E};let A;return this.getAttributes=function(){return A===void 0&&(A=c9(i,_)),A},this.destroy=function(){n.releaseStatesOfProgram(this),i.deleteProgram(_),this.program=void 0},this.type=e.shaderType,this.name=e.shaderName,this.id=n9++,this.cacheKey=t,this.usedTimes=1,this.program=_,this.vertexShader=S,this.fragmentShader=T,this}let M9=0;class S9{constructor(){this.shaderCache=new Map,this.materialCache=new Map}update(t){const e=t.vertexShader,n=t.fragmentShader,i=this._getShaderStage(e),s=this._getShaderStage(n),o=this._getShaderCacheForMaterial(t);return o.has(i)===!1&&(o.add(i),i.usedTimes++),o.has(s)===!1&&(o.add(s),s.usedTimes++),this}remove(t){const e=this.materialCache.get(t);for(const n of e)n.usedTimes--,n.usedTimes===0&&this.shaderCache.delete(n.code);return this.materialCache.delete(t),this}getVertexShaderID(t){return this._getShaderStage(t.vertexShader).id}getFragmentShaderID(t){return this._getShaderStage(t.fragmentShader).id}dispose(){this.shaderCache.clear(),this.materialCache.clear()}_getShaderCacheForMaterial(t){const e=this.materialCache;let n=e.get(t);return n===void 0&&(n=new Set,e.set(t,n)),n}_getShaderStage(t){const e=this.shaderCache;let n=e.get(t);return n===void 0&&(n=new E9(t),e.set(t,n)),n}}class E9{constructor(t){this.id=M9++,this.code=t,this.usedTimes=0}}function T9(r,t,e,n,i,s,o){const a=new H0,l=new S9,c=[],u=i.isWebGL2,h=i.logarithmicDepthBuffer,f=i.vertexTextures;let d=i.precision;const g={MeshDepthMaterial:"depth",MeshDistanceMaterial:"distanceRGBA",MeshNormalMaterial:"normal",MeshBasicMaterial:"basic",MeshLambertMaterial:"lambert",MeshPhongMaterial:"phong",MeshToonMaterial:"toon",MeshStandardMaterial:"physical",MeshPhysicalMaterial:"physical",MeshMatcapMaterial:"matcap",LineBasicMaterial:"basic",LineDashedMaterial:"dashed",PointsMaterial:"points",ShadowMaterial:"shadow",SpriteMaterial:"sprite"};function _(y){return y===0?"uv":`uv${y}`}function m(y,b,F,z,I){const O=z.fog,N=I.geometry,X=y.isMeshStandardMaterial?z.environment:null,k=(y.isMeshStandardMaterial?e:t).get(y.envMap||X),Y=k&&k.mapping===Jo?k.image.height:null,Q=g[y.type];y.precision!==null&&(d=i.getMaxPrecision(y.precision),d!==y.precision&&console.warn("THREE.WebGLProgram.getParameters:",y.precision,"not supported, using",d,"instead."));const $=N.morphAttributes.position||N.morphAttributes.normal||N.morphAttributes.color,B=$!==void 0?$.length:0;let V=0;N.morphAttributes.position!==void 0&&(V=1),N.morphAttributes.normal!==void 0&&(V=2),N.morphAttributes.color!==void 0&&(V=3);let ht,ct,_t,Rt;if(Q){const ie=Fn[Q];ht=ie.vertexShader,ct=ie.fragmentShader}else ht=y.vertexShader,ct=y.fragmentShader,l.update(y),_t=l.getVertexShaderID(y),Rt=l.getFragmentShaderID(y);const wt=r.getRenderTarget(),bt=I.isInstancedMesh===!0,Vt=!!y.map,Kt=!!y.matcap,Ct=!!k,L=!!y.aoMap,ut=!!y.lightMap,J=!!y.bumpMap,ot=!!y.normalMap,et=!!y.displacementMap,Tt=!!y.emissiveMap,xt=!!y.metalnessMap,Mt=!!y.roughnessMap,Lt=y.anisotropy>0,Bt=y.clearcoat>0,se=y.iridescence>0,C=y.sheen>0,w=y.transmission>0,W=Lt&&!!y.anisotropyMap,st=Bt&&!!y.clearcoatMap,nt=Bt&&!!y.clearcoatNormalMap,at=Bt&&!!y.clearcoatRoughnessMap,Et=se&&!!y.iridescenceMap,lt=se&&!!y.iridescenceThicknessMap,q=C&&!!y.sheenColorMap,D=C&&!!y.sheenRoughnessMap,tt=!!y.specularMap,vt=!!y.specularColorMap,dt=!!y.specularIntensityMap,gt=w&&!!y.transmissionMap,Nt=w&&!!y.thicknessMap,Wt=!!y.gradientMap,U=!!y.alphaMap,mt=y.alphaTest>0,j=!!y.alphaHash,rt=!!y.extensions,ft=!!N.attributes.uv1,kt=!!N.attributes.uv2,jt=!!N.attributes.uv3;let ne=Ei;return y.toneMapped&&(wt===null||wt.isXRRenderTarget===!0)&&(ne=r.toneMapping),{isWebGL2:u,shaderID:Q,shaderType:y.type,shaderName:y.name,vertexShader:ht,fragmentShader:ct,defines:y.defines,customVertexShaderID:_t,customFragmentShaderID:Rt,isRawShaderMaterial:y.isRawShaderMaterial===!0,glslVersion:y.glslVersion,precision:d,instancing:bt,instancingColor:bt&&I.instanceColor!==null,supportsVertexTextures:f,outputColorSpace:wt===null?r.outputColorSpace:wt.isXRRenderTarget===!0?wt.texture.colorSpace:Hn,map:Vt,matcap:Kt,envMap:Ct,envMapMode:Ct&&k.mapping,envMapCubeUVHeight:Y,aoMap:L,lightMap:ut,bumpMap:J,normalMap:ot,displacementMap:f&&et,emissiveMap:Tt,normalMapObjectSpace:ot&&y.normalMapType===_2,normalMapTangentSpace:ot&&y.normalMapType===k0,metalnessMap:xt,roughnessMap:Mt,anisotropy:Lt,anisotropyMap:W,clearcoat:Bt,clearcoatMap:st,clearcoatNormalMap:nt,clearcoatRoughnessMap:at,iridescence:se,iridescenceMap:Et,iridescenceThicknessMap:lt,sheen:C,sheenColorMap:q,sheenRoughnessMap:D,specularMap:tt,specularColorMap:vt,specularIntensityMap:dt,transmission:w,transmissionMap:gt,thicknessMap:Nt,gradientMap:Wt,opaque:y.transparent===!1&&y.blending===kr,alphaMap:U,alphaTest:mt,alphaHash:j,combine:y.combine,mapUv:Vt&&_(y.map.channel),aoMapUv:L&&_(y.aoMap.channel),lightMapUv:ut&&_(y.lightMap.channel),bumpMapUv:J&&_(y.bumpMap.channel),normalMapUv:ot&&_(y.normalMap.channel),displacementMapUv:et&&_(y.displacementMap.channel),emissiveMapUv:Tt&&_(y.emissiveMap.channel),metalnessMapUv:xt&&_(y.metalnessMap.channel),roughnessMapUv:Mt&&_(y.roughnessMap.channel),anisotropyMapUv:W&&_(y.anisotropyMap.channel),clearcoatMapUv:st&&_(y.clearcoatMap.channel),clearcoatNormalMapUv:nt&&_(y.clearcoatNormalMap.channel),clearcoatRoughnessMapUv:at&&_(y.clearcoatRoughnessMap.channel),iridescenceMapUv:Et&&_(y.iridescenceMap.channel),iridescenceThicknessMapUv:lt&&_(y.iridescenceThicknessMap.channel),sheenColorMapUv:q&&_(y.sheenColorMap.channel),sheenRoughnessMapUv:D&&_(y.sheenRoughnessMap.channel),specularMapUv:tt&&_(y.specularMap.channel),specularColorMapUv:vt&&_(y.specularColorMap.channel),specularIntensityMapUv:dt&&_(y.specularIntensityMap.channel),transmissionMapUv:gt&&_(y.transmissionMap.channel),thicknessMapUv:Nt&&_(y.thicknessMap.channel),alphaMapUv:U&&_(y.alphaMap.channel),vertexTangents:!!N.attributes.tangent&&(ot||Lt),vertexColors:y.vertexColors,vertexAlphas:y.vertexColors===!0&&!!N.attributes.color&&N.attributes.color.itemSize===4,vertexUv1s:ft,vertexUv2s:kt,vertexUv3s:jt,pointsUvs:I.isPoints===!0&&!!N.attributes.uv&&(Vt||U),fog:!!O,useFog:y.fog===!0,fogExp2:O&&O.isFogExp2,flatShading:y.flatShading===!0,sizeAttenuation:y.sizeAttenuation===!0,logarithmicDepthBuffer:h,skinning:I.isSkinnedMesh===!0,morphTargets:N.morphAttributes.position!==void 0,morphNormals:N.morphAttributes.normal!==void 0,morphColors:N.morphAttributes.color!==void 0,morphTargetsCount:B,morphTextureStride:V,numDirLights:b.directional.length,numPointLights:b.point.length,numSpotLights:b.spot.length,numSpotLightMaps:b.spotLightMap.length,numRectAreaLights:b.rectArea.length,numHemiLights:b.hemi.length,numDirLightShadows:b.directionalShadowMap.length,numPointLightShadows:b.pointShadowMap.length,numSpotLightShadows:b.spotShadowMap.length,numSpotLightShadowsWithMaps:b.numSpotLightShadowsWithMaps,numClippingPlanes:o.numPlanes,numClipIntersection:o.numIntersection,dithering:y.dithering,shadowMapEnabled:r.shadowMap.enabled&&F.length>0,shadowMapType:r.shadowMap.type,toneMapping:ne,useLegacyLights:r._useLegacyLights,decodeVideoTexture:Vt&&y.map.isVideoTexture===!0&&y.map.colorSpace===ae,premultipliedAlpha:y.premultipliedAlpha,doubleSided:y.side===fn,flipSided:y.side===ze,useDepthPacking:y.depthPacking>=0,depthPacking:y.depthPacking||0,index0AttributeName:y.index0AttributeName,extensionDerivatives:rt&&y.extensions.derivatives===!0,extensionFragDepth:rt&&y.extensions.fragDepth===!0,extensionDrawBuffers:rt&&y.extensions.drawBuffers===!0,extensionShaderTextureLOD:rt&&y.extensions.shaderTextureLOD===!0,rendererExtensionFragDepth:u||n.has("EXT_frag_depth"),rendererExtensionDrawBuffers:u||n.has("WEBGL_draw_buffers"),rendererExtensionShaderTextureLod:u||n.has("EXT_shader_texture_lod"),customProgramCacheKey:y.customProgramCacheKey()}}function p(y){const b=[];if(y.shaderID?b.push(y.shaderID):(b.push(y.customVertexShaderID),b.push(y.customFragmentShaderID)),y.defines!==void 0)for(const F in y.defines)b.push(F),b.push(y.defines[F]);return y.isRawShaderMaterial===!1&&(M(b,y),v(b,y),b.push(r.outputColorSpace)),b.push(y.customProgramCacheKey),b.join()}function M(y,b){y.push(b.precision),y.push(b.outputColorSpace),y.push(b.envMapMode),y.push(b.envMapCubeUVHeight),y.push(b.mapUv),y.push(b.alphaMapUv),y.push(b.lightMapUv),y.push(b.aoMapUv),y.push(b.bumpMapUv),y.push(b.normalMapUv),y.push(b.displacementMapUv),y.push(b.emissiveMapUv),y.push(b.metalnessMapUv),y.push(b.roughnessMapUv),y.push(b.anisotropyMapUv),y.push(b.clearcoatMapUv),y.push(b.clearcoatNormalMapUv),y.push(b.clearcoatRoughnessMapUv),y.push(b.iridescenceMapUv),y.push(b.iridescenceThicknessMapUv),y.push(b.sheenColorMapUv),y.push(b.sheenRoughnessMapUv),y.push(b.specularMapUv),y.push(b.specularColorMapUv),y.push(b.specularIntensityMapUv),y.push(b.transmissionMapUv),y.push(b.thicknessMapUv),y.push(b.combine),y.push(b.fogExp2),y.push(b.sizeAttenuation),y.push(b.morphTargetsCount),y.push(b.morphAttributeCount),y.push(b.numDirLights),y.push(b.numPointLights),y.push(b.numSpotLights),y.push(b.numSpotLightMaps),y.push(b.numHemiLights),y.push(b.numRectAreaLights),y.push(b.numDirLightShadows),y.push(b.numPointLightShadows),y.push(b.numSpotLightShadows),y.push(b.numSpotLightShadowsWithMaps),y.push(b.shadowMapType),y.push(b.toneMapping),y.push(b.numClippingPlanes),y.push(b.numClipIntersection),y.push(b.depthPacking)}function v(y,b){a.disableAll(),b.isWebGL2&&a.enable(0),b.supportsVertexTextures&&a.enable(1),b.instancing&&a.enable(2),b.instancingColor&&a.enable(3),b.matcap&&a.enable(4),b.envMap&&a.enable(5),b.normalMapObjectSpace&&a.enable(6),b.normalMapTangentSpace&&a.enable(7),b.clearcoat&&a.enable(8),b.iridescence&&a.enable(9),b.alphaTest&&a.enable(10),b.vertexColors&&a.enable(11),b.vertexAlphas&&a.enable(12),b.vertexUv1s&&a.enable(13),b.vertexUv2s&&a.enable(14),b.vertexUv3s&&a.enable(15),b.vertexTangents&&a.enable(16),b.anisotropy&&a.enable(17),y.push(a.mask),a.disableAll(),b.fog&&a.enable(0),b.useFog&&a.enable(1),b.flatShading&&a.enable(2),b.logarithmicDepthBuffer&&a.enable(3),b.skinning&&a.enable(4),b.morphTargets&&a.enable(5),b.morphNormals&&a.enable(6),b.morphColors&&a.enable(7),b.premultipliedAlpha&&a.enable(8),b.shadowMapEnabled&&a.enable(9),b.useLegacyLights&&a.enable(10),b.doubleSided&&a.enable(11),b.flipSided&&a.enable(12),b.useDepthPacking&&a.enable(13),b.dithering&&a.enable(14),b.transmission&&a.enable(15),b.sheen&&a.enable(16),b.opaque&&a.enable(17),b.pointsUvs&&a.enable(18),b.decodeVideoTexture&&a.enable(19),y.push(a.mask)}function x(y){const b=g[y.type];let F;if(b){const z=Fn[b];F=cu.clone(z.uniforms)}else F=y.uniforms;return F}function S(y,b){let F;for(let z=0,I=c.length;z<I;z++){const O=c[z];if(O.cacheKey===b){F=O,++F.usedTimes;break}}return F===void 0&&(F=new y9(r,b,y,s),c.push(F)),F}function T(y){if(--y.usedTimes===0){const b=c.indexOf(y);c[b]=c[c.length-1],c.pop(),y.destroy()}}function E(y){l.remove(y)}function A(){l.dispose()}return{getParameters:m,getProgramCacheKey:p,getUniforms:x,acquireProgram:S,releaseProgram:T,releaseShaderCache:E,programs:c,dispose:A}}function b9(){let r=new WeakMap;function t(s){let o=r.get(s);return o===void 0&&(o={},r.set(s,o)),o}function e(s){r.delete(s)}function n(s,o,a){r.get(s)[o]=a}function i(){r=new WeakMap}return{get:t,remove:e,update:n,dispose:i}}function w9(r,t){return r.groupOrder!==t.groupOrder?r.groupOrder-t.groupOrder:r.renderOrder!==t.renderOrder?r.renderOrder-t.renderOrder:r.material.id!==t.material.id?r.material.id-t.material.id:r.z!==t.z?r.z-t.z:r.id-t.id}function B1(r,t){return r.groupOrder!==t.groupOrder?r.groupOrder-t.groupOrder:r.renderOrder!==t.renderOrder?r.renderOrder-t.renderOrder:r.z!==t.z?t.z-r.z:r.id-t.id}function k1(){const r=[];let t=0;const e=[],n=[],i=[];function s(){t=0,e.length=0,n.length=0,i.length=0}function o(h,f,d,g,_,m){let p=r[t];return p===void 0?(p={id:h.id,object:h,geometry:f,material:d,groupOrder:g,renderOrder:h.renderOrder,z:_,group:m},r[t]=p):(p.id=h.id,p.object=h,p.geometry=f,p.material=d,p.groupOrder=g,p.renderOrder=h.renderOrder,p.z=_,p.group=m),t++,p}function a(h,f,d,g,_,m){const p=o(h,f,d,g,_,m);d.transmission>0?n.push(p):d.transparent===!0?i.push(p):e.push(p)}function l(h,f,d,g,_,m){const p=o(h,f,d,g,_,m);d.transmission>0?n.unshift(p):d.transparent===!0?i.unshift(p):e.unshift(p)}function c(h,f){e.length>1&&e.sort(h||w9),n.length>1&&n.sort(f||B1),i.length>1&&i.sort(f||B1)}function u(){for(let h=t,f=r.length;h<f;h++){const d=r[h];if(d.id===null)break;d.id=null,d.object=null,d.geometry=null,d.material=null,d.group=null}}return{opaque:e,transmissive:n,transparent:i,init:s,push:a,unshift:l,finish:u,sort:c}}function A9(){let r=new WeakMap;function t(n,i){const s=r.get(n);let o;return s===void 0?(o=new k1,r.set(n,[o])):i>=s.length?(o=new k1,s.push(o)):o=s[i],o}function e(){r=new WeakMap}return{get:t,dispose:e}}function R9(){const r={};return{get:function(t){if(r[t.id]!==void 0)return r[t.id];let e;switch(t.type){case"DirectionalLight":e={direction:new P,color:new qt};break;case"SpotLight":e={position:new P,direction:new P,color:new qt,distance:0,coneCos:0,penumbraCos:0,decay:0};break;case"PointLight":e={position:new P,color:new qt,distance:0,decay:0};break;case"HemisphereLight":e={direction:new P,skyColor:new qt,groundColor:new qt};break;case"RectAreaLight":e={color:new qt,position:new P,halfWidth:new P,halfHeight:new P};break}return r[t.id]=e,e}}}function C9(){const r={};return{get:function(t){if(r[t.id]!==void 0)return r[t.id];let e;switch(t.type){case"DirectionalLight":e={shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new it};break;case"SpotLight":e={shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new it};break;case"PointLight":e={shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new it,shadowCameraNear:1,shadowCameraFar:1e3};break}return r[t.id]=e,e}}}let P9=0;function L9(r,t){return(t.castShadow?2:0)-(r.castShadow?2:0)+(t.map?1:0)-(r.map?1:0)}function D9(r,t){const e=new R9,n=C9(),i={version:0,hash:{directionalLength:-1,pointLength:-1,spotLength:-1,rectAreaLength:-1,hemiLength:-1,numDirectionalShadows:-1,numPointShadows:-1,numSpotShadows:-1,numSpotMaps:-1},ambient:[0,0,0],probe:[],directional:[],directionalShadow:[],directionalShadowMap:[],directionalShadowMatrix:[],spot:[],spotLightMap:[],spotShadow:[],spotShadowMap:[],spotLightMatrix:[],rectArea:[],rectAreaLTC1:null,rectAreaLTC2:null,point:[],pointShadow:[],pointShadowMap:[],pointShadowMatrix:[],hemi:[],numSpotLightShadowsWithMaps:0};for(let u=0;u<9;u++)i.probe.push(new P);const s=new P,o=new ge,a=new ge;function l(u,h){let f=0,d=0,g=0;for(let F=0;F<9;F++)i.probe[F].set(0,0,0);let _=0,m=0,p=0,M=0,v=0,x=0,S=0,T=0,E=0,A=0;u.sort(L9);const y=h===!0?Math.PI:1;for(let F=0,z=u.length;F<z;F++){const I=u[F],O=I.color,N=I.intensity,X=I.distance,k=I.shadow&&I.shadow.map?I.shadow.map.texture:null;if(I.isAmbientLight)f+=O.r*N*y,d+=O.g*N*y,g+=O.b*N*y;else if(I.isLightProbe)for(let Y=0;Y<9;Y++)i.probe[Y].addScaledVector(I.sh.coefficients[Y],N);else if(I.isDirectionalLight){const Y=e.get(I);if(Y.color.copy(I.color).multiplyScalar(I.intensity*y),I.castShadow){const Q=I.shadow,$=n.get(I);$.shadowBias=Q.bias,$.shadowNormalBias=Q.normalBias,$.shadowRadius=Q.radius,$.shadowMapSize=Q.mapSize,i.directionalShadow[_]=$,i.directionalShadowMap[_]=k,i.directionalShadowMatrix[_]=I.shadow.matrix,x++}i.directional[_]=Y,_++}else if(I.isSpotLight){const Y=e.get(I);Y.position.setFromMatrixPosition(I.matrixWorld),Y.color.copy(O).multiplyScalar(N*y),Y.distance=X,Y.coneCos=Math.cos(I.angle),Y.penumbraCos=Math.cos(I.angle*(1-I.penumbra)),Y.decay=I.decay,i.spot[p]=Y;const Q=I.shadow;if(I.map&&(i.spotLightMap[E]=I.map,E++,Q.updateMatrices(I),I.castShadow&&A++),i.spotLightMatrix[p]=Q.matrix,I.castShadow){const $=n.get(I);$.shadowBias=Q.bias,$.shadowNormalBias=Q.normalBias,$.shadowRadius=Q.radius,$.shadowMapSize=Q.mapSize,i.spotShadow[p]=$,i.spotShadowMap[p]=k,T++}p++}else if(I.isRectAreaLight){const Y=e.get(I);Y.color.copy(O).multiplyScalar(N),Y.halfWidth.set(I.width*.5,0,0),Y.halfHeight.set(0,I.height*.5,0),i.rectArea[M]=Y,M++}else if(I.isPointLight){const Y=e.get(I);if(Y.color.copy(I.color).multiplyScalar(I.intensity*y),Y.distance=I.distance,Y.decay=I.decay,I.castShadow){const Q=I.shadow,$=n.get(I);$.shadowBias=Q.bias,$.shadowNormalBias=Q.normalBias,$.shadowRadius=Q.radius,$.shadowMapSize=Q.mapSize,$.shadowCameraNear=Q.camera.near,$.shadowCameraFar=Q.camera.far,i.pointShadow[m]=$,i.pointShadowMap[m]=k,i.pointShadowMatrix[m]=I.shadow.matrix,S++}i.point[m]=Y,m++}else if(I.isHemisphereLight){const Y=e.get(I);Y.skyColor.copy(I.color).multiplyScalar(N*y),Y.groundColor.copy(I.groundColor).multiplyScalar(N*y),i.hemi[v]=Y,v++}}M>0&&(t.isWebGL2||r.has("OES_texture_float_linear")===!0?(i.rectAreaLTC1=pt.LTC_FLOAT_1,i.rectAreaLTC2=pt.LTC_FLOAT_2):r.has("OES_texture_half_float_linear")===!0?(i.rectAreaLTC1=pt.LTC_HALF_1,i.rectAreaLTC2=pt.LTC_HALF_2):console.error("THREE.WebGLRenderer: Unable to use RectAreaLight. Missing WebGL extensions.")),i.ambient[0]=f,i.ambient[1]=d,i.ambient[2]=g;const b=i.hash;(b.directionalLength!==_||b.pointLength!==m||b.spotLength!==p||b.rectAreaLength!==M||b.hemiLength!==v||b.numDirectionalShadows!==x||b.numPointShadows!==S||b.numSpotShadows!==T||b.numSpotMaps!==E)&&(i.directional.length=_,i.spot.length=p,i.rectArea.length=M,i.point.length=m,i.hemi.length=v,i.directionalShadow.length=x,i.directionalShadowMap.length=x,i.pointShadow.length=S,i.pointShadowMap.length=S,i.spotShadow.length=T,i.spotShadowMap.length=T,i.directionalShadowMatrix.length=x,i.pointShadowMatrix.length=S,i.spotLightMatrix.length=T+E-A,i.spotLightMap.length=E,i.numSpotLightShadowsWithMaps=A,b.directionalLength=_,b.pointLength=m,b.spotLength=p,b.rectAreaLength=M,b.hemiLength=v,b.numDirectionalShadows=x,b.numPointShadows=S,b.numSpotShadows=T,b.numSpotMaps=E,i.version=P9++)}function c(u,h){let f=0,d=0,g=0,_=0,m=0;const p=h.matrixWorldInverse;for(let M=0,v=u.length;M<v;M++){const x=u[M];if(x.isDirectionalLight){const S=i.directional[f];S.direction.setFromMatrixPosition(x.matrixWorld),s.setFromMatrixPosition(x.target.matrixWorld),S.direction.sub(s),S.direction.transformDirection(p),f++}else if(x.isSpotLight){const S=i.spot[g];S.position.setFromMatrixPosition(x.matrixWorld),S.position.applyMatrix4(p),S.direction.setFromMatrixPosition(x.matrixWorld),s.setFromMatrixPosition(x.target.matrixWorld),S.direction.sub(s),S.direction.transformDirection(p),g++}else if(x.isRectAreaLight){const S=i.rectArea[_];S.position.setFromMatrixPosition(x.matrixWorld),S.position.applyMatrix4(p),a.identity(),o.copy(x.matrixWorld),o.premultiply(p),a.extractRotation(o),S.halfWidth.set(x.width*.5,0,0),S.halfHeight.set(0,x.height*.5,0),S.halfWidth.applyMatrix4(a),S.halfHeight.applyMatrix4(a),_++}else if(x.isPointLight){const S=i.point[d];S.position.setFromMatrixPosition(x.matrixWorld),S.position.applyMatrix4(p),d++}else if(x.isHemisphereLight){const S=i.hemi[m];S.direction.setFromMatrixPosition(x.matrixWorld),S.direction.transformDirection(p),m++}}}return{setup:l,setupView:c,state:i}}function G1(r,t){const e=new D9(r,t),n=[],i=[];function s(){n.length=0,i.length=0}function o(h){n.push(h)}function a(h){i.push(h)}function l(h){e.setup(n,h)}function c(h){e.setupView(n,h)}return{init:s,state:{lightsArray:n,shadowsArray:i,lights:e},setupLights:l,setupLightsView:c,pushLight:o,pushShadow:a}}function U9(r,t){let e=new WeakMap;function n(s,o=0){const a=e.get(s);let l;return a===void 0?(l=new G1(r,t),e.set(s,[l])):o>=a.length?(l=new G1(r,t),a.push(l)):l=a[o],l}function i(){e=new WeakMap}return{get:n,dispose:i}}class I9 extends lr{constructor(t){super(),this.isMeshDepthMaterial=!0,this.type="MeshDepthMaterial",this.depthPacking=p2,this.map=null,this.alphaMap=null,this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.wireframe=!1,this.wireframeLinewidth=1,this.setValues(t)}copy(t){return super.copy(t),this.depthPacking=t.depthPacking,this.map=t.map,this.alphaMap=t.alphaMap,this.displacementMap=t.displacementMap,this.displacementScale=t.displacementScale,this.displacementBias=t.displacementBias,this.wireframe=t.wireframe,this.wireframeLinewidth=t.wireframeLinewidth,this}}class O9 extends lr{constructor(t){super(),this.isMeshDistanceMaterial=!0,this.type="MeshDistanceMaterial",this.map=null,this.alphaMap=null,this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.setValues(t)}copy(t){return super.copy(t),this.map=t.map,this.alphaMap=t.alphaMap,this.displacementMap=t.displacementMap,this.displacementScale=t.displacementScale,this.displacementBias=t.displacementBias,this}}const N9=`void main() {
	gl_Position = vec4( position, 1.0 );
}`,F9=`uniform sampler2D shadow_pass;
uniform vec2 resolution;
uniform float radius;
#include <packing>
void main() {
	const float samples = float( VSM_SAMPLES );
	float mean = 0.0;
	float squared_mean = 0.0;
	float uvStride = samples <= 1.0 ? 0.0 : 2.0 / ( samples - 1.0 );
	float uvStart = samples <= 1.0 ? 0.0 : - 1.0;
	for ( float i = 0.0; i < samples; i ++ ) {
		float uvOffset = uvStart + i * uvStride;
		#ifdef HORIZONTAL_PASS
			vec2 distribution = unpackRGBATo2Half( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( uvOffset, 0.0 ) * radius ) / resolution ) );
			mean += distribution.x;
			squared_mean += distribution.y * distribution.y + distribution.x * distribution.x;
		#else
			float depth = unpackRGBAToDepth( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( 0.0, uvOffset ) * radius ) / resolution ) );
			mean += depth;
			squared_mean += depth * depth;
		#endif
	}
	mean = mean / samples;
	squared_mean = squared_mean / samples;
	float std_dev = sqrt( squared_mean - mean * mean );
	gl_FragColor = pack2HalfToRGBA( vec2( mean, std_dev ) );
}`;function z9(r,t,e){let n=new V0;const i=new it,s=new it,o=new Ue,a=new I9({depthPacking:m2}),l=new O9,c={},u=e.maxTextureSize,h={[wn]:ze,[ze]:wn,[fn]:fn},f=new oi({defines:{VSM_SAMPLES:8},uniforms:{shadow_pass:{value:null},resolution:{value:new it},radius:{value:4}},vertexShader:N9,fragmentShader:F9}),d=f.clone();d.defines.HORIZONTAL_PASS=1;const g=new Ae;g.setAttribute("position",new oe(new Float32Array([-1,-1,.5,3,-1,.5,-1,3,.5]),3));const _=new me(g,f),m=this;this.enabled=!1,this.autoUpdate=!0,this.needsUpdate=!1,this.type=Rl;let p=this.type;this.render=function(S,T,E){if(m.enabled===!1||m.autoUpdate===!1&&m.needsUpdate===!1||S.length===0)return;const A=r.getRenderTarget(),y=r.getActiveCubeFace(),b=r.getActiveMipmapLevel(),F=r.state;F.setBlending(Si),F.buffers.color.setClear(1,1,1,1),F.buffers.depth.setTest(!0),F.setScissorTest(!1);const z=p!==ei&&this.type===ei,I=p===ei&&this.type!==ei;for(let O=0,N=S.length;O<N;O++){const X=S[O],k=X.shadow;if(k===void 0){console.warn("THREE.WebGLShadowMap:",X,"has no shadow.");continue}if(k.autoUpdate===!1&&k.needsUpdate===!1)continue;i.copy(k.mapSize);const Y=k.getFrameExtents();if(i.multiply(Y),s.copy(k.mapSize),(i.x>u||i.y>u)&&(i.x>u&&(s.x=Math.floor(u/Y.x),i.x=s.x*Y.x,k.mapSize.x=s.x),i.y>u&&(s.y=Math.floor(u/Y.y),i.y=s.y*Y.y,k.mapSize.y=s.y)),k.map===null||z===!0||I===!0){const $=this.type!==ei?{minFilter:Ze,magFilter:Ze}:{};k.map!==null&&k.map.dispose(),k.map=new tr(i.x,i.y,$),k.map.texture.name=X.name+".shadowMap",k.camera.updateProjectionMatrix()}r.setRenderTarget(k.map),r.clear();const Q=k.getViewportCount();for(let $=0;$<Q;$++){const B=k.getViewport($);o.set(s.x*B.x,s.y*B.y,s.x*B.z,s.y*B.w),F.viewport(o),k.updateMatrices(X,$),n=k.getFrustum(),x(T,E,k.camera,X,this.type)}k.isPointLightShadow!==!0&&this.type===ei&&M(k,E),k.needsUpdate=!1}p=this.type,m.needsUpdate=!1,r.setRenderTarget(A,y,b)};function M(S,T){const E=t.update(_);f.defines.VSM_SAMPLES!==S.blurSamples&&(f.defines.VSM_SAMPLES=S.blurSamples,d.defines.VSM_SAMPLES=S.blurSamples,f.needsUpdate=!0,d.needsUpdate=!0),S.mapPass===null&&(S.mapPass=new tr(i.x,i.y)),f.uniforms.shadow_pass.value=S.map.texture,f.uniforms.resolution.value=S.mapSize,f.uniforms.radius.value=S.radius,r.setRenderTarget(S.mapPass),r.clear(),r.renderBufferDirect(T,null,E,f,_,null),d.uniforms.shadow_pass.value=S.mapPass.texture,d.uniforms.resolution.value=S.mapSize,d.uniforms.radius.value=S.radius,r.setRenderTarget(S.map),r.clear(),r.renderBufferDirect(T,null,E,d,_,null)}function v(S,T,E,A){let y=null;const b=E.isPointLight===!0?S.customDistanceMaterial:S.customDepthMaterial;if(b!==void 0)y=b;else if(y=E.isPointLight===!0?l:a,r.localClippingEnabled&&T.clipShadows===!0&&Array.isArray(T.clippingPlanes)&&T.clippingPlanes.length!==0||T.displacementMap&&T.displacementScale!==0||T.alphaMap&&T.alphaTest>0||T.map&&T.alphaTest>0){const F=y.uuid,z=T.uuid;let I=c[F];I===void 0&&(I={},c[F]=I);let O=I[z];O===void 0&&(O=y.clone(),I[z]=O),y=O}if(y.visible=T.visible,y.wireframe=T.wireframe,A===ei?y.side=T.shadowSide!==null?T.shadowSide:T.side:y.side=T.shadowSide!==null?T.shadowSide:h[T.side],y.alphaMap=T.alphaMap,y.alphaTest=T.alphaTest,y.map=T.map,y.clipShadows=T.clipShadows,y.clippingPlanes=T.clippingPlanes,y.clipIntersection=T.clipIntersection,y.displacementMap=T.displacementMap,y.displacementScale=T.displacementScale,y.displacementBias=T.displacementBias,y.wireframeLinewidth=T.wireframeLinewidth,y.linewidth=T.linewidth,E.isPointLight===!0&&y.isMeshDistanceMaterial===!0){const F=r.properties.get(y);F.light=E}return y}function x(S,T,E,A,y){if(S.visible===!1)return;if(S.layers.test(T.layers)&&(S.isMesh||S.isLine||S.isPoints)&&(S.castShadow||S.receiveShadow&&y===ei)&&(!S.frustumCulled||n.intersectsObject(S))){S.modelViewMatrix.multiplyMatrices(E.matrixWorldInverse,S.matrixWorld);const z=t.update(S),I=S.material;if(Array.isArray(I)){const O=z.groups;for(let N=0,X=O.length;N<X;N++){const k=O[N],Y=I[k.materialIndex];if(Y&&Y.visible){const Q=v(S,Y,A,y);r.renderBufferDirect(E,null,z,Q,S,k)}}}else if(I.visible){const O=v(S,I,A,y);r.renderBufferDirect(E,null,z,O,S,null)}}const F=S.children;for(let z=0,I=F.length;z<I;z++)x(F[z],T,E,A,y)}}function B9(r,t,e){const n=e.isWebGL2;function i(){let U=!1;const mt=new Ue;let j=null;const rt=new Ue(0,0,0,0);return{setMask:function(ft){j!==ft&&!U&&(r.colorMask(ft,ft,ft,ft),j=ft)},setLocked:function(ft){U=ft},setClear:function(ft,kt,jt,ne,on){on===!0&&(ft*=ne,kt*=ne,jt*=ne),mt.set(ft,kt,jt,ne),rt.equals(mt)===!1&&(r.clearColor(ft,kt,jt,ne),rt.copy(mt))},reset:function(){U=!1,j=null,rt.set(-1,0,0,0)}}}function s(){let U=!1,mt=null,j=null,rt=null;return{setTest:function(ft){ft?wt(r.DEPTH_TEST):bt(r.DEPTH_TEST)},setMask:function(ft){mt!==ft&&!U&&(r.depthMask(ft),mt=ft)},setFunc:function(ft){if(j!==ft){switch(ft){case W6:r.depthFunc(r.NEVER);break;case X6:r.depthFunc(r.ALWAYS);break;case q6:r.depthFunc(r.LESS);break;case l0:r.depthFunc(r.LEQUAL);break;case Y6:r.depthFunc(r.EQUAL);break;case j6:r.depthFunc(r.GEQUAL);break;case Z6:r.depthFunc(r.GREATER);break;case K6:r.depthFunc(r.NOTEQUAL);break;default:r.depthFunc(r.LEQUAL)}j=ft}},setLocked:function(ft){U=ft},setClear:function(ft){rt!==ft&&(r.clearDepth(ft),rt=ft)},reset:function(){U=!1,mt=null,j=null,rt=null}}}function o(){let U=!1,mt=null,j=null,rt=null,ft=null,kt=null,jt=null,ne=null,on=null;return{setTest:function(ie){U||(ie?wt(r.STENCIL_TEST):bt(r.STENCIL_TEST))},setMask:function(ie){mt!==ie&&!U&&(r.stencilMask(ie),mt=ie)},setFunc:function(ie,Nn,Xe){(j!==ie||rt!==Nn||ft!==Xe)&&(r.stencilFunc(ie,Nn,Xe),j=ie,rt=Nn,ft=Xe)},setOp:function(ie,Nn,Xe){(kt!==ie||jt!==Nn||ne!==Xe)&&(r.stencilOp(ie,Nn,Xe),kt=ie,jt=Nn,ne=Xe)},setLocked:function(ie){U=ie},setClear:function(ie){on!==ie&&(r.clearStencil(ie),on=ie)},reset:function(){U=!1,mt=null,j=null,rt=null,ft=null,kt=null,jt=null,ne=null,on=null}}}const a=new i,l=new s,c=new o,u=new WeakMap,h=new WeakMap;let f={},d={},g=new WeakMap,_=[],m=null,p=!1,M=null,v=null,x=null,S=null,T=null,E=null,A=null,y=!1,b=null,F=null,z=null,I=null,O=null;const N=r.getParameter(r.MAX_COMBINED_TEXTURE_IMAGE_UNITS);let X=!1,k=0;const Y=r.getParameter(r.VERSION);Y.indexOf("WebGL")!==-1?(k=parseFloat(/^WebGL (\d)/.exec(Y)[1]),X=k>=1):Y.indexOf("OpenGL ES")!==-1&&(k=parseFloat(/^OpenGL ES (\d)/.exec(Y)[1]),X=k>=2);let Q=null,$={};const B=r.getParameter(r.SCISSOR_BOX),V=r.getParameter(r.VIEWPORT),ht=new Ue().fromArray(B),ct=new Ue().fromArray(V);function _t(U,mt,j,rt){const ft=new Uint8Array(4),kt=r.createTexture();r.bindTexture(U,kt),r.texParameteri(U,r.TEXTURE_MIN_FILTER,r.NEAREST),r.texParameteri(U,r.TEXTURE_MAG_FILTER,r.NEAREST);for(let jt=0;jt<j;jt++)n&&(U===r.TEXTURE_3D||U===r.TEXTURE_2D_ARRAY)?r.texImage3D(mt,0,r.RGBA,1,1,rt,0,r.RGBA,r.UNSIGNED_BYTE,ft):r.texImage2D(mt+jt,0,r.RGBA,1,1,0,r.RGBA,r.UNSIGNED_BYTE,ft);return kt}const Rt={};Rt[r.TEXTURE_2D]=_t(r.TEXTURE_2D,r.TEXTURE_2D,1),Rt[r.TEXTURE_CUBE_MAP]=_t(r.TEXTURE_CUBE_MAP,r.TEXTURE_CUBE_MAP_POSITIVE_X,6),n&&(Rt[r.TEXTURE_2D_ARRAY]=_t(r.TEXTURE_2D_ARRAY,r.TEXTURE_2D_ARRAY,1,1),Rt[r.TEXTURE_3D]=_t(r.TEXTURE_3D,r.TEXTURE_3D,1,1)),a.setClear(0,0,0,1),l.setClear(1),c.setClear(0),wt(r.DEPTH_TEST),l.setFunc(l0),et(!1),Tt(b3),wt(r.CULL_FACE),J(Si);function wt(U){f[U]!==!0&&(r.enable(U),f[U]=!0)}function bt(U){f[U]!==!1&&(r.disable(U),f[U]=!1)}function Vt(U,mt){return d[U]!==mt?(r.bindFramebuffer(U,mt),d[U]=mt,n&&(U===r.DRAW_FRAMEBUFFER&&(d[r.FRAMEBUFFER]=mt),U===r.FRAMEBUFFER&&(d[r.DRAW_FRAMEBUFFER]=mt)),!0):!1}function Kt(U,mt){let j=_,rt=!1;if(U)if(j=g.get(mt),j===void 0&&(j=[],g.set(mt,j)),U.isWebGLMultipleRenderTargets){const ft=U.texture;if(j.length!==ft.length||j[0]!==r.COLOR_ATTACHMENT0){for(let kt=0,jt=ft.length;kt<jt;kt++)j[kt]=r.COLOR_ATTACHMENT0+kt;j.length=ft.length,rt=!0}}else j[0]!==r.COLOR_ATTACHMENT0&&(j[0]=r.COLOR_ATTACHMENT0,rt=!0);else j[0]!==r.BACK&&(j[0]=r.BACK,rt=!0);rt&&(e.isWebGL2?r.drawBuffers(j):t.get("WEBGL_draw_buffers").drawBuffersWEBGL(j))}function Ct(U){return m!==U?(r.useProgram(U),m=U,!0):!1}const L={[Ur]:r.FUNC_ADD,[U6]:r.FUNC_SUBTRACT,[I6]:r.FUNC_REVERSE_SUBTRACT};if(n)L[C3]=r.MIN,L[P3]=r.MAX;else{const U=t.get("EXT_blend_minmax");U!==null&&(L[C3]=U.MIN_EXT,L[P3]=U.MAX_EXT)}const ut={[O6]:r.ZERO,[N6]:r.ONE,[F6]:r.SRC_COLOR,[Cl]:r.SRC_ALPHA,[V6]:r.SRC_ALPHA_SATURATE,[G6]:r.DST_COLOR,[B6]:r.DST_ALPHA,[z6]:r.ONE_MINUS_SRC_COLOR,[Pl]:r.ONE_MINUS_SRC_ALPHA,[H6]:r.ONE_MINUS_DST_COLOR,[k6]:r.ONE_MINUS_DST_ALPHA};function J(U,mt,j,rt,ft,kt,jt,ne){if(U===Si){p===!0&&(bt(r.BLEND),p=!1);return}if(p===!1&&(wt(r.BLEND),p=!0),U!==D6){if(U!==M||ne!==y){if((v!==Ur||T!==Ur)&&(r.blendEquation(r.FUNC_ADD),v=Ur,T=Ur),ne)switch(U){case kr:r.blendFuncSeparate(r.ONE,r.ONE_MINUS_SRC_ALPHA,r.ONE,r.ONE_MINUS_SRC_ALPHA);break;case w3:r.blendFunc(r.ONE,r.ONE);break;case A3:r.blendFuncSeparate(r.ZERO,r.ONE_MINUS_SRC_COLOR,r.ZERO,r.ONE);break;case R3:r.blendFuncSeparate(r.ZERO,r.SRC_COLOR,r.ZERO,r.SRC_ALPHA);break;default:console.error("THREE.WebGLState: Invalid blending: ",U);break}else switch(U){case kr:r.blendFuncSeparate(r.SRC_ALPHA,r.ONE_MINUS_SRC_ALPHA,r.ONE,r.ONE_MINUS_SRC_ALPHA);break;case w3:r.blendFunc(r.SRC_ALPHA,r.ONE);break;case A3:r.blendFuncSeparate(r.ZERO,r.ONE_MINUS_SRC_COLOR,r.ZERO,r.ONE);break;case R3:r.blendFunc(r.ZERO,r.SRC_COLOR);break;default:console.error("THREE.WebGLState: Invalid blending: ",U);break}x=null,S=null,E=null,A=null,M=U,y=ne}return}ft=ft||mt,kt=kt||j,jt=jt||rt,(mt!==v||ft!==T)&&(r.blendEquationSeparate(L[mt],L[ft]),v=mt,T=ft),(j!==x||rt!==S||kt!==E||jt!==A)&&(r.blendFuncSeparate(ut[j],ut[rt],ut[kt],ut[jt]),x=j,S=rt,E=kt,A=jt),M=U,y=!1}function ot(U,mt){U.side===fn?bt(r.CULL_FACE):wt(r.CULL_FACE);let j=U.side===ze;mt&&(j=!j),et(j),U.blending===kr&&U.transparent===!1?J(Si):J(U.blending,U.blendEquation,U.blendSrc,U.blendDst,U.blendEquationAlpha,U.blendSrcAlpha,U.blendDstAlpha,U.premultipliedAlpha),l.setFunc(U.depthFunc),l.setTest(U.depthTest),l.setMask(U.depthWrite),a.setMask(U.colorWrite);const rt=U.stencilWrite;c.setTest(rt),rt&&(c.setMask(U.stencilWriteMask),c.setFunc(U.stencilFunc,U.stencilRef,U.stencilFuncMask),c.setOp(U.stencilFail,U.stencilZFail,U.stencilZPass)),Mt(U.polygonOffset,U.polygonOffsetFactor,U.polygonOffsetUnits),U.alphaToCoverage===!0?wt(r.SAMPLE_ALPHA_TO_COVERAGE):bt(r.SAMPLE_ALPHA_TO_COVERAGE)}function et(U){b!==U&&(U?r.frontFace(r.CW):r.frontFace(r.CCW),b=U)}function Tt(U){U!==C6?(wt(r.CULL_FACE),U!==F&&(U===b3?r.cullFace(r.BACK):U===P6?r.cullFace(r.FRONT):r.cullFace(r.FRONT_AND_BACK))):bt(r.CULL_FACE),F=U}function xt(U){U!==z&&(X&&r.lineWidth(U),z=U)}function Mt(U,mt,j){U?(wt(r.POLYGON_OFFSET_FILL),(I!==mt||O!==j)&&(r.polygonOffset(mt,j),I=mt,O=j)):bt(r.POLYGON_OFFSET_FILL)}function Lt(U){U?wt(r.SCISSOR_TEST):bt(r.SCISSOR_TEST)}function Bt(U){U===void 0&&(U=r.TEXTURE0+N-1),Q!==U&&(r.activeTexture(U),Q=U)}function se(U,mt,j){j===void 0&&(Q===null?j=r.TEXTURE0+N-1:j=Q);let rt=$[j];rt===void 0&&(rt={type:void 0,texture:void 0},$[j]=rt),(rt.type!==U||rt.texture!==mt)&&(Q!==j&&(r.activeTexture(j),Q=j),r.bindTexture(U,mt||Rt[U]),rt.type=U,rt.texture=mt)}function C(){const U=$[Q];U!==void 0&&U.type!==void 0&&(r.bindTexture(U.type,null),U.type=void 0,U.texture=void 0)}function w(){try{r.compressedTexImage2D.apply(r,arguments)}catch(U){console.error("THREE.WebGLState:",U)}}function W(){try{r.compressedTexImage3D.apply(r,arguments)}catch(U){console.error("THREE.WebGLState:",U)}}function st(){try{r.texSubImage2D.apply(r,arguments)}catch(U){console.error("THREE.WebGLState:",U)}}function nt(){try{r.texSubImage3D.apply(r,arguments)}catch(U){console.error("THREE.WebGLState:",U)}}function at(){try{r.compressedTexSubImage2D.apply(r,arguments)}catch(U){console.error("THREE.WebGLState:",U)}}function Et(){try{r.compressedTexSubImage3D.apply(r,arguments)}catch(U){console.error("THREE.WebGLState:",U)}}function lt(){try{r.texStorage2D.apply(r,arguments)}catch(U){console.error("THREE.WebGLState:",U)}}function q(){try{r.texStorage3D.apply(r,arguments)}catch(U){console.error("THREE.WebGLState:",U)}}function D(){try{r.texImage2D.apply(r,arguments)}catch(U){console.error("THREE.WebGLState:",U)}}function tt(){try{r.texImage3D.apply(r,arguments)}catch(U){console.error("THREE.WebGLState:",U)}}function vt(U){ht.equals(U)===!1&&(r.scissor(U.x,U.y,U.z,U.w),ht.copy(U))}function dt(U){ct.equals(U)===!1&&(r.viewport(U.x,U.y,U.z,U.w),ct.copy(U))}function gt(U,mt){let j=h.get(mt);j===void 0&&(j=new WeakMap,h.set(mt,j));let rt=j.get(U);rt===void 0&&(rt=r.getUniformBlockIndex(mt,U.name),j.set(U,rt))}function Nt(U,mt){const rt=h.get(mt).get(U);u.get(mt)!==rt&&(r.uniformBlockBinding(mt,rt,U.__bindingPointIndex),u.set(mt,rt))}function Wt(){r.disable(r.BLEND),r.disable(r.CULL_FACE),r.disable(r.DEPTH_TEST),r.disable(r.POLYGON_OFFSET_FILL),r.disable(r.SCISSOR_TEST),r.disable(r.STENCIL_TEST),r.disable(r.SAMPLE_ALPHA_TO_COVERAGE),r.blendEquation(r.FUNC_ADD),r.blendFunc(r.ONE,r.ZERO),r.blendFuncSeparate(r.ONE,r.ZERO,r.ONE,r.ZERO),r.colorMask(!0,!0,!0,!0),r.clearColor(0,0,0,0),r.depthMask(!0),r.depthFunc(r.LESS),r.clearDepth(1),r.stencilMask(4294967295),r.stencilFunc(r.ALWAYS,0,4294967295),r.stencilOp(r.KEEP,r.KEEP,r.KEEP),r.clearStencil(0),r.cullFace(r.BACK),r.frontFace(r.CCW),r.polygonOffset(0,0),r.activeTexture(r.TEXTURE0),r.bindFramebuffer(r.FRAMEBUFFER,null),n===!0&&(r.bindFramebuffer(r.DRAW_FRAMEBUFFER,null),r.bindFramebuffer(r.READ_FRAMEBUFFER,null)),r.useProgram(null),r.lineWidth(1),r.scissor(0,0,r.canvas.width,r.canvas.height),r.viewport(0,0,r.canvas.width,r.canvas.height),f={},Q=null,$={},d={},g=new WeakMap,_=[],m=null,p=!1,M=null,v=null,x=null,S=null,T=null,E=null,A=null,y=!1,b=null,F=null,z=null,I=null,O=null,ht.set(0,0,r.canvas.width,r.canvas.height),ct.set(0,0,r.canvas.width,r.canvas.height),a.reset(),l.reset(),c.reset()}return{buffers:{color:a,depth:l,stencil:c},enable:wt,disable:bt,bindFramebuffer:Vt,drawBuffers:Kt,useProgram:Ct,setBlending:J,setMaterial:ot,setFlipSided:et,setCullFace:Tt,setLineWidth:xt,setPolygonOffset:Mt,setScissorTest:Lt,activeTexture:Bt,bindTexture:se,unbindTexture:C,compressedTexImage2D:w,compressedTexImage3D:W,texImage2D:D,texImage3D:tt,updateUBOMapping:gt,uniformBlockBinding:Nt,texStorage2D:lt,texStorage3D:q,texSubImage2D:st,texSubImage3D:nt,compressedTexSubImage2D:at,compressedTexSubImage3D:Et,scissor:vt,viewport:dt,reset:Wt}}function k9(r,t,e,n,i,s,o){const a=i.isWebGL2,l=i.maxTextures,c=i.maxCubemapSize,u=i.maxTextureSize,h=i.maxSamples,f=t.has("WEBGL_multisampled_render_to_texture")?t.get("WEBGL_multisampled_render_to_texture"):null,d=typeof navigator>"u"?!1:/OculusBrowser/g.test(navigator.userAgent),g=new WeakMap;let _;const m=new WeakMap;let p=!1;try{p=typeof OffscreenCanvas<"u"&&new OffscreenCanvas(1,1).getContext("2d")!==null}catch{}function M(C,w){return p?new OffscreenCanvas(C,w):Ls("canvas")}function v(C,w,W,st){let nt=1;if((C.width>st||C.height>st)&&(nt=st/Math.max(C.width,C.height)),nt<1||w===!0)if(typeof HTMLImageElement<"u"&&C instanceof HTMLImageElement||typeof HTMLCanvasElement<"u"&&C instanceof HTMLCanvasElement||typeof ImageBitmap<"u"&&C instanceof ImageBitmap){const at=w?Fo:Math.floor,Et=at(nt*C.width),lt=at(nt*C.height);_===void 0&&(_=M(Et,lt));const q=W?M(Et,lt):_;return q.width=Et,q.height=lt,q.getContext("2d").drawImage(C,0,0,Et,lt),console.warn("THREE.WebGLRenderer: Texture has been resized from ("+C.width+"x"+C.height+") to ("+Et+"x"+lt+")."),q}else return"data"in C&&console.warn("THREE.WebGLRenderer: Image in DataTexture is too big ("+C.width+"x"+C.height+")."),C;return C}function x(C){return p0(C.width)&&p0(C.height)}function S(C){return a?!1:C.wrapS!==Un||C.wrapT!==Un||C.minFilter!==Ze&&C.minFilter!==yn}function T(C,w){return C.generateMipmaps&&w&&C.minFilter!==Ze&&C.minFilter!==yn}function E(C){r.generateMipmap(C)}function A(C,w,W,st,nt=!1){if(a===!1)return w;if(C!==null){if(r[C]!==void 0)return r[C];console.warn("THREE.WebGLRenderer: Attempt to use non-existing WebGL internal format '"+C+"'")}let at=w;return w===r.RED&&(W===r.FLOAT&&(at=r.R32F),W===r.HALF_FLOAT&&(at=r.R16F),W===r.UNSIGNED_BYTE&&(at=r.R8)),w===r.RED_INTEGER&&(W===r.UNSIGNED_BYTE&&(at=r.R8UI),W===r.UNSIGNED_SHORT&&(at=r.R16UI),W===r.UNSIGNED_INT&&(at=r.R32UI),W===r.BYTE&&(at=r.R8I),W===r.SHORT&&(at=r.R16I),W===r.INT&&(at=r.R32I)),w===r.RG&&(W===r.FLOAT&&(at=r.RG32F),W===r.HALF_FLOAT&&(at=r.RG16F),W===r.UNSIGNED_BYTE&&(at=r.RG8)),w===r.RGBA&&(W===r.FLOAT&&(at=r.RGBA32F),W===r.HALF_FLOAT&&(at=r.RGBA16F),W===r.UNSIGNED_BYTE&&(at=st===ae&&nt===!1?r.SRGB8_ALPHA8:r.RGBA8),W===r.UNSIGNED_SHORT_4_4_4_4&&(at=r.RGBA4),W===r.UNSIGNED_SHORT_5_5_5_1&&(at=r.RGB5_A1)),(at===r.R16F||at===r.R32F||at===r.RG16F||at===r.RG32F||at===r.RGBA16F||at===r.RGBA32F)&&t.get("EXT_color_buffer_float"),at}function y(C,w,W){return T(C,W)===!0||C.isFramebufferTexture&&C.minFilter!==Ze&&C.minFilter!==yn?Math.log2(Math.max(w.width,w.height))+1:C.mipmaps!==void 0&&C.mipmaps.length>0?C.mipmaps.length:C.isCompressedTexture&&Array.isArray(C.image)?w.mipmaps.length:1}function b(C){return C===Ze||C===L3||C===da?r.NEAREST:r.LINEAR}function F(C){const w=C.target;w.removeEventListener("dispose",F),I(w),w.isVideoTexture&&g.delete(w)}function z(C){const w=C.target;w.removeEventListener("dispose",z),N(w)}function I(C){const w=n.get(C);if(w.__webglInit===void 0)return;const W=C.source,st=m.get(W);if(st){const nt=st[w.__cacheKey];nt.usedTimes--,nt.usedTimes===0&&O(C),Object.keys(st).length===0&&m.delete(W)}n.remove(C)}function O(C){const w=n.get(C);r.deleteTexture(w.__webglTexture);const W=C.source,st=m.get(W);delete st[w.__cacheKey],o.memory.textures--}function N(C){const w=C.texture,W=n.get(C),st=n.get(w);if(st.__webglTexture!==void 0&&(r.deleteTexture(st.__webglTexture),o.memory.textures--),C.depthTexture&&C.depthTexture.dispose(),C.isWebGLCubeRenderTarget)for(let nt=0;nt<6;nt++){if(Array.isArray(W.__webglFramebuffer[nt]))for(let at=0;at<W.__webglFramebuffer[nt].length;at++)r.deleteFramebuffer(W.__webglFramebuffer[nt][at]);else r.deleteFramebuffer(W.__webglFramebuffer[nt]);W.__webglDepthbuffer&&r.deleteRenderbuffer(W.__webglDepthbuffer[nt])}else{if(Array.isArray(W.__webglFramebuffer))for(let nt=0;nt<W.__webglFramebuffer.length;nt++)r.deleteFramebuffer(W.__webglFramebuffer[nt]);else r.deleteFramebuffer(W.__webglFramebuffer);if(W.__webglDepthbuffer&&r.deleteRenderbuffer(W.__webglDepthbuffer),W.__webglMultisampledFramebuffer&&r.deleteFramebuffer(W.__webglMultisampledFramebuffer),W.__webglColorRenderbuffer)for(let nt=0;nt<W.__webglColorRenderbuffer.length;nt++)W.__webglColorRenderbuffer[nt]&&r.deleteRenderbuffer(W.__webglColorRenderbuffer[nt]);W.__webglDepthRenderbuffer&&r.deleteRenderbuffer(W.__webglDepthRenderbuffer)}if(C.isWebGLMultipleRenderTargets)for(let nt=0,at=w.length;nt<at;nt++){const Et=n.get(w[nt]);Et.__webglTexture&&(r.deleteTexture(Et.__webglTexture),o.memory.textures--),n.remove(w[nt])}n.remove(w),n.remove(C)}let X=0;function k(){X=0}function Y(){const C=X;return C>=l&&console.warn("THREE.WebGLTextures: Trying to use "+C+" texture units while this GPU supports only "+l),X+=1,C}function Q(C){const w=[];return w.push(C.wrapS),w.push(C.wrapT),w.push(C.wrapR||0),w.push(C.magFilter),w.push(C.minFilter),w.push(C.anisotropy),w.push(C.internalFormat),w.push(C.format),w.push(C.type),w.push(C.generateMipmaps),w.push(C.premultiplyAlpha),w.push(C.flipY),w.push(C.unpackAlignment),w.push(C.colorSpace),w.join()}function $(C,w){const W=n.get(C);if(C.isVideoTexture&&Bt(C),C.isRenderTargetTexture===!1&&C.version>0&&W.__version!==C.version){const st=C.image;if(st===null)console.warn("THREE.WebGLRenderer: Texture marked for update but no image data found.");else if(st.complete===!1)console.warn("THREE.WebGLRenderer: Texture marked for update but image is incomplete");else{Vt(W,C,w);return}}e.bindTexture(r.TEXTURE_2D,W.__webglTexture,r.TEXTURE0+w)}function B(C,w){const W=n.get(C);if(C.version>0&&W.__version!==C.version){Vt(W,C,w);return}e.bindTexture(r.TEXTURE_2D_ARRAY,W.__webglTexture,r.TEXTURE0+w)}function V(C,w){const W=n.get(C);if(C.version>0&&W.__version!==C.version){Vt(W,C,w);return}e.bindTexture(r.TEXTURE_3D,W.__webglTexture,r.TEXTURE0+w)}function ht(C,w){const W=n.get(C);if(C.version>0&&W.__version!==C.version){Kt(W,C,w);return}e.bindTexture(r.TEXTURE_CUBE_MAP,W.__webglTexture,r.TEXTURE0+w)}const ct={[h0]:r.REPEAT,[Un]:r.CLAMP_TO_EDGE,[f0]:r.MIRRORED_REPEAT},_t={[Ze]:r.NEAREST,[L3]:r.NEAREST_MIPMAP_NEAREST,[da]:r.NEAREST_MIPMAP_LINEAR,[yn]:r.LINEAR,[r2]:r.LINEAR_MIPMAP_NEAREST,[Rs]:r.LINEAR_MIPMAP_LINEAR},Rt={[v2]:r.NEVER,[b2]:r.ALWAYS,[x2]:r.LESS,[M2]:r.LEQUAL,[y2]:r.EQUAL,[T2]:r.GEQUAL,[S2]:r.GREATER,[E2]:r.NOTEQUAL};function wt(C,w,W){if(W?(r.texParameteri(C,r.TEXTURE_WRAP_S,ct[w.wrapS]),r.texParameteri(C,r.TEXTURE_WRAP_T,ct[w.wrapT]),(C===r.TEXTURE_3D||C===r.TEXTURE_2D_ARRAY)&&r.texParameteri(C,r.TEXTURE_WRAP_R,ct[w.wrapR]),r.texParameteri(C,r.TEXTURE_MAG_FILTER,_t[w.magFilter]),r.texParameteri(C,r.TEXTURE_MIN_FILTER,_t[w.minFilter])):(r.texParameteri(C,r.TEXTURE_WRAP_S,r.CLAMP_TO_EDGE),r.texParameteri(C,r.TEXTURE_WRAP_T,r.CLAMP_TO_EDGE),(C===r.TEXTURE_3D||C===r.TEXTURE_2D_ARRAY)&&r.texParameteri(C,r.TEXTURE_WRAP_R,r.CLAMP_TO_EDGE),(w.wrapS!==Un||w.wrapT!==Un)&&console.warn("THREE.WebGLRenderer: Texture is not power of two. Texture.wrapS and Texture.wrapT should be set to THREE.ClampToEdgeWrapping."),r.texParameteri(C,r.TEXTURE_MAG_FILTER,b(w.magFilter)),r.texParameteri(C,r.TEXTURE_MIN_FILTER,b(w.minFilter)),w.minFilter!==Ze&&w.minFilter!==yn&&console.warn("THREE.WebGLRenderer: Texture is not power of two. Texture.minFilter should be set to THREE.NearestFilter or THREE.LinearFilter.")),w.compareFunction&&(r.texParameteri(C,r.TEXTURE_COMPARE_MODE,r.COMPARE_REF_TO_TEXTURE),r.texParameteri(C,r.TEXTURE_COMPARE_FUNC,Rt[w.compareFunction])),t.has("EXT_texture_filter_anisotropic")===!0){const st=t.get("EXT_texture_filter_anisotropic");if(w.magFilter===Ze||w.minFilter!==da&&w.minFilter!==Rs||w.type===vi&&t.has("OES_texture_float_linear")===!1||a===!1&&w.type===Cs&&t.has("OES_texture_half_float_linear")===!1)return;(w.anisotropy>1||n.get(w).__currentAnisotropy)&&(r.texParameterf(C,st.TEXTURE_MAX_ANISOTROPY_EXT,Math.min(w.anisotropy,i.getMaxAnisotropy())),n.get(w).__currentAnisotropy=w.anisotropy)}}function bt(C,w){let W=!1;C.__webglInit===void 0&&(C.__webglInit=!0,w.addEventListener("dispose",F));const st=w.source;let nt=m.get(st);nt===void 0&&(nt={},m.set(st,nt));const at=Q(w);if(at!==C.__cacheKey){nt[at]===void 0&&(nt[at]={texture:r.createTexture(),usedTimes:0},o.memory.textures++,W=!0),nt[at].usedTimes++;const Et=nt[C.__cacheKey];Et!==void 0&&(nt[C.__cacheKey].usedTimes--,Et.usedTimes===0&&O(w)),C.__cacheKey=at,C.__webglTexture=nt[at].texture}return W}function Vt(C,w,W){let st=r.TEXTURE_2D;(w.isDataArrayTexture||w.isCompressedArrayTexture)&&(st=r.TEXTURE_2D_ARRAY),w.isData3DTexture&&(st=r.TEXTURE_3D);const nt=bt(C,w),at=w.source;e.bindTexture(st,C.__webglTexture,r.TEXTURE0+W);const Et=n.get(at);if(at.version!==Et.__version||nt===!0){e.activeTexture(r.TEXTURE0+W),r.pixelStorei(r.UNPACK_FLIP_Y_WEBGL,w.flipY),r.pixelStorei(r.UNPACK_PREMULTIPLY_ALPHA_WEBGL,w.premultiplyAlpha),r.pixelStorei(r.UNPACK_ALIGNMENT,w.unpackAlignment),r.pixelStorei(r.UNPACK_COLORSPACE_CONVERSION_WEBGL,r.NONE);const lt=S(w)&&x(w.image)===!1;let q=v(w.image,lt,!1,u);q=se(w,q);const D=x(q)||a,tt=s.convert(w.format,w.colorSpace);let vt=s.convert(w.type),dt=A(w.internalFormat,tt,vt,w.colorSpace,w.isVideoTexture);wt(st,w,D);let gt;const Nt=w.mipmaps,Wt=a&&w.isVideoTexture!==!0,U=Et.__version===void 0||nt===!0,mt=y(w,q,D);if(w.isDepthTexture)dt=r.DEPTH_COMPONENT,a?w.type===vi?dt=r.DEPTH_COMPONENT32F:w.type===gi?dt=r.DEPTH_COMPONENT24:w.type===Wi?dt=r.DEPTH24_STENCIL8:dt=r.DEPTH_COMPONENT16:w.type===vi&&console.error("WebGLRenderer: Floating point depth texture requires WebGL2."),w.format===Xi&&dt===r.DEPTH_COMPONENT&&w.type!==B0&&w.type!==gi&&(console.warn("THREE.WebGLRenderer: Use UnsignedShortType or UnsignedIntType for DepthFormat DepthTexture."),w.type=gi,vt=s.convert(w.type)),w.format===Qr&&dt===r.DEPTH_COMPONENT&&(dt=r.DEPTH_STENCIL,w.type!==Wi&&(console.warn("THREE.WebGLRenderer: Use UnsignedInt248Type for DepthStencilFormat DepthTexture."),w.type=Wi,vt=s.convert(w.type))),U&&(Wt?e.texStorage2D(r.TEXTURE_2D,1,dt,q.width,q.height):e.texImage2D(r.TEXTURE_2D,0,dt,q.width,q.height,0,tt,vt,null));else if(w.isDataTexture)if(Nt.length>0&&D){Wt&&U&&e.texStorage2D(r.TEXTURE_2D,mt,dt,Nt[0].width,Nt[0].height);for(let j=0,rt=Nt.length;j<rt;j++)gt=Nt[j],Wt?e.texSubImage2D(r.TEXTURE_2D,j,0,0,gt.width,gt.height,tt,vt,gt.data):e.texImage2D(r.TEXTURE_2D,j,dt,gt.width,gt.height,0,tt,vt,gt.data);w.generateMipmaps=!1}else Wt?(U&&e.texStorage2D(r.TEXTURE_2D,mt,dt,q.width,q.height),e.texSubImage2D(r.TEXTURE_2D,0,0,0,q.width,q.height,tt,vt,q.data)):e.texImage2D(r.TEXTURE_2D,0,dt,q.width,q.height,0,tt,vt,q.data);else if(w.isCompressedTexture)if(w.isCompressedArrayTexture){Wt&&U&&e.texStorage3D(r.TEXTURE_2D_ARRAY,mt,dt,Nt[0].width,Nt[0].height,q.depth);for(let j=0,rt=Nt.length;j<rt;j++)gt=Nt[j],w.format!==In?tt!==null?Wt?e.compressedTexSubImage3D(r.TEXTURE_2D_ARRAY,j,0,0,0,gt.width,gt.height,q.depth,tt,gt.data,0,0):e.compressedTexImage3D(r.TEXTURE_2D_ARRAY,j,dt,gt.width,gt.height,q.depth,0,gt.data,0,0):console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()"):Wt?e.texSubImage3D(r.TEXTURE_2D_ARRAY,j,0,0,0,gt.width,gt.height,q.depth,tt,vt,gt.data):e.texImage3D(r.TEXTURE_2D_ARRAY,j,dt,gt.width,gt.height,q.depth,0,tt,vt,gt.data)}else{Wt&&U&&e.texStorage2D(r.TEXTURE_2D,mt,dt,Nt[0].width,Nt[0].height);for(let j=0,rt=Nt.length;j<rt;j++)gt=Nt[j],w.format!==In?tt!==null?Wt?e.compressedTexSubImage2D(r.TEXTURE_2D,j,0,0,gt.width,gt.height,tt,gt.data):e.compressedTexImage2D(r.TEXTURE_2D,j,dt,gt.width,gt.height,0,gt.data):console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()"):Wt?e.texSubImage2D(r.TEXTURE_2D,j,0,0,gt.width,gt.height,tt,vt,gt.data):e.texImage2D(r.TEXTURE_2D,j,dt,gt.width,gt.height,0,tt,vt,gt.data)}else if(w.isDataArrayTexture)Wt?(U&&e.texStorage3D(r.TEXTURE_2D_ARRAY,mt,dt,q.width,q.height,q.depth),e.texSubImage3D(r.TEXTURE_2D_ARRAY,0,0,0,0,q.width,q.height,q.depth,tt,vt,q.data)):e.texImage3D(r.TEXTURE_2D_ARRAY,0,dt,q.width,q.height,q.depth,0,tt,vt,q.data);else if(w.isData3DTexture)Wt?(U&&e.texStorage3D(r.TEXTURE_3D,mt,dt,q.width,q.height,q.depth),e.texSubImage3D(r.TEXTURE_3D,0,0,0,0,q.width,q.height,q.depth,tt,vt,q.data)):e.texImage3D(r.TEXTURE_3D,0,dt,q.width,q.height,q.depth,0,tt,vt,q.data);else if(w.isFramebufferTexture){if(U)if(Wt)e.texStorage2D(r.TEXTURE_2D,mt,dt,q.width,q.height);else{let j=q.width,rt=q.height;for(let ft=0;ft<mt;ft++)e.texImage2D(r.TEXTURE_2D,ft,dt,j,rt,0,tt,vt,null),j>>=1,rt>>=1}}else if(Nt.length>0&&D){Wt&&U&&e.texStorage2D(r.TEXTURE_2D,mt,dt,Nt[0].width,Nt[0].height);for(let j=0,rt=Nt.length;j<rt;j++)gt=Nt[j],Wt?e.texSubImage2D(r.TEXTURE_2D,j,0,0,tt,vt,gt):e.texImage2D(r.TEXTURE_2D,j,dt,tt,vt,gt);w.generateMipmaps=!1}else Wt?(U&&e.texStorage2D(r.TEXTURE_2D,mt,dt,q.width,q.height),e.texSubImage2D(r.TEXTURE_2D,0,0,0,tt,vt,q)):e.texImage2D(r.TEXTURE_2D,0,dt,tt,vt,q);T(w,D)&&E(st),Et.__version=at.version,w.onUpdate&&w.onUpdate(w)}C.__version=w.version}function Kt(C,w,W){if(w.image.length!==6)return;const st=bt(C,w),nt=w.source;e.bindTexture(r.TEXTURE_CUBE_MAP,C.__webglTexture,r.TEXTURE0+W);const at=n.get(nt);if(nt.version!==at.__version||st===!0){e.activeTexture(r.TEXTURE0+W),r.pixelStorei(r.UNPACK_FLIP_Y_WEBGL,w.flipY),r.pixelStorei(r.UNPACK_PREMULTIPLY_ALPHA_WEBGL,w.premultiplyAlpha),r.pixelStorei(r.UNPACK_ALIGNMENT,w.unpackAlignment),r.pixelStorei(r.UNPACK_COLORSPACE_CONVERSION_WEBGL,r.NONE);const Et=w.isCompressedTexture||w.image[0].isCompressedTexture,lt=w.image[0]&&w.image[0].isDataTexture,q=[];for(let j=0;j<6;j++)!Et&&!lt?q[j]=v(w.image[j],!1,!0,c):q[j]=lt?w.image[j].image:w.image[j],q[j]=se(w,q[j]);const D=q[0],tt=x(D)||a,vt=s.convert(w.format,w.colorSpace),dt=s.convert(w.type),gt=A(w.internalFormat,vt,dt,w.colorSpace),Nt=a&&w.isVideoTexture!==!0,Wt=at.__version===void 0||st===!0;let U=y(w,D,tt);wt(r.TEXTURE_CUBE_MAP,w,tt);let mt;if(Et){Nt&&Wt&&e.texStorage2D(r.TEXTURE_CUBE_MAP,U,gt,D.width,D.height);for(let j=0;j<6;j++){mt=q[j].mipmaps;for(let rt=0;rt<mt.length;rt++){const ft=mt[rt];w.format!==In?vt!==null?Nt?e.compressedTexSubImage2D(r.TEXTURE_CUBE_MAP_POSITIVE_X+j,rt,0,0,ft.width,ft.height,vt,ft.data):e.compressedTexImage2D(r.TEXTURE_CUBE_MAP_POSITIVE_X+j,rt,gt,ft.width,ft.height,0,ft.data):console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .setTextureCube()"):Nt?e.texSubImage2D(r.TEXTURE_CUBE_MAP_POSITIVE_X+j,rt,0,0,ft.width,ft.height,vt,dt,ft.data):e.texImage2D(r.TEXTURE_CUBE_MAP_POSITIVE_X+j,rt,gt,ft.width,ft.height,0,vt,dt,ft.data)}}}else{mt=w.mipmaps,Nt&&Wt&&(mt.length>0&&U++,e.texStorage2D(r.TEXTURE_CUBE_MAP,U,gt,q[0].width,q[0].height));for(let j=0;j<6;j++)if(lt){Nt?e.texSubImage2D(r.TEXTURE_CUBE_MAP_POSITIVE_X+j,0,0,0,q[j].width,q[j].height,vt,dt,q[j].data):e.texImage2D(r.TEXTURE_CUBE_MAP_POSITIVE_X+j,0,gt,q[j].width,q[j].height,0,vt,dt,q[j].data);for(let rt=0;rt<mt.length;rt++){const kt=mt[rt].image[j].image;Nt?e.texSubImage2D(r.TEXTURE_CUBE_MAP_POSITIVE_X+j,rt+1,0,0,kt.width,kt.height,vt,dt,kt.data):e.texImage2D(r.TEXTURE_CUBE_MAP_POSITIVE_X+j,rt+1,gt,kt.width,kt.height,0,vt,dt,kt.data)}}else{Nt?e.texSubImage2D(r.TEXTURE_CUBE_MAP_POSITIVE_X+j,0,0,0,vt,dt,q[j]):e.texImage2D(r.TEXTURE_CUBE_MAP_POSITIVE_X+j,0,gt,vt,dt,q[j]);for(let rt=0;rt<mt.length;rt++){const ft=mt[rt];Nt?e.texSubImage2D(r.TEXTURE_CUBE_MAP_POSITIVE_X+j,rt+1,0,0,vt,dt,ft.image[j]):e.texImage2D(r.TEXTURE_CUBE_MAP_POSITIVE_X+j,rt+1,gt,vt,dt,ft.image[j])}}}T(w,tt)&&E(r.TEXTURE_CUBE_MAP),at.__version=nt.version,w.onUpdate&&w.onUpdate(w)}C.__version=w.version}function Ct(C,w,W,st,nt,at){const Et=s.convert(W.format,W.colorSpace),lt=s.convert(W.type),q=A(W.internalFormat,Et,lt,W.colorSpace);if(!n.get(w).__hasExternalTextures){const tt=Math.max(1,w.width>>at),vt=Math.max(1,w.height>>at);nt===r.TEXTURE_3D||nt===r.TEXTURE_2D_ARRAY?e.texImage3D(nt,at,q,tt,vt,w.depth,0,Et,lt,null):e.texImage2D(nt,at,q,tt,vt,0,Et,lt,null)}e.bindFramebuffer(r.FRAMEBUFFER,C),Lt(w)?f.framebufferTexture2DMultisampleEXT(r.FRAMEBUFFER,st,nt,n.get(W).__webglTexture,0,Mt(w)):(nt===r.TEXTURE_2D||nt>=r.TEXTURE_CUBE_MAP_POSITIVE_X&&nt<=r.TEXTURE_CUBE_MAP_NEGATIVE_Z)&&r.framebufferTexture2D(r.FRAMEBUFFER,st,nt,n.get(W).__webglTexture,at),e.bindFramebuffer(r.FRAMEBUFFER,null)}function L(C,w,W){if(r.bindRenderbuffer(r.RENDERBUFFER,C),w.depthBuffer&&!w.stencilBuffer){let st=r.DEPTH_COMPONENT16;if(W||Lt(w)){const nt=w.depthTexture;nt&&nt.isDepthTexture&&(nt.type===vi?st=r.DEPTH_COMPONENT32F:nt.type===gi&&(st=r.DEPTH_COMPONENT24));const at=Mt(w);Lt(w)?f.renderbufferStorageMultisampleEXT(r.RENDERBUFFER,at,st,w.width,w.height):r.renderbufferStorageMultisample(r.RENDERBUFFER,at,st,w.width,w.height)}else r.renderbufferStorage(r.RENDERBUFFER,st,w.width,w.height);r.framebufferRenderbuffer(r.FRAMEBUFFER,r.DEPTH_ATTACHMENT,r.RENDERBUFFER,C)}else if(w.depthBuffer&&w.stencilBuffer){const st=Mt(w);W&&Lt(w)===!1?r.renderbufferStorageMultisample(r.RENDERBUFFER,st,r.DEPTH24_STENCIL8,w.width,w.height):Lt(w)?f.renderbufferStorageMultisampleEXT(r.RENDERBUFFER,st,r.DEPTH24_STENCIL8,w.width,w.height):r.renderbufferStorage(r.RENDERBUFFER,r.DEPTH_STENCIL,w.width,w.height),r.framebufferRenderbuffer(r.FRAMEBUFFER,r.DEPTH_STENCIL_ATTACHMENT,r.RENDERBUFFER,C)}else{const st=w.isWebGLMultipleRenderTargets===!0?w.texture:[w.texture];for(let nt=0;nt<st.length;nt++){const at=st[nt],Et=s.convert(at.format,at.colorSpace),lt=s.convert(at.type),q=A(at.internalFormat,Et,lt,at.colorSpace),D=Mt(w);W&&Lt(w)===!1?r.renderbufferStorageMultisample(r.RENDERBUFFER,D,q,w.width,w.height):Lt(w)?f.renderbufferStorageMultisampleEXT(r.RENDERBUFFER,D,q,w.width,w.height):r.renderbufferStorage(r.RENDERBUFFER,q,w.width,w.height)}}r.bindRenderbuffer(r.RENDERBUFFER,null)}function ut(C,w){if(w&&w.isWebGLCubeRenderTarget)throw new Error("Depth Texture with cube render targets is not supported");if(e.bindFramebuffer(r.FRAMEBUFFER,C),!(w.depthTexture&&w.depthTexture.isDepthTexture))throw new Error("renderTarget.depthTexture must be an instance of THREE.DepthTexture");(!n.get(w.depthTexture).__webglTexture||w.depthTexture.image.width!==w.width||w.depthTexture.image.height!==w.height)&&(w.depthTexture.image.width=w.width,w.depthTexture.image.height=w.height,w.depthTexture.needsUpdate=!0),$(w.depthTexture,0);const st=n.get(w.depthTexture).__webglTexture,nt=Mt(w);if(w.depthTexture.format===Xi)Lt(w)?f.framebufferTexture2DMultisampleEXT(r.FRAMEBUFFER,r.DEPTH_ATTACHMENT,r.TEXTURE_2D,st,0,nt):r.framebufferTexture2D(r.FRAMEBUFFER,r.DEPTH_ATTACHMENT,r.TEXTURE_2D,st,0);else if(w.depthTexture.format===Qr)Lt(w)?f.framebufferTexture2DMultisampleEXT(r.FRAMEBUFFER,r.DEPTH_STENCIL_ATTACHMENT,r.TEXTURE_2D,st,0,nt):r.framebufferTexture2D(r.FRAMEBUFFER,r.DEPTH_STENCIL_ATTACHMENT,r.TEXTURE_2D,st,0);else throw new Error("Unknown depthTexture format")}function J(C){const w=n.get(C),W=C.isWebGLCubeRenderTarget===!0;if(C.depthTexture&&!w.__autoAllocateDepthBuffer){if(W)throw new Error("target.depthTexture not supported in Cube render targets");ut(w.__webglFramebuffer,C)}else if(W){w.__webglDepthbuffer=[];for(let st=0;st<6;st++)e.bindFramebuffer(r.FRAMEBUFFER,w.__webglFramebuffer[st]),w.__webglDepthbuffer[st]=r.createRenderbuffer(),L(w.__webglDepthbuffer[st],C,!1)}else e.bindFramebuffer(r.FRAMEBUFFER,w.__webglFramebuffer),w.__webglDepthbuffer=r.createRenderbuffer(),L(w.__webglDepthbuffer,C,!1);e.bindFramebuffer(r.FRAMEBUFFER,null)}function ot(C,w,W){const st=n.get(C);w!==void 0&&Ct(st.__webglFramebuffer,C,C.texture,r.COLOR_ATTACHMENT0,r.TEXTURE_2D,0),W!==void 0&&J(C)}function et(C){const w=C.texture,W=n.get(C),st=n.get(w);C.addEventListener("dispose",z),C.isWebGLMultipleRenderTargets!==!0&&(st.__webglTexture===void 0&&(st.__webglTexture=r.createTexture()),st.__version=w.version,o.memory.textures++);const nt=C.isWebGLCubeRenderTarget===!0,at=C.isWebGLMultipleRenderTargets===!0,Et=x(C)||a;if(nt){W.__webglFramebuffer=[];for(let lt=0;lt<6;lt++)if(a&&w.mipmaps&&w.mipmaps.length>0){W.__webglFramebuffer[lt]=[];for(let q=0;q<w.mipmaps.length;q++)W.__webglFramebuffer[lt][q]=r.createFramebuffer()}else W.__webglFramebuffer[lt]=r.createFramebuffer()}else{if(a&&w.mipmaps&&w.mipmaps.length>0){W.__webglFramebuffer=[];for(let lt=0;lt<w.mipmaps.length;lt++)W.__webglFramebuffer[lt]=r.createFramebuffer()}else W.__webglFramebuffer=r.createFramebuffer();if(at)if(i.drawBuffers){const lt=C.texture;for(let q=0,D=lt.length;q<D;q++){const tt=n.get(lt[q]);tt.__webglTexture===void 0&&(tt.__webglTexture=r.createTexture(),o.memory.textures++)}}else console.warn("THREE.WebGLRenderer: WebGLMultipleRenderTargets can only be used with WebGL2 or WEBGL_draw_buffers extension.");if(a&&C.samples>0&&Lt(C)===!1){const lt=at?w:[w];W.__webglMultisampledFramebuffer=r.createFramebuffer(),W.__webglColorRenderbuffer=[],e.bindFramebuffer(r.FRAMEBUFFER,W.__webglMultisampledFramebuffer);for(let q=0;q<lt.length;q++){const D=lt[q];W.__webglColorRenderbuffer[q]=r.createRenderbuffer(),r.bindRenderbuffer(r.RENDERBUFFER,W.__webglColorRenderbuffer[q]);const tt=s.convert(D.format,D.colorSpace),vt=s.convert(D.type),dt=A(D.internalFormat,tt,vt,D.colorSpace,C.isXRRenderTarget===!0),gt=Mt(C);r.renderbufferStorageMultisample(r.RENDERBUFFER,gt,dt,C.width,C.height),r.framebufferRenderbuffer(r.FRAMEBUFFER,r.COLOR_ATTACHMENT0+q,r.RENDERBUFFER,W.__webglColorRenderbuffer[q])}r.bindRenderbuffer(r.RENDERBUFFER,null),C.depthBuffer&&(W.__webglDepthRenderbuffer=r.createRenderbuffer(),L(W.__webglDepthRenderbuffer,C,!0)),e.bindFramebuffer(r.FRAMEBUFFER,null)}}if(nt){e.bindTexture(r.TEXTURE_CUBE_MAP,st.__webglTexture),wt(r.TEXTURE_CUBE_MAP,w,Et);for(let lt=0;lt<6;lt++)if(a&&w.mipmaps&&w.mipmaps.length>0)for(let q=0;q<w.mipmaps.length;q++)Ct(W.__webglFramebuffer[lt][q],C,w,r.COLOR_ATTACHMENT0,r.TEXTURE_CUBE_MAP_POSITIVE_X+lt,q);else Ct(W.__webglFramebuffer[lt],C,w,r.COLOR_ATTACHMENT0,r.TEXTURE_CUBE_MAP_POSITIVE_X+lt,0);T(w,Et)&&E(r.TEXTURE_CUBE_MAP),e.unbindTexture()}else if(at){const lt=C.texture;for(let q=0,D=lt.length;q<D;q++){const tt=lt[q],vt=n.get(tt);e.bindTexture(r.TEXTURE_2D,vt.__webglTexture),wt(r.TEXTURE_2D,tt,Et),Ct(W.__webglFramebuffer,C,tt,r.COLOR_ATTACHMENT0+q,r.TEXTURE_2D,0),T(tt,Et)&&E(r.TEXTURE_2D)}e.unbindTexture()}else{let lt=r.TEXTURE_2D;if((C.isWebGL3DRenderTarget||C.isWebGLArrayRenderTarget)&&(a?lt=C.isWebGL3DRenderTarget?r.TEXTURE_3D:r.TEXTURE_2D_ARRAY:console.error("THREE.WebGLTextures: THREE.Data3DTexture and THREE.DataArrayTexture only supported with WebGL2.")),e.bindTexture(lt,st.__webglTexture),wt(lt,w,Et),a&&w.mipmaps&&w.mipmaps.length>0)for(let q=0;q<w.mipmaps.length;q++)Ct(W.__webglFramebuffer[q],C,w,r.COLOR_ATTACHMENT0,lt,q);else Ct(W.__webglFramebuffer,C,w,r.COLOR_ATTACHMENT0,lt,0);T(w,Et)&&E(lt),e.unbindTexture()}C.depthBuffer&&J(C)}function Tt(C){const w=x(C)||a,W=C.isWebGLMultipleRenderTargets===!0?C.texture:[C.texture];for(let st=0,nt=W.length;st<nt;st++){const at=W[st];if(T(at,w)){const Et=C.isWebGLCubeRenderTarget?r.TEXTURE_CUBE_MAP:r.TEXTURE_2D,lt=n.get(at).__webglTexture;e.bindTexture(Et,lt),E(Et),e.unbindTexture()}}}function xt(C){if(a&&C.samples>0&&Lt(C)===!1){const w=C.isWebGLMultipleRenderTargets?C.texture:[C.texture],W=C.width,st=C.height;let nt=r.COLOR_BUFFER_BIT;const at=[],Et=C.stencilBuffer?r.DEPTH_STENCIL_ATTACHMENT:r.DEPTH_ATTACHMENT,lt=n.get(C),q=C.isWebGLMultipleRenderTargets===!0;if(q)for(let D=0;D<w.length;D++)e.bindFramebuffer(r.FRAMEBUFFER,lt.__webglMultisampledFramebuffer),r.framebufferRenderbuffer(r.FRAMEBUFFER,r.COLOR_ATTACHMENT0+D,r.RENDERBUFFER,null),e.bindFramebuffer(r.FRAMEBUFFER,lt.__webglFramebuffer),r.framebufferTexture2D(r.DRAW_FRAMEBUFFER,r.COLOR_ATTACHMENT0+D,r.TEXTURE_2D,null,0);e.bindFramebuffer(r.READ_FRAMEBUFFER,lt.__webglMultisampledFramebuffer),e.bindFramebuffer(r.DRAW_FRAMEBUFFER,lt.__webglFramebuffer);for(let D=0;D<w.length;D++){at.push(r.COLOR_ATTACHMENT0+D),C.depthBuffer&&at.push(Et);const tt=lt.__ignoreDepthValues!==void 0?lt.__ignoreDepthValues:!1;if(tt===!1&&(C.depthBuffer&&(nt|=r.DEPTH_BUFFER_BIT),C.stencilBuffer&&(nt|=r.STENCIL_BUFFER_BIT)),q&&r.framebufferRenderbuffer(r.READ_FRAMEBUFFER,r.COLOR_ATTACHMENT0,r.RENDERBUFFER,lt.__webglColorRenderbuffer[D]),tt===!0&&(r.invalidateFramebuffer(r.READ_FRAMEBUFFER,[Et]),r.invalidateFramebuffer(r.DRAW_FRAMEBUFFER,[Et])),q){const vt=n.get(w[D]).__webglTexture;r.framebufferTexture2D(r.DRAW_FRAMEBUFFER,r.COLOR_ATTACHMENT0,r.TEXTURE_2D,vt,0)}r.blitFramebuffer(0,0,W,st,0,0,W,st,nt,r.NEAREST),d&&r.invalidateFramebuffer(r.READ_FRAMEBUFFER,at)}if(e.bindFramebuffer(r.READ_FRAMEBUFFER,null),e.bindFramebuffer(r.DRAW_FRAMEBUFFER,null),q)for(let D=0;D<w.length;D++){e.bindFramebuffer(r.FRAMEBUFFER,lt.__webglMultisampledFramebuffer),r.framebufferRenderbuffer(r.FRAMEBUFFER,r.COLOR_ATTACHMENT0+D,r.RENDERBUFFER,lt.__webglColorRenderbuffer[D]);const tt=n.get(w[D]).__webglTexture;e.bindFramebuffer(r.FRAMEBUFFER,lt.__webglFramebuffer),r.framebufferTexture2D(r.DRAW_FRAMEBUFFER,r.COLOR_ATTACHMENT0+D,r.TEXTURE_2D,tt,0)}e.bindFramebuffer(r.DRAW_FRAMEBUFFER,lt.__webglMultisampledFramebuffer)}}function Mt(C){return Math.min(h,C.samples)}function Lt(C){const w=n.get(C);return a&&C.samples>0&&t.has("WEBGL_multisampled_render_to_texture")===!0&&w.__useRenderToTexture!==!1}function Bt(C){const w=o.render.frame;g.get(C)!==w&&(g.set(C,w),C.update())}function se(C,w){const W=C.colorSpace,st=C.format,nt=C.type;return C.isCompressedTexture===!0||C.isVideoTexture===!0||C.format===d0||W!==Hn&&W!==Yi&&(W===ae||W===Qo?a===!1?t.has("EXT_sRGB")===!0&&st===In?(C.format=d0,C.minFilter=yn,C.generateMipmaps=!1):w=Gl.sRGBToLinear(w):(st!==In||nt!==Ti)&&console.warn("THREE.WebGLTextures: sRGB encoded textures have to use RGBAFormat and UnsignedByteType."):console.error("THREE.WebGLTextures: Unsupported texture color space:",W)),w}this.allocateTextureUnit=Y,this.resetTextureUnits=k,this.setTexture2D=$,this.setTexture2DArray=B,this.setTexture3D=V,this.setTextureCube=ht,this.rebindTextures=ot,this.setupRenderTarget=et,this.updateRenderTargetMipmap=Tt,this.updateMultisampleRenderTarget=xt,this.setupDepthRenderbuffer=J,this.setupFrameBufferTexture=Ct,this.useMultisampledRTT=Lt}const G9=0,we=1;function H9(r,t,e){const n=e.isWebGL2;function i(s,o=Yi){let a;const l=o===ae||o===Qo?we:G9;if(s===Ti)return r.UNSIGNED_BYTE;if(s===Il)return r.UNSIGNED_SHORT_4_4_4_4;if(s===Ol)return r.UNSIGNED_SHORT_5_5_5_1;if(s===s2)return r.BYTE;if(s===o2)return r.SHORT;if(s===B0)return r.UNSIGNED_SHORT;if(s===Ul)return r.INT;if(s===gi)return r.UNSIGNED_INT;if(s===vi)return r.FLOAT;if(s===Cs)return n?r.HALF_FLOAT:(a=t.get("OES_texture_half_float"),a!==null?a.HALF_FLOAT_OES:null);if(s===a2)return r.ALPHA;if(s===In)return r.RGBA;if(s===l2)return r.LUMINANCE;if(s===c2)return r.LUMINANCE_ALPHA;if(s===Xi)return r.DEPTH_COMPONENT;if(s===Qr)return r.DEPTH_STENCIL;if(s===d0)return a=t.get("EXT_sRGB"),a!==null?a.SRGB_ALPHA_EXT:null;if(s===u2)return r.RED;if(s===Nl)return r.RED_INTEGER;if(s===h2)return r.RG;if(s===Fl)return r.RG_INTEGER;if(s===zl)return r.RGBA_INTEGER;if(s===pa||s===ma||s===_a||s===ga)if(l===we)if(a=t.get("WEBGL_compressed_texture_s3tc_srgb"),a!==null){if(s===pa)return a.COMPRESSED_SRGB_S3TC_DXT1_EXT;if(s===ma)return a.COMPRESSED_SRGB_ALPHA_S3TC_DXT1_EXT;if(s===_a)return a.COMPRESSED_SRGB_ALPHA_S3TC_DXT3_EXT;if(s===ga)return a.COMPRESSED_SRGB_ALPHA_S3TC_DXT5_EXT}else return null;else if(a=t.get("WEBGL_compressed_texture_s3tc"),a!==null){if(s===pa)return a.COMPRESSED_RGB_S3TC_DXT1_EXT;if(s===ma)return a.COMPRESSED_RGBA_S3TC_DXT1_EXT;if(s===_a)return a.COMPRESSED_RGBA_S3TC_DXT3_EXT;if(s===ga)return a.COMPRESSED_RGBA_S3TC_DXT5_EXT}else return null;if(s===D3||s===U3||s===I3||s===O3)if(a=t.get("WEBGL_compressed_texture_pvrtc"),a!==null){if(s===D3)return a.COMPRESSED_RGB_PVRTC_4BPPV1_IMG;if(s===U3)return a.COMPRESSED_RGB_PVRTC_2BPPV1_IMG;if(s===I3)return a.COMPRESSED_RGBA_PVRTC_4BPPV1_IMG;if(s===O3)return a.COMPRESSED_RGBA_PVRTC_2BPPV1_IMG}else return null;if(s===f2)return a=t.get("WEBGL_compressed_texture_etc1"),a!==null?a.COMPRESSED_RGB_ETC1_WEBGL:null;if(s===N3||s===F3)if(a=t.get("WEBGL_compressed_texture_etc"),a!==null){if(s===N3)return l===we?a.COMPRESSED_SRGB8_ETC2:a.COMPRESSED_RGB8_ETC2;if(s===F3)return l===we?a.COMPRESSED_SRGB8_ALPHA8_ETC2_EAC:a.COMPRESSED_RGBA8_ETC2_EAC}else return null;if(s===z3||s===B3||s===k3||s===G3||s===H3||s===V3||s===W3||s===X3||s===q3||s===Y3||s===j3||s===Z3||s===K3||s===$3)if(a=t.get("WEBGL_compressed_texture_astc"),a!==null){if(s===z3)return l===we?a.COMPRESSED_SRGB8_ALPHA8_ASTC_4x4_KHR:a.COMPRESSED_RGBA_ASTC_4x4_KHR;if(s===B3)return l===we?a.COMPRESSED_SRGB8_ALPHA8_ASTC_5x4_KHR:a.COMPRESSED_RGBA_ASTC_5x4_KHR;if(s===k3)return l===we?a.COMPRESSED_SRGB8_ALPHA8_ASTC_5x5_KHR:a.COMPRESSED_RGBA_ASTC_5x5_KHR;if(s===G3)return l===we?a.COMPRESSED_SRGB8_ALPHA8_ASTC_6x5_KHR:a.COMPRESSED_RGBA_ASTC_6x5_KHR;if(s===H3)return l===we?a.COMPRESSED_SRGB8_ALPHA8_ASTC_6x6_KHR:a.COMPRESSED_RGBA_ASTC_6x6_KHR;if(s===V3)return l===we?a.COMPRESSED_SRGB8_ALPHA8_ASTC_8x5_KHR:a.COMPRESSED_RGBA_ASTC_8x5_KHR;if(s===W3)return l===we?a.COMPRESSED_SRGB8_ALPHA8_ASTC_8x6_KHR:a.COMPRESSED_RGBA_ASTC_8x6_KHR;if(s===X3)return l===we?a.COMPRESSED_SRGB8_ALPHA8_ASTC_8x8_KHR:a.COMPRESSED_RGBA_ASTC_8x8_KHR;if(s===q3)return l===we?a.COMPRESSED_SRGB8_ALPHA8_ASTC_10x5_KHR:a.COMPRESSED_RGBA_ASTC_10x5_KHR;if(s===Y3)return l===we?a.COMPRESSED_SRGB8_ALPHA8_ASTC_10x6_KHR:a.COMPRESSED_RGBA_ASTC_10x6_KHR;if(s===j3)return l===we?a.COMPRESSED_SRGB8_ALPHA8_ASTC_10x8_KHR:a.COMPRESSED_RGBA_ASTC_10x8_KHR;if(s===Z3)return l===we?a.COMPRESSED_SRGB8_ALPHA8_ASTC_10x10_KHR:a.COMPRESSED_RGBA_ASTC_10x10_KHR;if(s===K3)return l===we?a.COMPRESSED_SRGB8_ALPHA8_ASTC_12x10_KHR:a.COMPRESSED_RGBA_ASTC_12x10_KHR;if(s===$3)return l===we?a.COMPRESSED_SRGB8_ALPHA8_ASTC_12x12_KHR:a.COMPRESSED_RGBA_ASTC_12x12_KHR}else return null;if(s===va||s===J3||s===Q3)if(a=t.get("EXT_texture_compression_bptc"),a!==null){if(s===va)return l===we?a.COMPRESSED_SRGB_ALPHA_BPTC_UNORM_EXT:a.COMPRESSED_RGBA_BPTC_UNORM_EXT;if(s===J3)return a.COMPRESSED_RGB_BPTC_SIGNED_FLOAT_EXT;if(s===Q3)return a.COMPRESSED_RGB_BPTC_UNSIGNED_FLOAT_EXT}else return null;if(s===d2||s===t1||s===e1||s===n1)if(a=t.get("EXT_texture_compression_rgtc"),a!==null){if(s===va)return a.COMPRESSED_RED_RGTC1_EXT;if(s===t1)return a.COMPRESSED_SIGNED_RED_RGTC1_EXT;if(s===e1)return a.COMPRESSED_RED_GREEN_RGTC2_EXT;if(s===n1)return a.COMPRESSED_SIGNED_RED_GREEN_RGTC2_EXT}else return null;return s===Wi?n?r.UNSIGNED_INT_24_8:(a=t.get("WEBGL_depth_texture"),a!==null?a.UNSIGNED_INT_24_8_WEBGL:null):r[s]!==void 0?r[s]:null}return{convert:i}}class V9 extends Sn{constructor(t=[]){super(),this.isArrayCamera=!0,this.cameras=t}}let gs=class extends pe{constructor(){super(),this.isGroup=!0,this.type="Group"}};const W9={type:"move"};class ka{constructor(){this._targetRay=null,this._grip=null,this._hand=null}getHandSpace(){return this._hand===null&&(this._hand=new gs,this._hand.matrixAutoUpdate=!1,this._hand.visible=!1,this._hand.joints={},this._hand.inputState={pinching:!1}),this._hand}getTargetRaySpace(){return this._targetRay===null&&(this._targetRay=new gs,this._targetRay.matrixAutoUpdate=!1,this._targetRay.visible=!1,this._targetRay.hasLinearVelocity=!1,this._targetRay.linearVelocity=new P,this._targetRay.hasAngularVelocity=!1,this._targetRay.angularVelocity=new P),this._targetRay}getGripSpace(){return this._grip===null&&(this._grip=new gs,this._grip.matrixAutoUpdate=!1,this._grip.visible=!1,this._grip.hasLinearVelocity=!1,this._grip.linearVelocity=new P,this._grip.hasAngularVelocity=!1,this._grip.angularVelocity=new P),this._grip}dispatchEvent(t){return this._targetRay!==null&&this._targetRay.dispatchEvent(t),this._grip!==null&&this._grip.dispatchEvent(t),this._hand!==null&&this._hand.dispatchEvent(t),this}connect(t){if(t&&t.hand){const e=this._hand;if(e)for(const n of t.hand.values())this._getHandJoint(e,n)}return this.dispatchEvent({type:"connected",data:t}),this}disconnect(t){return this.dispatchEvent({type:"disconnected",data:t}),this._targetRay!==null&&(this._targetRay.visible=!1),this._grip!==null&&(this._grip.visible=!1),this._hand!==null&&(this._hand.visible=!1),this}update(t,e,n){let i=null,s=null,o=null;const a=this._targetRay,l=this._grip,c=this._hand;if(t&&e.session.visibilityState!=="visible-blurred"){if(c&&t.hand){o=!0;for(const _ of t.hand.values()){const m=e.getJointPose(_,n),p=this._getHandJoint(c,_);m!==null&&(p.matrix.fromArray(m.transform.matrix),p.matrix.decompose(p.position,p.rotation,p.scale),p.matrixWorldNeedsUpdate=!0,p.jointRadius=m.radius),p.visible=m!==null}const u=c.joints["index-finger-tip"],h=c.joints["thumb-tip"],f=u.position.distanceTo(h.position),d=.02,g=.005;c.inputState.pinching&&f>d+g?(c.inputState.pinching=!1,this.dispatchEvent({type:"pinchend",handedness:t.handedness,target:this})):!c.inputState.pinching&&f<=d-g&&(c.inputState.pinching=!0,this.dispatchEvent({type:"pinchstart",handedness:t.handedness,target:this}))}else l!==null&&t.gripSpace&&(s=e.getPose(t.gripSpace,n),s!==null&&(l.matrix.fromArray(s.transform.matrix),l.matrix.decompose(l.position,l.rotation,l.scale),l.matrixWorldNeedsUpdate=!0,s.linearVelocity?(l.hasLinearVelocity=!0,l.linearVelocity.copy(s.linearVelocity)):l.hasLinearVelocity=!1,s.angularVelocity?(l.hasAngularVelocity=!0,l.angularVelocity.copy(s.angularVelocity)):l.hasAngularVelocity=!1));a!==null&&(i=e.getPose(t.targetRaySpace,n),i===null&&s!==null&&(i=s),i!==null&&(a.matrix.fromArray(i.transform.matrix),a.matrix.decompose(a.position,a.rotation,a.scale),a.matrixWorldNeedsUpdate=!0,i.linearVelocity?(a.hasLinearVelocity=!0,a.linearVelocity.copy(i.linearVelocity)):a.hasLinearVelocity=!1,i.angularVelocity?(a.hasAngularVelocity=!0,a.angularVelocity.copy(i.angularVelocity)):a.hasAngularVelocity=!1,this.dispatchEvent(W9)))}return a!==null&&(a.visible=i!==null),l!==null&&(l.visible=s!==null),c!==null&&(c.visible=o!==null),this}_getHandJoint(t,e){if(t.joints[e.jointName]===void 0){const n=new gs;n.matrixAutoUpdate=!1,n.visible=!1,t.joints[e.jointName]=n,t.add(n)}return t.joints[e.jointName]}}class X9 extends tn{constructor(t,e,n,i,s,o,a,l,c,u){if(u=u!==void 0?u:Xi,u!==Xi&&u!==Qr)throw new Error("DepthTexture format must be either THREE.DepthFormat or THREE.DepthStencilFormat");n===void 0&&u===Xi&&(n=gi),n===void 0&&u===Qr&&(n=Wi),super(null,i,s,o,a,l,u,n,c),this.isDepthTexture=!0,this.image={width:t,height:e},this.magFilter=a!==void 0?a:Ze,this.minFilter=l!==void 0?l:Ze,this.flipY=!1,this.generateMipmaps=!1,this.compareFunction=null}copy(t){return super.copy(t),this.compareFunction=t.compareFunction,this}toJSON(t){const e=super.toJSON(t);return this.compareFunction!==null&&(e.compareFunction=this.compareFunction),e}}class q9 extends or{constructor(t,e){super();const n=this;let i=null,s=1,o=null,a="local-floor",l=1,c=null,u=null,h=null,f=null,d=null,g=null;const _=e.getContextAttributes();let m=null,p=null;const M=[],v=[],x=new Sn;x.layers.enable(1),x.viewport=new Ue;const S=new Sn;S.layers.enable(2),S.viewport=new Ue;const T=[x,S],E=new V9;E.layers.enable(1),E.layers.enable(2);let A=null,y=null;this.cameraAutoUpdate=!0,this.enabled=!1,this.isPresenting=!1,this.getController=function(B){let V=M[B];return V===void 0&&(V=new ka,M[B]=V),V.getTargetRaySpace()},this.getControllerGrip=function(B){let V=M[B];return V===void 0&&(V=new ka,M[B]=V),V.getGripSpace()},this.getHand=function(B){let V=M[B];return V===void 0&&(V=new ka,M[B]=V),V.getHandSpace()};function b(B){const V=v.indexOf(B.inputSource);if(V===-1)return;const ht=M[V];ht!==void 0&&(ht.update(B.inputSource,B.frame,c||o),ht.dispatchEvent({type:B.type,data:B.inputSource}))}function F(){i.removeEventListener("select",b),i.removeEventListener("selectstart",b),i.removeEventListener("selectend",b),i.removeEventListener("squeeze",b),i.removeEventListener("squeezestart",b),i.removeEventListener("squeezeend",b),i.removeEventListener("end",F),i.removeEventListener("inputsourceschange",z);for(let B=0;B<M.length;B++){const V=v[B];V!==null&&(v[B]=null,M[B].disconnect(V))}A=null,y=null,t.setRenderTarget(m),d=null,f=null,h=null,i=null,p=null,$.stop(),n.isPresenting=!1,n.dispatchEvent({type:"sessionend"})}this.setFramebufferScaleFactor=function(B){s=B,n.isPresenting===!0&&console.warn("THREE.WebXRManager: Cannot change framebuffer scale while presenting.")},this.setReferenceSpaceType=function(B){a=B,n.isPresenting===!0&&console.warn("THREE.WebXRManager: Cannot change reference space type while presenting.")},this.getReferenceSpace=function(){return c||o},this.setReferenceSpace=function(B){c=B},this.getBaseLayer=function(){return f!==null?f:d},this.getBinding=function(){return h},this.getFrame=function(){return g},this.getSession=function(){return i},this.setSession=async function(B){if(i=B,i!==null){if(m=t.getRenderTarget(),i.addEventListener("select",b),i.addEventListener("selectstart",b),i.addEventListener("selectend",b),i.addEventListener("squeeze",b),i.addEventListener("squeezestart",b),i.addEventListener("squeezeend",b),i.addEventListener("end",F),i.addEventListener("inputsourceschange",z),_.xrCompatible!==!0&&await e.makeXRCompatible(),i.renderState.layers===void 0||t.capabilities.isWebGL2===!1){const V={antialias:i.renderState.layers===void 0?_.antialias:!0,alpha:!0,depth:_.depth,stencil:_.stencil,framebufferScaleFactor:s};d=new XRWebGLLayer(i,e,V),i.updateRenderState({baseLayer:d}),p=new tr(d.framebufferWidth,d.framebufferHeight,{format:In,type:Ti,colorSpace:t.outputColorSpace,stencilBuffer:_.stencil})}else{let V=null,ht=null,ct=null;_.depth&&(ct=_.stencil?e.DEPTH24_STENCIL8:e.DEPTH_COMPONENT24,V=_.stencil?Qr:Xi,ht=_.stencil?Wi:gi);const _t={colorFormat:e.RGBA8,depthFormat:ct,scaleFactor:s};h=new XRWebGLBinding(i,e),f=h.createProjectionLayer(_t),i.updateRenderState({layers:[f]}),p=new tr(f.textureWidth,f.textureHeight,{format:In,type:Ti,depthTexture:new X9(f.textureWidth,f.textureHeight,ht,void 0,void 0,void 0,void 0,void 0,void 0,V),stencilBuffer:_.stencil,colorSpace:t.outputColorSpace,samples:_.antialias?4:0});const Rt=t.properties.get(p);Rt.__ignoreDepthValues=f.ignoreDepthValues}p.isXRRenderTarget=!0,this.setFoveation(l),c=null,o=await i.requestReferenceSpace(a),$.setContext(i),$.start(),n.isPresenting=!0,n.dispatchEvent({type:"sessionstart"})}},this.getEnvironmentBlendMode=function(){if(i!==null)return i.environmentBlendMode};function z(B){for(let V=0;V<B.removed.length;V++){const ht=B.removed[V],ct=v.indexOf(ht);ct>=0&&(v[ct]=null,M[ct].disconnect(ht))}for(let V=0;V<B.added.length;V++){const ht=B.added[V];let ct=v.indexOf(ht);if(ct===-1){for(let Rt=0;Rt<M.length;Rt++)if(Rt>=v.length){v.push(ht),ct=Rt;break}else if(v[Rt]===null){v[Rt]=ht,ct=Rt;break}if(ct===-1)break}const _t=M[ct];_t&&_t.connect(ht)}}const I=new P,O=new P;function N(B,V,ht){I.setFromMatrixPosition(V.matrixWorld),O.setFromMatrixPosition(ht.matrixWorld);const ct=I.distanceTo(O),_t=V.projectionMatrix.elements,Rt=ht.projectionMatrix.elements,wt=_t[14]/(_t[10]-1),bt=_t[14]/(_t[10]+1),Vt=(_t[9]+1)/_t[5],Kt=(_t[9]-1)/_t[5],Ct=(_t[8]-1)/_t[0],L=(Rt[8]+1)/Rt[0],ut=wt*Ct,J=wt*L,ot=ct/(-Ct+L),et=ot*-Ct;V.matrixWorld.decompose(B.position,B.quaternion,B.scale),B.translateX(et),B.translateZ(ot),B.matrixWorld.compose(B.position,B.quaternion,B.scale),B.matrixWorldInverse.copy(B.matrixWorld).invert();const Tt=wt+ot,xt=bt+ot,Mt=ut-et,Lt=J+(ct-et),Bt=Vt*bt/xt*Tt,se=Kt*bt/xt*Tt;B.projectionMatrix.makePerspective(Mt,Lt,Bt,se,Tt,xt),B.projectionMatrixInverse.copy(B.projectionMatrix).invert()}function X(B,V){V===null?B.matrixWorld.copy(B.matrix):B.matrixWorld.multiplyMatrices(V.matrixWorld,B.matrix),B.matrixWorldInverse.copy(B.matrixWorld).invert()}this.updateCamera=function(B){if(i===null)return;E.near=S.near=x.near=B.near,E.far=S.far=x.far=B.far,(A!==E.near||y!==E.far)&&(i.updateRenderState({depthNear:E.near,depthFar:E.far}),A=E.near,y=E.far);const V=B.parent,ht=E.cameras;X(E,V);for(let ct=0;ct<ht.length;ct++)X(ht[ct],V);ht.length===2?N(E,x,S):E.projectionMatrix.copy(x.projectionMatrix),k(B,E,V)};function k(B,V,ht){ht===null?B.matrix.copy(V.matrixWorld):(B.matrix.copy(ht.matrixWorld),B.matrix.invert(),B.matrix.multiply(V.matrixWorld)),B.matrix.decompose(B.position,B.quaternion,B.scale),B.updateMatrixWorld(!0),B.projectionMatrix.copy(V.projectionMatrix),B.projectionMatrixInverse.copy(V.projectionMatrixInverse),B.isPerspectiveCamera&&(B.fov=Ps*2*Math.atan(1/B.projectionMatrix.elements[5]),B.zoom=1)}this.getCamera=function(){return E},this.getFoveation=function(){if(!(f===null&&d===null))return l},this.setFoveation=function(B){l=B,f!==null&&(f.fixedFoveation=B),d!==null&&d.fixedFoveation!==void 0&&(d.fixedFoveation=B)};let Y=null;function Q(B,V){if(u=V.getViewerPose(c||o),g=V,u!==null){const ht=u.views;d!==null&&(t.setRenderTargetFramebuffer(p,d.framebuffer),t.setRenderTarget(p));let ct=!1;ht.length!==E.cameras.length&&(E.cameras.length=0,ct=!0);for(let _t=0;_t<ht.length;_t++){const Rt=ht[_t];let wt=null;if(d!==null)wt=d.getViewport(Rt);else{const Vt=h.getViewSubImage(f,Rt);wt=Vt.viewport,_t===0&&(t.setRenderTargetTextures(p,Vt.colorTexture,f.ignoreDepthValues?void 0:Vt.depthStencilTexture),t.setRenderTarget(p))}let bt=T[_t];bt===void 0&&(bt=new Sn,bt.layers.enable(_t),bt.viewport=new Ue,T[_t]=bt),bt.matrix.fromArray(Rt.transform.matrix),bt.matrix.decompose(bt.position,bt.quaternion,bt.scale),bt.projectionMatrix.fromArray(Rt.projectionMatrix),bt.projectionMatrixInverse.copy(bt.projectionMatrix).invert(),bt.viewport.set(wt.x,wt.y,wt.width,wt.height),_t===0&&(E.matrix.copy(bt.matrix),E.matrix.decompose(E.position,E.quaternion,E.scale)),ct===!0&&E.cameras.push(bt)}}for(let ht=0;ht<M.length;ht++){const ct=v[ht],_t=M[ht];ct!==null&&_t!==void 0&&_t.update(ct,V,c||o)}Y&&Y(B,V),V.detectedPlanes&&n.dispatchEvent({type:"planesdetected",data:V}),g=null}const $=new Kl;$.setAnimationLoop(Q),this.setAnimationLoop=function(B){Y=B},this.dispose=function(){}}}function Y9(r,t){function e(m,p){m.matrixAutoUpdate===!0&&m.updateMatrix(),p.value.copy(m.matrix)}function n(m,p){p.color.getRGB(m.fogColor.value,Yl(r)),p.isFog?(m.fogNear.value=p.near,m.fogFar.value=p.far):p.isFogExp2&&(m.fogDensity.value=p.density)}function i(m,p,M,v,x){p.isMeshBasicMaterial||p.isMeshLambertMaterial?s(m,p):p.isMeshToonMaterial?(s(m,p),h(m,p)):p.isMeshPhongMaterial?(s(m,p),u(m,p)):p.isMeshStandardMaterial?(s(m,p),f(m,p),p.isMeshPhysicalMaterial&&d(m,p,x)):p.isMeshMatcapMaterial?(s(m,p),g(m,p)):p.isMeshDepthMaterial?s(m,p):p.isMeshDistanceMaterial?(s(m,p),_(m,p)):p.isMeshNormalMaterial?s(m,p):p.isLineBasicMaterial?(o(m,p),p.isLineDashedMaterial&&a(m,p)):p.isPointsMaterial?l(m,p,M,v):p.isSpriteMaterial?c(m,p):p.isShadowMaterial?(m.color.value.copy(p.color),m.opacity.value=p.opacity):p.isShaderMaterial&&(p.uniformsNeedUpdate=!1)}function s(m,p){m.opacity.value=p.opacity,p.color&&m.diffuse.value.copy(p.color),p.emissive&&m.emissive.value.copy(p.emissive).multiplyScalar(p.emissiveIntensity),p.map&&(m.map.value=p.map,e(p.map,m.mapTransform)),p.alphaMap&&(m.alphaMap.value=p.alphaMap,e(p.alphaMap,m.alphaMapTransform)),p.bumpMap&&(m.bumpMap.value=p.bumpMap,e(p.bumpMap,m.bumpMapTransform),m.bumpScale.value=p.bumpScale,p.side===ze&&(m.bumpScale.value*=-1)),p.normalMap&&(m.normalMap.value=p.normalMap,e(p.normalMap,m.normalMapTransform),m.normalScale.value.copy(p.normalScale),p.side===ze&&m.normalScale.value.negate()),p.displacementMap&&(m.displacementMap.value=p.displacementMap,e(p.displacementMap,m.displacementMapTransform),m.displacementScale.value=p.displacementScale,m.displacementBias.value=p.displacementBias),p.emissiveMap&&(m.emissiveMap.value=p.emissiveMap,e(p.emissiveMap,m.emissiveMapTransform)),p.specularMap&&(m.specularMap.value=p.specularMap,e(p.specularMap,m.specularMapTransform)),p.alphaTest>0&&(m.alphaTest.value=p.alphaTest);const M=t.get(p).envMap;if(M&&(m.envMap.value=M,m.flipEnvMap.value=M.isCubeTexture&&M.isRenderTargetTexture===!1?-1:1,m.reflectivity.value=p.reflectivity,m.ior.value=p.ior,m.refractionRatio.value=p.refractionRatio),p.lightMap){m.lightMap.value=p.lightMap;const v=r._useLegacyLights===!0?Math.PI:1;m.lightMapIntensity.value=p.lightMapIntensity*v,e(p.lightMap,m.lightMapTransform)}p.aoMap&&(m.aoMap.value=p.aoMap,m.aoMapIntensity.value=p.aoMapIntensity,e(p.aoMap,m.aoMapTransform))}function o(m,p){m.diffuse.value.copy(p.color),m.opacity.value=p.opacity,p.map&&(m.map.value=p.map,e(p.map,m.mapTransform))}function a(m,p){m.dashSize.value=p.dashSize,m.totalSize.value=p.dashSize+p.gapSize,m.scale.value=p.scale}function l(m,p,M,v){m.diffuse.value.copy(p.color),m.opacity.value=p.opacity,m.size.value=p.size*M,m.scale.value=v*.5,p.map&&(m.map.value=p.map,e(p.map,m.uvTransform)),p.alphaMap&&(m.alphaMap.value=p.alphaMap,e(p.alphaMap,m.alphaMapTransform)),p.alphaTest>0&&(m.alphaTest.value=p.alphaTest)}function c(m,p){m.diffuse.value.copy(p.color),m.opacity.value=p.opacity,m.rotation.value=p.rotation,p.map&&(m.map.value=p.map,e(p.map,m.mapTransform)),p.alphaMap&&(m.alphaMap.value=p.alphaMap,e(p.alphaMap,m.alphaMapTransform)),p.alphaTest>0&&(m.alphaTest.value=p.alphaTest)}function u(m,p){m.specular.value.copy(p.specular),m.shininess.value=Math.max(p.shininess,1e-4)}function h(m,p){p.gradientMap&&(m.gradientMap.value=p.gradientMap)}function f(m,p){m.metalness.value=p.metalness,p.metalnessMap&&(m.metalnessMap.value=p.metalnessMap,e(p.metalnessMap,m.metalnessMapTransform)),m.roughness.value=p.roughness,p.roughnessMap&&(m.roughnessMap.value=p.roughnessMap,e(p.roughnessMap,m.roughnessMapTransform)),t.get(p).envMap&&(m.envMapIntensity.value=p.envMapIntensity)}function d(m,p,M){m.ior.value=p.ior,p.sheen>0&&(m.sheenColor.value.copy(p.sheenColor).multiplyScalar(p.sheen),m.sheenRoughness.value=p.sheenRoughness,p.sheenColorMap&&(m.sheenColorMap.value=p.sheenColorMap,e(p.sheenColorMap,m.sheenColorMapTransform)),p.sheenRoughnessMap&&(m.sheenRoughnessMap.value=p.sheenRoughnessMap,e(p.sheenRoughnessMap,m.sheenRoughnessMapTransform))),p.clearcoat>0&&(m.clearcoat.value=p.clearcoat,m.clearcoatRoughness.value=p.clearcoatRoughness,p.clearcoatMap&&(m.clearcoatMap.value=p.clearcoatMap,e(p.clearcoatMap,m.clearcoatMapTransform)),p.clearcoatRoughnessMap&&(m.clearcoatRoughnessMap.value=p.clearcoatRoughnessMap,e(p.clearcoatRoughnessMap,m.clearcoatRoughnessMapTransform)),p.clearcoatNormalMap&&(m.clearcoatNormalMap.value=p.clearcoatNormalMap,e(p.clearcoatNormalMap,m.clearcoatNormalMapTransform),m.clearcoatNormalScale.value.copy(p.clearcoatNormalScale),p.side===ze&&m.clearcoatNormalScale.value.negate())),p.iridescence>0&&(m.iridescence.value=p.iridescence,m.iridescenceIOR.value=p.iridescenceIOR,m.iridescenceThicknessMinimum.value=p.iridescenceThicknessRange[0],m.iridescenceThicknessMaximum.value=p.iridescenceThicknessRange[1],p.iridescenceMap&&(m.iridescenceMap.value=p.iridescenceMap,e(p.iridescenceMap,m.iridescenceMapTransform)),p.iridescenceThicknessMap&&(m.iridescenceThicknessMap.value=p.iridescenceThicknessMap,e(p.iridescenceThicknessMap,m.iridescenceThicknessMapTransform))),p.transmission>0&&(m.transmission.value=p.transmission,m.transmissionSamplerMap.value=M.texture,m.transmissionSamplerSize.value.set(M.width,M.height),p.transmissionMap&&(m.transmissionMap.value=p.transmissionMap,e(p.transmissionMap,m.transmissionMapTransform)),m.thickness.value=p.thickness,p.thicknessMap&&(m.thicknessMap.value=p.thicknessMap,e(p.thicknessMap,m.thicknessMapTransform)),m.attenuationDistance.value=p.attenuationDistance,m.attenuationColor.value.copy(p.attenuationColor)),p.anisotropy>0&&(m.anisotropyVector.value.set(p.anisotropy*Math.cos(p.anisotropyRotation),p.anisotropy*Math.sin(p.anisotropyRotation)),p.anisotropyMap&&(m.anisotropyMap.value=p.anisotropyMap,e(p.anisotropyMap,m.anisotropyMapTransform))),m.specularIntensity.value=p.specularIntensity,m.specularColor.value.copy(p.specularColor),p.specularColorMap&&(m.specularColorMap.value=p.specularColorMap,e(p.specularColorMap,m.specularColorMapTransform)),p.specularIntensityMap&&(m.specularIntensityMap.value=p.specularIntensityMap,e(p.specularIntensityMap,m.specularIntensityMapTransform))}function g(m,p){p.matcap&&(m.matcap.value=p.matcap)}function _(m,p){const M=t.get(p).light;m.referencePosition.value.setFromMatrixPosition(M.matrixWorld),m.nearDistance.value=M.shadow.camera.near,m.farDistance.value=M.shadow.camera.far}return{refreshFogUniforms:n,refreshMaterialUniforms:i}}function j9(r,t,e,n){let i={},s={},o=[];const a=e.isWebGL2?r.getParameter(r.MAX_UNIFORM_BUFFER_BINDINGS):0;function l(M,v){const x=v.program;n.uniformBlockBinding(M,x)}function c(M,v){let x=i[M.id];x===void 0&&(g(M),x=u(M),i[M.id]=x,M.addEventListener("dispose",m));const S=v.program;n.updateUBOMapping(M,S);const T=t.render.frame;s[M.id]!==T&&(f(M),s[M.id]=T)}function u(M){const v=h();M.__bindingPointIndex=v;const x=r.createBuffer(),S=M.__size,T=M.usage;return r.bindBuffer(r.UNIFORM_BUFFER,x),r.bufferData(r.UNIFORM_BUFFER,S,T),r.bindBuffer(r.UNIFORM_BUFFER,null),r.bindBufferBase(r.UNIFORM_BUFFER,v,x),x}function h(){for(let M=0;M<a;M++)if(o.indexOf(M)===-1)return o.push(M),M;return console.error("THREE.WebGLRenderer: Maximum number of simultaneously usable uniforms groups reached."),0}function f(M){const v=i[M.id],x=M.uniforms,S=M.__cache;r.bindBuffer(r.UNIFORM_BUFFER,v);for(let T=0,E=x.length;T<E;T++){const A=x[T];if(d(A,T,S)===!0){const y=A.__offset,b=Array.isArray(A.value)?A.value:[A.value];let F=0;for(let z=0;z<b.length;z++){const I=b[z],O=_(I);typeof I=="number"?(A.__data[0]=I,r.bufferSubData(r.UNIFORM_BUFFER,y+F,A.__data)):I.isMatrix3?(A.__data[0]=I.elements[0],A.__data[1]=I.elements[1],A.__data[2]=I.elements[2],A.__data[3]=I.elements[0],A.__data[4]=I.elements[3],A.__data[5]=I.elements[4],A.__data[6]=I.elements[5],A.__data[7]=I.elements[0],A.__data[8]=I.elements[6],A.__data[9]=I.elements[7],A.__data[10]=I.elements[8],A.__data[11]=I.elements[0]):(I.toArray(A.__data,F),F+=O.storage/Float32Array.BYTES_PER_ELEMENT)}r.bufferSubData(r.UNIFORM_BUFFER,y,A.__data)}}r.bindBuffer(r.UNIFORM_BUFFER,null)}function d(M,v,x){const S=M.value;if(x[v]===void 0){if(typeof S=="number")x[v]=S;else{const T=Array.isArray(S)?S:[S],E=[];for(let A=0;A<T.length;A++)E.push(T[A].clone());x[v]=E}return!0}else if(typeof S=="number"){if(x[v]!==S)return x[v]=S,!0}else{const T=Array.isArray(x[v])?x[v]:[x[v]],E=Array.isArray(S)?S:[S];for(let A=0;A<T.length;A++){const y=T[A];if(y.equals(E[A])===!1)return y.copy(E[A]),!0}}return!1}function g(M){const v=M.uniforms;let x=0;const S=16;let T=0;for(let E=0,A=v.length;E<A;E++){const y=v[E],b={boundary:0,storage:0},F=Array.isArray(y.value)?y.value:[y.value];for(let z=0,I=F.length;z<I;z++){const O=F[z],N=_(O);b.boundary+=N.boundary,b.storage+=N.storage}if(y.__data=new Float32Array(b.storage/Float32Array.BYTES_PER_ELEMENT),y.__offset=x,E>0){T=x%S;const z=S-T;T!==0&&z-b.boundary<0&&(x+=S-T,y.__offset=x)}x+=b.storage}return T=x%S,T>0&&(x+=S-T),M.__size=x,M.__cache={},this}function _(M){const v={boundary:0,storage:0};return typeof M=="number"?(v.boundary=4,v.storage=4):M.isVector2?(v.boundary=8,v.storage=8):M.isVector3||M.isColor?(v.boundary=16,v.storage=12):M.isVector4?(v.boundary=16,v.storage=16):M.isMatrix3?(v.boundary=48,v.storage=48):M.isMatrix4?(v.boundary=64,v.storage=64):M.isTexture?console.warn("THREE.WebGLRenderer: Texture samplers can not be part of an uniforms group."):console.warn("THREE.WebGLRenderer: Unsupported uniform value type.",M),v}function m(M){const v=M.target;v.removeEventListener("dispose",m);const x=o.indexOf(v.__bindingPointIndex);o.splice(x,1),r.deleteBuffer(i[v.id]),delete i[v.id],delete s[v.id]}function p(){for(const M in i)r.deleteBuffer(i[M]);o=[],i={},s={}}return{bind:l,update:c,dispose:p}}class nc{constructor(t={}){const{canvas:e=k2(),context:n=null,depth:i=!0,stencil:s=!0,alpha:o=!1,antialias:a=!1,premultipliedAlpha:l=!0,preserveDrawingBuffer:c=!1,powerPreference:u="default",failIfMajorPerformanceCaveat:h=!1}=t;this.isWebGLRenderer=!0;let f;n!==null?f=n.getContextAttributes().alpha:f=o;const d=new Uint32Array(4),g=new Int32Array(4);let _=null,m=null;const p=[],M=[];this.domElement=e,this.debug={checkShaderErrors:!0,onShaderError:null},this.autoClear=!0,this.autoClearColor=!0,this.autoClearDepth=!0,this.autoClearStencil=!0,this.sortObjects=!0,this.clippingPlanes=[],this.localClippingEnabled=!1,this.outputColorSpace=ae,this._useLegacyLights=!1,this.toneMapping=Ei,this.toneMappingExposure=1;const v=this;let x=!1,S=0,T=0,E=null,A=-1,y=null;const b=new Ue,F=new Ue;let z=null;const I=new qt(0);let O=0,N=e.width,X=e.height,k=1,Y=null,Q=null;const $=new Ue(0,0,N,X),B=new Ue(0,0,N,X);let V=!1;const ht=new V0;let ct=!1,_t=!1,Rt=null;const wt=new ge,bt=new it,Vt=new P,Kt={background:null,fog:null,environment:null,overrideMaterial:null,isScene:!0};function Ct(){return E===null?k:1}let L=n;function ut(R,G){for(let Z=0;Z<R.length;Z++){const H=R[Z],K=e.getContext(H,G);if(K!==null)return K}return null}try{const R={alpha:!0,depth:i,stencil:s,antialias:a,premultipliedAlpha:l,preserveDrawingBuffer:c,powerPreference:u,failIfMajorPerformanceCaveat:h};if("setAttribute"in e&&e.setAttribute("data-engine",`three.js r${z0}`),e.addEventListener("webglcontextlost",mt,!1),e.addEventListener("webglcontextrestored",j,!1),e.addEventListener("webglcontextcreationerror",rt,!1),L===null){const G=["webgl2","webgl","experimental-webgl"];if(v.isWebGL1Renderer===!0&&G.shift(),L=ut(G,R),L===null)throw ut(G)?new Error("Error creating WebGL context with your selected attributes."):new Error("Error creating WebGL context.")}typeof WebGLRenderingContext<"u"&&L instanceof WebGLRenderingContext&&console.warn("THREE.WebGLRenderer: WebGL 1 support was deprecated in r153 and will be removed in r163."),L.getShaderPrecisionFormat===void 0&&(L.getShaderPrecisionFormat=function(){return{rangeMin:1,rangeMax:1,precision:1}})}catch(R){throw console.error("THREE.WebGLRenderer: "+R.message),R}let J,ot,et,Tt,xt,Mt,Lt,Bt,se,C,w,W,st,nt,at,Et,lt,q,D,tt,vt,dt,gt,Nt;function Wt(){J=new rd(L),ot=new Jf(L,J,t),J.init(ot),dt=new H9(L,J,ot),et=new B9(L,J,ot),Tt=new ad(L),xt=new b9,Mt=new k9(L,J,et,xt,ot,dt,Tt),Lt=new td(v),Bt=new id(v),se=new _u(L,ot),gt=new Kf(L,J,se,ot),C=new sd(L,se,Tt,gt),w=new hd(L,C,se,Tt),D=new ud(L,ot,Mt),Et=new Qf(xt),W=new T9(v,Lt,Bt,J,ot,gt,Et),st=new Y9(v,xt),nt=new A9,at=new U9(J,ot),q=new Zf(v,Lt,Bt,et,w,f,l),lt=new z9(v,w,ot),Nt=new j9(L,Tt,ot,et),tt=new $f(L,J,Tt,ot),vt=new od(L,J,Tt,ot),Tt.programs=W.programs,v.capabilities=ot,v.extensions=J,v.properties=xt,v.renderLists=nt,v.shadowMap=lt,v.state=et,v.info=Tt}Wt();const U=new q9(v,L);this.xr=U,this.getContext=function(){return L},this.getContextAttributes=function(){return L.getContextAttributes()},this.forceContextLoss=function(){const R=J.get("WEBGL_lose_context");R&&R.loseContext()},this.forceContextRestore=function(){const R=J.get("WEBGL_lose_context");R&&R.restoreContext()},this.getPixelRatio=function(){return k},this.setPixelRatio=function(R){R!==void 0&&(k=R,this.setSize(N,X,!1))},this.getSize=function(R){return R.set(N,X)},this.setSize=function(R,G,Z=!0){if(U.isPresenting){console.warn("THREE.WebGLRenderer: Can't change size while VR device is presenting.");return}N=R,X=G,e.width=Math.floor(R*k),e.height=Math.floor(G*k),Z===!0&&(e.style.width=R+"px",e.style.height=G+"px"),this.setViewport(0,0,R,G)},this.getDrawingBufferSize=function(R){return R.set(N*k,X*k).floor()},this.setDrawingBufferSize=function(R,G,Z){N=R,X=G,k=Z,e.width=Math.floor(R*Z),e.height=Math.floor(G*Z),this.setViewport(0,0,R,G)},this.getCurrentViewport=function(R){return R.copy(b)},this.getViewport=function(R){return R.copy($)},this.setViewport=function(R,G,Z,H){R.isVector4?$.set(R.x,R.y,R.z,R.w):$.set(R,G,Z,H),et.viewport(b.copy($).multiplyScalar(k).floor())},this.getScissor=function(R){return R.copy(B)},this.setScissor=function(R,G,Z,H){R.isVector4?B.set(R.x,R.y,R.z,R.w):B.set(R,G,Z,H),et.scissor(F.copy(B).multiplyScalar(k).floor())},this.getScissorTest=function(){return V},this.setScissorTest=function(R){et.setScissorTest(V=R)},this.setOpaqueSort=function(R){Y=R},this.setTransparentSort=function(R){Q=R},this.getClearColor=function(R){return R.copy(q.getClearColor())},this.setClearColor=function(){q.setClearColor.apply(q,arguments)},this.getClearAlpha=function(){return q.getClearAlpha()},this.setClearAlpha=function(){q.setClearAlpha.apply(q,arguments)},this.clear=function(R=!0,G=!0,Z=!0){let H=0;if(R){let K=!1;if(E!==null){const St=E.texture.format;K=St===zl||St===Fl||St===Nl}if(K){const St=E.texture.type,Pt=St===Ti||St===gi||St===B0||St===Wi||St===Il||St===Ol,It=q.getClearColor(),Ot=q.getClearAlpha(),Gt=It.r,Ut=It.g,Ft=It.b;Pt?(d[0]=Gt,d[1]=Ut,d[2]=Ft,d[3]=Ot,L.clearBufferuiv(L.COLOR,0,d)):(g[0]=Gt,g[1]=Ut,g[2]=Ft,g[3]=Ot,L.clearBufferiv(L.COLOR,0,g))}else H|=L.COLOR_BUFFER_BIT}G&&(H|=L.DEPTH_BUFFER_BIT),Z&&(H|=L.STENCIL_BUFFER_BIT),L.clear(H)},this.clearColor=function(){this.clear(!0,!1,!1)},this.clearDepth=function(){this.clear(!1,!0,!1)},this.clearStencil=function(){this.clear(!1,!1,!0)},this.dispose=function(){e.removeEventListener("webglcontextlost",mt,!1),e.removeEventListener("webglcontextrestored",j,!1),e.removeEventListener("webglcontextcreationerror",rt,!1),nt.dispose(),at.dispose(),xt.dispose(),Lt.dispose(),Bt.dispose(),w.dispose(),gt.dispose(),Nt.dispose(),W.dispose(),U.dispose(),U.removeEventListener("sessionstart",ie),U.removeEventListener("sessionend",Nn),Rt&&(Rt.dispose(),Rt=null),Xe.stop()};function mt(R){R.preventDefault(),console.log("THREE.WebGLRenderer: Context Lost."),x=!0}function j(){console.log("THREE.WebGLRenderer: Context Restored."),x=!1;const R=Tt.autoReset,G=lt.enabled,Z=lt.autoUpdate,H=lt.needsUpdate,K=lt.type;Wt(),Tt.autoReset=R,lt.enabled=G,lt.autoUpdate=Z,lt.needsUpdate=H,lt.type=K}function rt(R){console.error("THREE.WebGLRenderer: A WebGL context could not be created. Reason: ",R.statusMessage)}function ft(R){const G=R.target;G.removeEventListener("dispose",ft),kt(G)}function kt(R){jt(R),xt.remove(R)}function jt(R){const G=xt.get(R).programs;G!==void 0&&(G.forEach(function(Z){W.releaseProgram(Z)}),R.isShaderMaterial&&W.releaseShaderCache(R))}this.renderBufferDirect=function(R,G,Z,H,K,St){G===null&&(G=Kt);const Pt=K.isMesh&&K.matrixWorld.determinant()<0,It=S6(R,G,Z,H,K);et.setMaterial(H,Pt);let Ot=Z.index,Gt=1;if(H.wireframe===!0){if(Ot=C.getWireframeAttribute(Z),Ot===void 0)return;Gt=2}const Ut=Z.drawRange,Ft=Z.attributes.position;let fe=Ut.start*Gt,ve=(Ut.start+Ut.count)*Gt;St!==null&&(fe=Math.max(fe,St.start*Gt),ve=Math.min(ve,(St.start+St.count)*Gt)),Ot!==null?(fe=Math.max(fe,0),ve=Math.min(ve,Ot.count)):Ft!=null&&(fe=Math.max(fe,0),ve=Math.min(ve,Ft.count));const _n=ve-fe;if(_n<0||_n===1/0)return;gt.setup(K,H,It,Z,Ot);let Yn,Se=tt;if(Ot!==null&&(Yn=se.get(Ot),Se=vt,Se.setIndex(Yn)),K.isMesh)H.wireframe===!0?(et.setLineWidth(H.wireframeLinewidth*Ct()),Se.setMode(L.LINES)):Se.setMode(L.TRIANGLES);else if(K.isLine){let Ht=H.linewidth;Ht===void 0&&(Ht=1),et.setLineWidth(Ht*Ct()),K.isLineSegments?Se.setMode(L.LINES):K.isLineLoop?Se.setMode(L.LINE_LOOP):Se.setMode(L.LINE_STRIP)}else K.isPoints?Se.setMode(L.POINTS):K.isSprite&&Se.setMode(L.TRIANGLES);if(K.isInstancedMesh)Se.renderInstances(fe,_n,K.count);else if(Z.isInstancedBufferGeometry){const Ht=Z._maxInstanceCount!==void 0?Z._maxInstanceCount:1/0,la=Math.min(Z.instanceCount,Ht);Se.renderInstances(fe,_n,la)}else Se.render(fe,_n)},this.compile=function(R,G){function Z(H,K,St){H.transparent===!0&&H.side===fn&&H.forceSinglePass===!1?(H.side=ze,H.needsUpdate=!0,to(H,K,St),H.side=wn,H.needsUpdate=!0,to(H,K,St),H.side=fn):to(H,K,St)}m=at.get(R),m.init(),M.push(m),R.traverseVisible(function(H){H.isLight&&H.layers.test(G.layers)&&(m.pushLight(H),H.castShadow&&m.pushShadow(H))}),m.setupLights(v._useLegacyLights),R.traverse(function(H){const K=H.material;if(K)if(Array.isArray(K))for(let St=0;St<K.length;St++){const Pt=K[St];Z(Pt,R,H)}else Z(K,R,H)}),M.pop(),m=null};let ne=null;function on(R){ne&&ne(R)}function ie(){Xe.stop()}function Nn(){Xe.start()}const Xe=new Kl;Xe.setAnimationLoop(on),typeof self<"u"&&Xe.setContext(self),this.setAnimationLoop=function(R){ne=R,U.setAnimationLoop(R),R===null?Xe.stop():Xe.start()},U.addEventListener("sessionstart",ie),U.addEventListener("sessionend",Nn),this.render=function(R,G){if(G!==void 0&&G.isCamera!==!0){console.error("THREE.WebGLRenderer.render: camera is not an instance of THREE.Camera.");return}if(x===!0)return;R.matrixWorldAutoUpdate===!0&&R.updateMatrixWorld(),G.parent===null&&G.matrixWorldAutoUpdate===!0&&G.updateMatrixWorld(),U.enabled===!0&&U.isPresenting===!0&&(U.cameraAutoUpdate===!0&&U.updateCamera(G),G=U.getCamera()),R.isScene===!0&&R.onBeforeRender(v,R,G,E),m=at.get(R,M.length),m.init(),M.push(m),wt.multiplyMatrices(G.projectionMatrix,G.matrixWorldInverse),ht.setFromProjectionMatrix(wt),_t=this.localClippingEnabled,ct=Et.init(this.clippingPlanes,_t),_=nt.get(R,p.length),_.init(),p.push(_),x3(R,G,0,v.sortObjects),_.finish(),v.sortObjects===!0&&_.sort(Y,Q),this.info.render.frame++,ct===!0&&Et.beginShadows();const Z=m.state.shadowsArray;if(lt.render(Z,R,G),ct===!0&&Et.endShadows(),this.info.autoReset===!0&&this.info.reset(),q.render(_,R),m.setupLights(v._useLegacyLights),G.isArrayCamera){const H=G.cameras;for(let K=0,St=H.length;K<St;K++){const Pt=H[K];y3(_,R,Pt,Pt.viewport)}}else y3(_,R,G);E!==null&&(Mt.updateMultisampleRenderTarget(E),Mt.updateRenderTargetMipmap(E)),R.isScene===!0&&R.onAfterRender(v,R,G),gt.resetDefaultState(),A=-1,y=null,M.pop(),M.length>0?m=M[M.length-1]:m=null,p.pop(),p.length>0?_=p[p.length-1]:_=null};function x3(R,G,Z,H){if(R.visible===!1)return;if(R.layers.test(G.layers)){if(R.isGroup)Z=R.renderOrder;else if(R.isLOD)R.autoUpdate===!0&&R.update(G);else if(R.isLight)m.pushLight(R),R.castShadow&&m.pushShadow(R);else if(R.isSprite){if(!R.frustumCulled||ht.intersectsSprite(R)){H&&Vt.setFromMatrixPosition(R.matrixWorld).applyMatrix4(wt);const Pt=w.update(R),It=R.material;It.visible&&_.push(R,Pt,It,Z,Vt.z,null)}}else if((R.isMesh||R.isLine||R.isPoints)&&(!R.frustumCulled||ht.intersectsObject(R))){const Pt=w.update(R),It=R.material;if(H&&(R.boundingSphere!==void 0?(R.boundingSphere===null&&R.computeBoundingSphere(),Vt.copy(R.boundingSphere.center)):(Pt.boundingSphere===null&&Pt.computeBoundingSphere(),Vt.copy(Pt.boundingSphere.center)),Vt.applyMatrix4(R.matrixWorld).applyMatrix4(wt)),Array.isArray(It)){const Ot=Pt.groups;for(let Gt=0,Ut=Ot.length;Gt<Ut;Gt++){const Ft=Ot[Gt],fe=It[Ft.materialIndex];fe&&fe.visible&&_.push(R,Pt,fe,Z,Vt.z,Ft)}}else It.visible&&_.push(R,Pt,It,Z,Vt.z,null)}}const St=R.children;for(let Pt=0,It=St.length;Pt<It;Pt++)x3(St[Pt],G,Z,H)}function y3(R,G,Z,H){const K=R.opaque,St=R.transmissive,Pt=R.transparent;m.setupLightsView(Z),ct===!0&&Et.setGlobalState(v.clippingPlanes,Z),St.length>0&&M6(K,St,G,Z),H&&et.viewport(b.copy(H)),K.length>0&&Qs(K,G,Z),St.length>0&&Qs(St,G,Z),Pt.length>0&&Qs(Pt,G,Z),et.buffers.depth.setTest(!0),et.buffers.depth.setMask(!0),et.buffers.color.setMask(!0),et.setPolygonOffset(!1)}function M6(R,G,Z,H){const K=ot.isWebGL2;Rt===null&&(Rt=new tr(1,1,{generateMipmaps:!0,type:J.has("EXT_color_buffer_half_float")?Cs:Ti,minFilter:Rs,samples:K?4:0})),v.getDrawingBufferSize(bt),K?Rt.setSize(bt.x,bt.y):Rt.setSize(Fo(bt.x),Fo(bt.y));const St=v.getRenderTarget();v.setRenderTarget(Rt),v.getClearColor(I),O=v.getClearAlpha(),O<1&&v.setClearColor(16777215,.5),v.clear();const Pt=v.toneMapping;v.toneMapping=Ei,Qs(R,Z,H),Mt.updateMultisampleRenderTarget(Rt),Mt.updateRenderTargetMipmap(Rt);let It=!1;for(let Ot=0,Gt=G.length;Ot<Gt;Ot++){const Ut=G[Ot],Ft=Ut.object,fe=Ut.geometry,ve=Ut.material,_n=Ut.group;if(ve.side===fn&&Ft.layers.test(H.layers)){const Yn=ve.side;ve.side=ze,ve.needsUpdate=!0,M3(Ft,Z,H,fe,ve,_n),ve.side=Yn,ve.needsUpdate=!0,It=!0}}It===!0&&(Mt.updateMultisampleRenderTarget(Rt),Mt.updateRenderTargetMipmap(Rt)),v.setRenderTarget(St),v.setClearColor(I,O),v.toneMapping=Pt}function Qs(R,G,Z){const H=G.isScene===!0?G.overrideMaterial:null;for(let K=0,St=R.length;K<St;K++){const Pt=R[K],It=Pt.object,Ot=Pt.geometry,Gt=H===null?Pt.material:H,Ut=Pt.group;It.layers.test(Z.layers)&&M3(It,G,Z,Ot,Gt,Ut)}}function M3(R,G,Z,H,K,St){R.onBeforeRender(v,G,Z,H,K,St),R.modelViewMatrix.multiplyMatrices(Z.matrixWorldInverse,R.matrixWorld),R.normalMatrix.getNormalMatrix(R.modelViewMatrix),K.onBeforeRender(v,G,Z,H,R,St),K.transparent===!0&&K.side===fn&&K.forceSinglePass===!1?(K.side=ze,K.needsUpdate=!0,v.renderBufferDirect(Z,G,H,K,R,St),K.side=wn,K.needsUpdate=!0,v.renderBufferDirect(Z,G,H,K,R,St),K.side=fn):v.renderBufferDirect(Z,G,H,K,R,St),R.onAfterRender(v,G,Z,H,K,St)}function to(R,G,Z){G.isScene!==!0&&(G=Kt);const H=xt.get(R),K=m.state.lights,St=m.state.shadowsArray,Pt=K.state.version,It=W.getParameters(R,K.state,St,G,Z),Ot=W.getProgramCacheKey(It);let Gt=H.programs;H.environment=R.isMeshStandardMaterial?G.environment:null,H.fog=G.fog,H.envMap=(R.isMeshStandardMaterial?Bt:Lt).get(R.envMap||H.environment),Gt===void 0&&(R.addEventListener("dispose",ft),Gt=new Map,H.programs=Gt);let Ut=Gt.get(Ot);if(Ut!==void 0){if(H.currentProgram===Ut&&H.lightsStateVersion===Pt)return S3(R,It),Ut}else It.uniforms=W.getUniforms(R),R.onBuild(Z,It,v),R.onBeforeCompile(It,v),Ut=W.acquireProgram(It,Ot),Gt.set(Ot,Ut),H.uniforms=It.uniforms;const Ft=H.uniforms;(!R.isShaderMaterial&&!R.isRawShaderMaterial||R.clipping===!0)&&(Ft.clippingPlanes=Et.uniform),S3(R,It),H.needsLights=T6(R),H.lightsStateVersion=Pt,H.needsLights&&(Ft.ambientLightColor.value=K.state.ambient,Ft.lightProbe.value=K.state.probe,Ft.directionalLights.value=K.state.directional,Ft.directionalLightShadows.value=K.state.directionalShadow,Ft.spotLights.value=K.state.spot,Ft.spotLightShadows.value=K.state.spotShadow,Ft.rectAreaLights.value=K.state.rectArea,Ft.ltc_1.value=K.state.rectAreaLTC1,Ft.ltc_2.value=K.state.rectAreaLTC2,Ft.pointLights.value=K.state.point,Ft.pointLightShadows.value=K.state.pointShadow,Ft.hemisphereLights.value=K.state.hemi,Ft.directionalShadowMap.value=K.state.directionalShadowMap,Ft.directionalShadowMatrix.value=K.state.directionalShadowMatrix,Ft.spotShadowMap.value=K.state.spotShadowMap,Ft.spotLightMatrix.value=K.state.spotLightMatrix,Ft.spotLightMap.value=K.state.spotLightMap,Ft.pointShadowMap.value=K.state.pointShadowMap,Ft.pointShadowMatrix.value=K.state.pointShadowMatrix);const fe=Ut.getUniforms(),ve=Lo.seqWithValue(fe.seq,Ft);return H.currentProgram=Ut,H.uniformsList=ve,Ut}function S3(R,G){const Z=xt.get(R);Z.outputColorSpace=G.outputColorSpace,Z.instancing=G.instancing,Z.instancingColor=G.instancingColor,Z.skinning=G.skinning,Z.morphTargets=G.morphTargets,Z.morphNormals=G.morphNormals,Z.morphColors=G.morphColors,Z.morphTargetsCount=G.morphTargetsCount,Z.numClippingPlanes=G.numClippingPlanes,Z.numIntersection=G.numClipIntersection,Z.vertexAlphas=G.vertexAlphas,Z.vertexTangents=G.vertexTangents,Z.toneMapping=G.toneMapping}function S6(R,G,Z,H,K){G.isScene!==!0&&(G=Kt),Mt.resetTextureUnits();const St=G.fog,Pt=H.isMeshStandardMaterial?G.environment:null,It=E===null?v.outputColorSpace:E.isXRRenderTarget===!0?E.texture.colorSpace:Hn,Ot=(H.isMeshStandardMaterial?Bt:Lt).get(H.envMap||Pt),Gt=H.vertexColors===!0&&!!Z.attributes.color&&Z.attributes.color.itemSize===4,Ut=!!Z.attributes.tangent&&(!!H.normalMap||H.anisotropy>0),Ft=!!Z.morphAttributes.position,fe=!!Z.morphAttributes.normal,ve=!!Z.morphAttributes.color;let _n=Ei;H.toneMapped&&(E===null||E.isXRRenderTarget===!0)&&(_n=v.toneMapping);const Yn=Z.morphAttributes.position||Z.morphAttributes.normal||Z.morphAttributes.color,Se=Yn!==void 0?Yn.length:0,Ht=xt.get(H),la=m.state.lights;if(ct===!0&&(_t===!0||R!==y)){const an=R===y&&H.id===A;Et.setState(H,R,an)}let Ee=!1;H.version===Ht.__version?(Ht.needsLights&&Ht.lightsStateVersion!==la.state.version||Ht.outputColorSpace!==It||K.isInstancedMesh&&Ht.instancing===!1||!K.isInstancedMesh&&Ht.instancing===!0||K.isSkinnedMesh&&Ht.skinning===!1||!K.isSkinnedMesh&&Ht.skinning===!0||K.isInstancedMesh&&Ht.instancingColor===!0&&K.instanceColor===null||K.isInstancedMesh&&Ht.instancingColor===!1&&K.instanceColor!==null||Ht.envMap!==Ot||H.fog===!0&&Ht.fog!==St||Ht.numClippingPlanes!==void 0&&(Ht.numClippingPlanes!==Et.numPlanes||Ht.numIntersection!==Et.numIntersection)||Ht.vertexAlphas!==Gt||Ht.vertexTangents!==Ut||Ht.morphTargets!==Ft||Ht.morphNormals!==fe||Ht.morphColors!==ve||Ht.toneMapping!==_n||ot.isWebGL2===!0&&Ht.morphTargetsCount!==Se)&&(Ee=!0):(Ee=!0,Ht.__version=H.version);let Pi=Ht.currentProgram;Ee===!0&&(Pi=to(H,G,K));let E3=!1,ls=!1,ca=!1;const qe=Pi.getUniforms(),Li=Ht.uniforms;if(et.useProgram(Pi.program)&&(E3=!0,ls=!0,ca=!0),H.id!==A&&(A=H.id,ls=!0),E3||y!==R){qe.setValue(L,"projectionMatrix",R.projectionMatrix),qe.setValue(L,"viewMatrix",R.matrixWorldInverse);const an=qe.map.cameraPosition;an!==void 0&&an.setValue(L,Vt.setFromMatrixPosition(R.matrixWorld)),ot.logarithmicDepthBuffer&&qe.setValue(L,"logDepthBufFC",2/(Math.log(R.far+1)/Math.LN2)),(H.isMeshPhongMaterial||H.isMeshToonMaterial||H.isMeshLambertMaterial||H.isMeshBasicMaterial||H.isMeshStandardMaterial||H.isShaderMaterial)&&qe.setValue(L,"isOrthographic",R.isOrthographicCamera===!0),y!==R&&(y=R,ls=!0,ca=!0)}if(K.isSkinnedMesh){qe.setOptional(L,K,"bindMatrix"),qe.setOptional(L,K,"bindMatrixInverse");const an=K.skeleton;an&&(ot.floatVertexTextures?(an.boneTexture===null&&an.computeBoneTexture(),qe.setValue(L,"boneTexture",an.boneTexture,Mt),qe.setValue(L,"boneTextureSize",an.boneTextureSize)):console.warn("THREE.WebGLRenderer: SkinnedMesh can only be used with WebGL 2. With WebGL 1 OES_texture_float and vertex textures support is required."))}const ua=Z.morphAttributes;if((ua.position!==void 0||ua.normal!==void 0||ua.color!==void 0&&ot.isWebGL2===!0)&&D.update(K,Z,Pi),(ls||Ht.receiveShadow!==K.receiveShadow)&&(Ht.receiveShadow=K.receiveShadow,qe.setValue(L,"receiveShadow",K.receiveShadow)),H.isMeshGouraudMaterial&&H.envMap!==null&&(Li.envMap.value=Ot,Li.flipEnvMap.value=Ot.isCubeTexture&&Ot.isRenderTargetTexture===!1?-1:1),ls&&(qe.setValue(L,"toneMappingExposure",v.toneMappingExposure),Ht.needsLights&&E6(Li,ca),St&&H.fog===!0&&st.refreshFogUniforms(Li,St),st.refreshMaterialUniforms(Li,H,k,X,Rt),Lo.upload(L,Ht.uniformsList,Li,Mt)),H.isShaderMaterial&&H.uniformsNeedUpdate===!0&&(Lo.upload(L,Ht.uniformsList,Li,Mt),H.uniformsNeedUpdate=!1),H.isSpriteMaterial&&qe.setValue(L,"center",K.center),qe.setValue(L,"modelViewMatrix",K.modelViewMatrix),qe.setValue(L,"normalMatrix",K.normalMatrix),qe.setValue(L,"modelMatrix",K.matrixWorld),H.isShaderMaterial||H.isRawShaderMaterial){const an=H.uniformsGroups;for(let ha=0,b6=an.length;ha<b6;ha++)if(ot.isWebGL2){const T3=an[ha];Nt.update(T3,Pi),Nt.bind(T3,Pi)}else console.warn("THREE.WebGLRenderer: Uniform Buffer Objects can only be used with WebGL 2.")}return Pi}function E6(R,G){R.ambientLightColor.needsUpdate=G,R.lightProbe.needsUpdate=G,R.directionalLights.needsUpdate=G,R.directionalLightShadows.needsUpdate=G,R.pointLights.needsUpdate=G,R.pointLightShadows.needsUpdate=G,R.spotLights.needsUpdate=G,R.spotLightShadows.needsUpdate=G,R.rectAreaLights.needsUpdate=G,R.hemisphereLights.needsUpdate=G}function T6(R){return R.isMeshLambertMaterial||R.isMeshToonMaterial||R.isMeshPhongMaterial||R.isMeshStandardMaterial||R.isShadowMaterial||R.isShaderMaterial&&R.lights===!0}this.getActiveCubeFace=function(){return S},this.getActiveMipmapLevel=function(){return T},this.getRenderTarget=function(){return E},this.setRenderTargetTextures=function(R,G,Z){xt.get(R.texture).__webglTexture=G,xt.get(R.depthTexture).__webglTexture=Z;const H=xt.get(R);H.__hasExternalTextures=!0,H.__hasExternalTextures&&(H.__autoAllocateDepthBuffer=Z===void 0,H.__autoAllocateDepthBuffer||J.has("WEBGL_multisampled_render_to_texture")===!0&&(console.warn("THREE.WebGLRenderer: Render-to-texture extension was disabled because an external texture was provided"),H.__useRenderToTexture=!1))},this.setRenderTargetFramebuffer=function(R,G){const Z=xt.get(R);Z.__webglFramebuffer=G,Z.__useDefaultFramebuffer=G===void 0},this.setRenderTarget=function(R,G=0,Z=0){E=R,S=G,T=Z;let H=!0,K=null,St=!1,Pt=!1;if(R){const Ot=xt.get(R);Ot.__useDefaultFramebuffer!==void 0?(et.bindFramebuffer(L.FRAMEBUFFER,null),H=!1):Ot.__webglFramebuffer===void 0?Mt.setupRenderTarget(R):Ot.__hasExternalTextures&&Mt.rebindTextures(R,xt.get(R.texture).__webglTexture,xt.get(R.depthTexture).__webglTexture);const Gt=R.texture;(Gt.isData3DTexture||Gt.isDataArrayTexture||Gt.isCompressedArrayTexture)&&(Pt=!0);const Ut=xt.get(R).__webglFramebuffer;R.isWebGLCubeRenderTarget?(Array.isArray(Ut[G])?K=Ut[G][Z]:K=Ut[G],St=!0):ot.isWebGL2&&R.samples>0&&Mt.useMultisampledRTT(R)===!1?K=xt.get(R).__webglMultisampledFramebuffer:Array.isArray(Ut)?K=Ut[Z]:K=Ut,b.copy(R.viewport),F.copy(R.scissor),z=R.scissorTest}else b.copy($).multiplyScalar(k).floor(),F.copy(B).multiplyScalar(k).floor(),z=V;if(et.bindFramebuffer(L.FRAMEBUFFER,K)&&ot.drawBuffers&&H&&et.drawBuffers(R,K),et.viewport(b),et.scissor(F),et.setScissorTest(z),St){const Ot=xt.get(R.texture);L.framebufferTexture2D(L.FRAMEBUFFER,L.COLOR_ATTACHMENT0,L.TEXTURE_CUBE_MAP_POSITIVE_X+G,Ot.__webglTexture,Z)}else if(Pt){const Ot=xt.get(R.texture),Gt=G||0;L.framebufferTextureLayer(L.FRAMEBUFFER,L.COLOR_ATTACHMENT0,Ot.__webglTexture,Z||0,Gt)}A=-1},this.readRenderTargetPixels=function(R,G,Z,H,K,St,Pt){if(!(R&&R.isWebGLRenderTarget)){console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not THREE.WebGLRenderTarget.");return}let It=xt.get(R).__webglFramebuffer;if(R.isWebGLCubeRenderTarget&&Pt!==void 0&&(It=It[Pt]),It){et.bindFramebuffer(L.FRAMEBUFFER,It);try{const Ot=R.texture,Gt=Ot.format,Ut=Ot.type;if(Gt!==In&&dt.convert(Gt)!==L.getParameter(L.IMPLEMENTATION_COLOR_READ_FORMAT)){console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in RGBA or implementation defined format.");return}const Ft=Ut===Cs&&(J.has("EXT_color_buffer_half_float")||ot.isWebGL2&&J.has("EXT_color_buffer_float"));if(Ut!==Ti&&dt.convert(Ut)!==L.getParameter(L.IMPLEMENTATION_COLOR_READ_TYPE)&&!(Ut===vi&&(ot.isWebGL2||J.has("OES_texture_float")||J.has("WEBGL_color_buffer_float")))&&!Ft){console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in UnsignedByteType or implementation defined type.");return}G>=0&&G<=R.width-H&&Z>=0&&Z<=R.height-K&&L.readPixels(G,Z,H,K,dt.convert(Gt),dt.convert(Ut),St)}finally{const Ot=E!==null?xt.get(E).__webglFramebuffer:null;et.bindFramebuffer(L.FRAMEBUFFER,Ot)}}},this.copyFramebufferToTexture=function(R,G,Z=0){const H=Math.pow(2,-Z),K=Math.floor(G.image.width*H),St=Math.floor(G.image.height*H);Mt.setTexture2D(G,0),L.copyTexSubImage2D(L.TEXTURE_2D,Z,0,0,R.x,R.y,K,St),et.unbindTexture()},this.copyTextureToTexture=function(R,G,Z,H=0){const K=G.image.width,St=G.image.height,Pt=dt.convert(Z.format),It=dt.convert(Z.type);Mt.setTexture2D(Z,0),L.pixelStorei(L.UNPACK_FLIP_Y_WEBGL,Z.flipY),L.pixelStorei(L.UNPACK_PREMULTIPLY_ALPHA_WEBGL,Z.premultiplyAlpha),L.pixelStorei(L.UNPACK_ALIGNMENT,Z.unpackAlignment),G.isDataTexture?L.texSubImage2D(L.TEXTURE_2D,H,R.x,R.y,K,St,Pt,It,G.image.data):G.isCompressedTexture?L.compressedTexSubImage2D(L.TEXTURE_2D,H,R.x,R.y,G.mipmaps[0].width,G.mipmaps[0].height,Pt,G.mipmaps[0].data):L.texSubImage2D(L.TEXTURE_2D,H,R.x,R.y,Pt,It,G.image),H===0&&Z.generateMipmaps&&L.generateMipmap(L.TEXTURE_2D),et.unbindTexture()},this.copyTextureToTexture3D=function(R,G,Z,H,K=0){if(v.isWebGL1Renderer){console.warn("THREE.WebGLRenderer.copyTextureToTexture3D: can only be used with WebGL2.");return}const St=R.max.x-R.min.x+1,Pt=R.max.y-R.min.y+1,It=R.max.z-R.min.z+1,Ot=dt.convert(H.format),Gt=dt.convert(H.type);let Ut;if(H.isData3DTexture)Mt.setTexture3D(H,0),Ut=L.TEXTURE_3D;else if(H.isDataArrayTexture)Mt.setTexture2DArray(H,0),Ut=L.TEXTURE_2D_ARRAY;else{console.warn("THREE.WebGLRenderer.copyTextureToTexture3D: only supports THREE.DataTexture3D and THREE.DataTexture2DArray.");return}L.pixelStorei(L.UNPACK_FLIP_Y_WEBGL,H.flipY),L.pixelStorei(L.UNPACK_PREMULTIPLY_ALPHA_WEBGL,H.premultiplyAlpha),L.pixelStorei(L.UNPACK_ALIGNMENT,H.unpackAlignment);const Ft=L.getParameter(L.UNPACK_ROW_LENGTH),fe=L.getParameter(L.UNPACK_IMAGE_HEIGHT),ve=L.getParameter(L.UNPACK_SKIP_PIXELS),_n=L.getParameter(L.UNPACK_SKIP_ROWS),Yn=L.getParameter(L.UNPACK_SKIP_IMAGES),Se=Z.isCompressedTexture?Z.mipmaps[0]:Z.image;L.pixelStorei(L.UNPACK_ROW_LENGTH,Se.width),L.pixelStorei(L.UNPACK_IMAGE_HEIGHT,Se.height),L.pixelStorei(L.UNPACK_SKIP_PIXELS,R.min.x),L.pixelStorei(L.UNPACK_SKIP_ROWS,R.min.y),L.pixelStorei(L.UNPACK_SKIP_IMAGES,R.min.z),Z.isDataTexture||Z.isData3DTexture?L.texSubImage3D(Ut,K,G.x,G.y,G.z,St,Pt,It,Ot,Gt,Se.data):Z.isCompressedArrayTexture?(console.warn("THREE.WebGLRenderer.copyTextureToTexture3D: untested support for compressed srcTexture."),L.compressedTexSubImage3D(Ut,K,G.x,G.y,G.z,St,Pt,It,Ot,Se.data)):L.texSubImage3D(Ut,K,G.x,G.y,G.z,St,Pt,It,Ot,Gt,Se),L.pixelStorei(L.UNPACK_ROW_LENGTH,Ft),L.pixelStorei(L.UNPACK_IMAGE_HEIGHT,fe),L.pixelStorei(L.UNPACK_SKIP_PIXELS,ve),L.pixelStorei(L.UNPACK_SKIP_ROWS,_n),L.pixelStorei(L.UNPACK_SKIP_IMAGES,Yn),K===0&&H.generateMipmaps&&L.generateMipmap(Ut),et.unbindTexture()},this.initTexture=function(R){R.isCubeTexture?Mt.setTextureCube(R,0):R.isData3DTexture?Mt.setTexture3D(R,0):R.isDataArrayTexture||R.isCompressedArrayTexture?Mt.setTexture2DArray(R,0):Mt.setTexture2D(R,0),et.unbindTexture()},this.resetState=function(){S=0,T=0,E=null,et.reset(),gt.reset()},typeof __THREE_DEVTOOLS__<"u"&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("observe",{detail:this}))}get coordinateSystem(){return si}get physicallyCorrectLights(){return console.warn("THREE.WebGLRenderer: The property .physicallyCorrectLights has been removed. Set renderer.useLegacyLights instead."),!this.useLegacyLights}set physicallyCorrectLights(t){console.warn("THREE.WebGLRenderer: The property .physicallyCorrectLights has been removed. Set renderer.useLegacyLights instead."),this.useLegacyLights=!t}get outputEncoding(){return console.warn("THREE.WebGLRenderer: Property .outputEncoding has been removed. Use .outputColorSpace instead."),this.outputColorSpace===ae?qi:Bl}set outputEncoding(t){console.warn("THREE.WebGLRenderer: Property .outputEncoding has been removed. Use .outputColorSpace instead."),this.outputColorSpace=t===qi?ae:Hn}get useLegacyLights(){return console.warn("THREE.WebGLRenderer: The property .useLegacyLights has been deprecated. Migrate your lighting according to the following guide: https://discourse.threejs.org/t/updates-to-lighting-in-three-js-r155/53733."),this._useLegacyLights}set useLegacyLights(t){console.warn("THREE.WebGLRenderer: The property .useLegacyLights has been deprecated. Migrate your lighting according to the following guide: https://discourse.threejs.org/t/updates-to-lighting-in-three-js-r155/53733."),this._useLegacyLights=t}}class Z9 extends nc{}Z9.prototype.isWebGL1Renderer=!0;class K9 extends pe{constructor(){super(),this.isScene=!0,this.type="Scene",this.background=null,this.environment=null,this.fog=null,this.backgroundBlurriness=0,this.backgroundIntensity=1,this.overrideMaterial=null,typeof __THREE_DEVTOOLS__<"u"&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("observe",{detail:this}))}copy(t,e){return super.copy(t,e),t.background!==null&&(this.background=t.background.clone()),t.environment!==null&&(this.environment=t.environment.clone()),t.fog!==null&&(this.fog=t.fog.clone()),this.backgroundBlurriness=t.backgroundBlurriness,this.backgroundIntensity=t.backgroundIntensity,t.overrideMaterial!==null&&(this.overrideMaterial=t.overrideMaterial.clone()),this.matrixAutoUpdate=t.matrixAutoUpdate,this}toJSON(t){const e=super.toJSON(t);return this.fog!==null&&(e.object.fog=this.fog.toJSON()),this.backgroundBlurriness>0&&(e.object.backgroundBlurriness=this.backgroundBlurriness),this.backgroundIntensity!==1&&(e.object.backgroundIntensity=this.backgroundIntensity),e}}class ic extends lr{constructor(t){super(),this.isLineBasicMaterial=!0,this.type="LineBasicMaterial",this.color=new qt(16777215),this.map=null,this.linewidth=1,this.linecap="round",this.linejoin="round",this.fog=!0,this.setValues(t)}copy(t){return super.copy(t),this.color.copy(t.color),this.map=t.map,this.linewidth=t.linewidth,this.linecap=t.linecap,this.linejoin=t.linejoin,this.fog=t.fog,this}}const H1=new P,V1=new P,W1=new ge,Ga=new Ks,Eo=new Zs;class rc extends pe{constructor(t=new Ae,e=new ic){super(),this.isLine=!0,this.type="Line",this.geometry=t,this.material=e,this.updateMorphTargets()}copy(t,e){return super.copy(t,e),this.material=Array.isArray(t.material)?t.material.slice():t.material,this.geometry=t.geometry,this}computeLineDistances(){const t=this.geometry;if(t.index===null){const e=t.attributes.position,n=[0];for(let i=1,s=e.count;i<s;i++)H1.fromBufferAttribute(e,i-1),V1.fromBufferAttribute(e,i),n[i]=n[i-1],n[i]+=H1.distanceTo(V1);t.setAttribute("lineDistance",new le(n,1))}else console.warn("THREE.Line.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.");return this}raycast(t,e){const n=this.geometry,i=this.matrixWorld,s=t.params.Line.threshold,o=n.drawRange;if(n.boundingSphere===null&&n.computeBoundingSphere(),Eo.copy(n.boundingSphere),Eo.applyMatrix4(i),Eo.radius+=s,t.ray.intersectsSphere(Eo)===!1)return;W1.copy(i).invert(),Ga.copy(t.ray).applyMatrix4(W1);const a=s/((this.scale.x+this.scale.y+this.scale.z)/3),l=a*a,c=new P,u=new P,h=new P,f=new P,d=this.isLineSegments?2:1,g=n.index,m=n.attributes.position;if(g!==null){const p=Math.max(0,o.start),M=Math.min(g.count,o.start+o.count);for(let v=p,x=M-1;v<x;v+=d){const S=g.getX(v),T=g.getX(v+1);if(c.fromBufferAttribute(m,S),u.fromBufferAttribute(m,T),Ga.distanceSqToSegment(c,u,f,h)>l)continue;f.applyMatrix4(this.matrixWorld);const A=t.ray.origin.distanceTo(f);A<t.near||A>t.far||e.push({distance:A,point:h.clone().applyMatrix4(this.matrixWorld),index:v,face:null,faceIndex:null,object:this})}}else{const p=Math.max(0,o.start),M=Math.min(m.count,o.start+o.count);for(let v=p,x=M-1;v<x;v+=d){if(c.fromBufferAttribute(m,v),u.fromBufferAttribute(m,v+1),Ga.distanceSqToSegment(c,u,f,h)>l)continue;f.applyMatrix4(this.matrixWorld);const T=t.ray.origin.distanceTo(f);T<t.near||T>t.far||e.push({distance:T,point:h.clone().applyMatrix4(this.matrixWorld),index:v,face:null,faceIndex:null,object:this})}}}updateMorphTargets(){const e=this.geometry.morphAttributes,n=Object.keys(e);if(n.length>0){const i=e[n[0]];if(i!==void 0){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let s=0,o=i.length;s<o;s++){const a=i[s].name||String(s);this.morphTargetInfluences.push(0),this.morphTargetDictionary[a]=s}}}}}const X1=new P,q1=new P;class $9 extends rc{constructor(t,e){super(t,e),this.isLineSegments=!0,this.type="LineSegments"}computeLineDistances(){const t=this.geometry;if(t.index===null){const e=t.attributes.position,n=[];for(let i=0,s=e.count;i<s;i+=2)X1.fromBufferAttribute(e,i),q1.fromBufferAttribute(e,i+1),n[i]=i===0?0:n[i-1],n[i+1]=n[i]+X1.distanceTo(q1);t.setAttribute("lineDistance",new le(n,1))}else console.warn("THREE.LineSegments.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.");return this}}class qn{constructor(){this.type="Curve",this.arcLengthDivisions=200}getPoint(){return console.warn("THREE.Curve: .getPoint() not implemented."),null}getPointAt(t,e){const n=this.getUtoTmapping(t);return this.getPoint(n,e)}getPoints(t=5){const e=[];for(let n=0;n<=t;n++)e.push(this.getPoint(n/t));return e}getSpacedPoints(t=5){const e=[];for(let n=0;n<=t;n++)e.push(this.getPointAt(n/t));return e}getLength(){const t=this.getLengths();return t[t.length-1]}getLengths(t=this.arcLengthDivisions){if(this.cacheArcLengths&&this.cacheArcLengths.length===t+1&&!this.needsUpdate)return this.cacheArcLengths;this.needsUpdate=!1;const e=[];let n,i=this.getPoint(0),s=0;e.push(0);for(let o=1;o<=t;o++)n=this.getPoint(o/t),s+=n.distanceTo(i),e.push(s),i=n;return this.cacheArcLengths=e,e}updateArcLengths(){this.needsUpdate=!0,this.getLengths()}getUtoTmapping(t,e){const n=this.getLengths();let i=0;const s=n.length;let o;e?o=e:o=t*n[s-1];let a=0,l=s-1,c;for(;a<=l;)if(i=Math.floor(a+(l-a)/2),c=n[i]-o,c<0)a=i+1;else if(c>0)l=i-1;else{l=i;break}if(i=l,n[i]===o)return i/(s-1);const u=n[i],f=n[i+1]-u,d=(o-u)/f;return(i+d)/(s-1)}getTangent(t,e){let i=t-1e-4,s=t+1e-4;i<0&&(i=0),s>1&&(s=1);const o=this.getPoint(i),a=this.getPoint(s),l=e||(o.isVector2?new it:new P);return l.copy(a).sub(o).normalize(),l}getTangentAt(t,e){const n=this.getUtoTmapping(t);return this.getTangent(n,e)}computeFrenetFrames(t,e){const n=new P,i=[],s=[],o=[],a=new P,l=new ge;for(let d=0;d<=t;d++){const g=d/t;i[d]=this.getTangentAt(g,new P)}s[0]=new P,o[0]=new P;let c=Number.MAX_VALUE;const u=Math.abs(i[0].x),h=Math.abs(i[0].y),f=Math.abs(i[0].z);u<=c&&(c=u,n.set(1,0,0)),h<=c&&(c=h,n.set(0,1,0)),f<=c&&n.set(0,0,1),a.crossVectors(i[0],n).normalize(),s[0].crossVectors(i[0],a),o[0].crossVectors(i[0],s[0]);for(let d=1;d<=t;d++){if(s[d]=s[d-1].clone(),o[d]=o[d-1].clone(),a.crossVectors(i[d-1],i[d]),a.length()>Number.EPSILON){a.normalize();const g=Math.acos(De(i[d-1].dot(i[d]),-1,1));s[d].applyMatrix4(l.makeRotationAxis(a,g))}o[d].crossVectors(i[d],s[d])}if(e===!0){let d=Math.acos(De(s[0].dot(s[t]),-1,1));d/=t,i[0].dot(a.crossVectors(s[0],s[t]))>0&&(d=-d);for(let g=1;g<=t;g++)s[g].applyMatrix4(l.makeRotationAxis(i[g],d*g)),o[g].crossVectors(i[g],s[g])}return{tangents:i,normals:s,binormals:o}}clone(){return new this.constructor().copy(this)}copy(t){return this.arcLengthDivisions=t.arcLengthDivisions,this}toJSON(){const t={metadata:{version:4.6,type:"Curve",generator:"Curve.toJSON"}};return t.arcLengthDivisions=this.arcLengthDivisions,t.type=this.type,t}fromJSON(t){return this.arcLengthDivisions=t.arcLengthDivisions,this}}class X0 extends qn{constructor(t=0,e=0,n=1,i=1,s=0,o=Math.PI*2,a=!1,l=0){super(),this.isEllipseCurve=!0,this.type="EllipseCurve",this.aX=t,this.aY=e,this.xRadius=n,this.yRadius=i,this.aStartAngle=s,this.aEndAngle=o,this.aClockwise=a,this.aRotation=l}getPoint(t,e){const n=e||new it,i=Math.PI*2;let s=this.aEndAngle-this.aStartAngle;const o=Math.abs(s)<Number.EPSILON;for(;s<0;)s+=i;for(;s>i;)s-=i;s<Number.EPSILON&&(o?s=0:s=i),this.aClockwise===!0&&!o&&(s===i?s=-i:s=s-i);const a=this.aStartAngle+t*s;let l=this.aX+this.xRadius*Math.cos(a),c=this.aY+this.yRadius*Math.sin(a);if(this.aRotation!==0){const u=Math.cos(this.aRotation),h=Math.sin(this.aRotation),f=l-this.aX,d=c-this.aY;l=f*u-d*h+this.aX,c=f*h+d*u+this.aY}return n.set(l,c)}copy(t){return super.copy(t),this.aX=t.aX,this.aY=t.aY,this.xRadius=t.xRadius,this.yRadius=t.yRadius,this.aStartAngle=t.aStartAngle,this.aEndAngle=t.aEndAngle,this.aClockwise=t.aClockwise,this.aRotation=t.aRotation,this}toJSON(){const t=super.toJSON();return t.aX=this.aX,t.aY=this.aY,t.xRadius=this.xRadius,t.yRadius=this.yRadius,t.aStartAngle=this.aStartAngle,t.aEndAngle=this.aEndAngle,t.aClockwise=this.aClockwise,t.aRotation=this.aRotation,t}fromJSON(t){return super.fromJSON(t),this.aX=t.aX,this.aY=t.aY,this.xRadius=t.xRadius,this.yRadius=t.yRadius,this.aStartAngle=t.aStartAngle,this.aEndAngle=t.aEndAngle,this.aClockwise=t.aClockwise,this.aRotation=t.aRotation,this}}class J9 extends X0{constructor(t,e,n,i,s,o){super(t,e,n,n,i,s,o),this.isArcCurve=!0,this.type="ArcCurve"}}function q0(){let r=0,t=0,e=0,n=0;function i(s,o,a,l){r=s,t=a,e=-3*s+3*o-2*a-l,n=2*s-2*o+a+l}return{initCatmullRom:function(s,o,a,l,c){i(o,a,c*(a-s),c*(l-o))},initNonuniformCatmullRom:function(s,o,a,l,c,u,h){let f=(o-s)/c-(a-s)/(c+u)+(a-o)/u,d=(a-o)/u-(l-o)/(u+h)+(l-a)/h;f*=u,d*=u,i(o,a,f,d)},calc:function(s){const o=s*s,a=o*s;return r+t*s+e*o+n*a}}}const To=new P,Ha=new q0,Va=new q0,Wa=new q0;class Q9 extends qn{constructor(t=[],e=!1,n="centripetal",i=.5){super(),this.isCatmullRomCurve3=!0,this.type="CatmullRomCurve3",this.points=t,this.closed=e,this.curveType=n,this.tension=i}getPoint(t,e=new P){const n=e,i=this.points,s=i.length,o=(s-(this.closed?0:1))*t;let a=Math.floor(o),l=o-a;this.closed?a+=a>0?0:(Math.floor(Math.abs(a)/s)+1)*s:l===0&&a===s-1&&(a=s-2,l=1);let c,u;this.closed||a>0?c=i[(a-1)%s]:(To.subVectors(i[0],i[1]).add(i[0]),c=To);const h=i[a%s],f=i[(a+1)%s];if(this.closed||a+2<s?u=i[(a+2)%s]:(To.subVectors(i[s-1],i[s-2]).add(i[s-1]),u=To),this.curveType==="centripetal"||this.curveType==="chordal"){const d=this.curveType==="chordal"?.5:.25;let g=Math.pow(c.distanceToSquared(h),d),_=Math.pow(h.distanceToSquared(f),d),m=Math.pow(f.distanceToSquared(u),d);_<1e-4&&(_=1),g<1e-4&&(g=_),m<1e-4&&(m=_),Ha.initNonuniformCatmullRom(c.x,h.x,f.x,u.x,g,_,m),Va.initNonuniformCatmullRom(c.y,h.y,f.y,u.y,g,_,m),Wa.initNonuniformCatmullRom(c.z,h.z,f.z,u.z,g,_,m)}else this.curveType==="catmullrom"&&(Ha.initCatmullRom(c.x,h.x,f.x,u.x,this.tension),Va.initCatmullRom(c.y,h.y,f.y,u.y,this.tension),Wa.initCatmullRom(c.z,h.z,f.z,u.z,this.tension));return n.set(Ha.calc(l),Va.calc(l),Wa.calc(l)),n}copy(t){super.copy(t),this.points=[];for(let e=0,n=t.points.length;e<n;e++){const i=t.points[e];this.points.push(i.clone())}return this.closed=t.closed,this.curveType=t.curveType,this.tension=t.tension,this}toJSON(){const t=super.toJSON();t.points=[];for(let e=0,n=this.points.length;e<n;e++){const i=this.points[e];t.points.push(i.toArray())}return t.closed=this.closed,t.curveType=this.curveType,t.tension=this.tension,t}fromJSON(t){super.fromJSON(t),this.points=[];for(let e=0,n=t.points.length;e<n;e++){const i=t.points[e];this.points.push(new P().fromArray(i))}return this.closed=t.closed,this.curveType=t.curveType,this.tension=t.tension,this}}function Y1(r,t,e,n,i){const s=(n-t)*.5,o=(i-e)*.5,a=r*r,l=r*a;return(2*e-2*n+s+o)*l+(-3*e+3*n-2*s-o)*a+s*r+e}function tp(r,t){const e=1-r;return e*e*t}function ep(r,t){return 2*(1-r)*r*t}function np(r,t){return r*r*t}function Es(r,t,e,n){return tp(r,t)+ep(r,e)+np(r,n)}function ip(r,t){const e=1-r;return e*e*e*t}function rp(r,t){const e=1-r;return 3*e*e*r*t}function sp(r,t){return 3*(1-r)*r*r*t}function op(r,t){return r*r*r*t}function Ts(r,t,e,n,i){return ip(r,t)+rp(r,e)+sp(r,n)+op(r,i)}class sc extends qn{constructor(t=new it,e=new it,n=new it,i=new it){super(),this.isCubicBezierCurve=!0,this.type="CubicBezierCurve",this.v0=t,this.v1=e,this.v2=n,this.v3=i}getPoint(t,e=new it){const n=e,i=this.v0,s=this.v1,o=this.v2,a=this.v3;return n.set(Ts(t,i.x,s.x,o.x,a.x),Ts(t,i.y,s.y,o.y,a.y)),n}copy(t){return super.copy(t),this.v0.copy(t.v0),this.v1.copy(t.v1),this.v2.copy(t.v2),this.v3.copy(t.v3),this}toJSON(){const t=super.toJSON();return t.v0=this.v0.toArray(),t.v1=this.v1.toArray(),t.v2=this.v2.toArray(),t.v3=this.v3.toArray(),t}fromJSON(t){return super.fromJSON(t),this.v0.fromArray(t.v0),this.v1.fromArray(t.v1),this.v2.fromArray(t.v2),this.v3.fromArray(t.v3),this}}class ap extends qn{constructor(t=new P,e=new P,n=new P,i=new P){super(),this.isCubicBezierCurve3=!0,this.type="CubicBezierCurve3",this.v0=t,this.v1=e,this.v2=n,this.v3=i}getPoint(t,e=new P){const n=e,i=this.v0,s=this.v1,o=this.v2,a=this.v3;return n.set(Ts(t,i.x,s.x,o.x,a.x),Ts(t,i.y,s.y,o.y,a.y),Ts(t,i.z,s.z,o.z,a.z)),n}copy(t){return super.copy(t),this.v0.copy(t.v0),this.v1.copy(t.v1),this.v2.copy(t.v2),this.v3.copy(t.v3),this}toJSON(){const t=super.toJSON();return t.v0=this.v0.toArray(),t.v1=this.v1.toArray(),t.v2=this.v2.toArray(),t.v3=this.v3.toArray(),t}fromJSON(t){return super.fromJSON(t),this.v0.fromArray(t.v0),this.v1.fromArray(t.v1),this.v2.fromArray(t.v2),this.v3.fromArray(t.v3),this}}class Y0 extends qn{constructor(t=new it,e=new it){super(),this.isLineCurve=!0,this.type="LineCurve",this.v1=t,this.v2=e}getPoint(t,e=new it){const n=e;return t===1?n.copy(this.v2):(n.copy(this.v2).sub(this.v1),n.multiplyScalar(t).add(this.v1)),n}getPointAt(t,e){return this.getPoint(t,e)}getTangent(t,e=new it){return e.subVectors(this.v2,this.v1).normalize()}getTangentAt(t,e){return this.getTangent(t,e)}copy(t){return super.copy(t),this.v1.copy(t.v1),this.v2.copy(t.v2),this}toJSON(){const t=super.toJSON();return t.v1=this.v1.toArray(),t.v2=this.v2.toArray(),t}fromJSON(t){return super.fromJSON(t),this.v1.fromArray(t.v1),this.v2.fromArray(t.v2),this}}class lp extends qn{constructor(t=new P,e=new P){super(),this.isLineCurve3=!0,this.type="LineCurve3",this.v1=t,this.v2=e}getPoint(t,e=new P){const n=e;return t===1?n.copy(this.v2):(n.copy(this.v2).sub(this.v1),n.multiplyScalar(t).add(this.v1)),n}getPointAt(t,e){return this.getPoint(t,e)}getTangent(t,e=new P){return e.subVectors(this.v2,this.v1).normalize()}getTangentAt(t,e){return this.getTangent(t,e)}copy(t){return super.copy(t),this.v1.copy(t.v1),this.v2.copy(t.v2),this}toJSON(){const t=super.toJSON();return t.v1=this.v1.toArray(),t.v2=this.v2.toArray(),t}fromJSON(t){return super.fromJSON(t),this.v1.fromArray(t.v1),this.v2.fromArray(t.v2),this}}class oc extends qn{constructor(t=new it,e=new it,n=new it){super(),this.isQuadraticBezierCurve=!0,this.type="QuadraticBezierCurve",this.v0=t,this.v1=e,this.v2=n}getPoint(t,e=new it){const n=e,i=this.v0,s=this.v1,o=this.v2;return n.set(Es(t,i.x,s.x,o.x),Es(t,i.y,s.y,o.y)),n}copy(t){return super.copy(t),this.v0.copy(t.v0),this.v1.copy(t.v1),this.v2.copy(t.v2),this}toJSON(){const t=super.toJSON();return t.v0=this.v0.toArray(),t.v1=this.v1.toArray(),t.v2=this.v2.toArray(),t}fromJSON(t){return super.fromJSON(t),this.v0.fromArray(t.v0),this.v1.fromArray(t.v1),this.v2.fromArray(t.v2),this}}class ac extends qn{constructor(t=new P,e=new P,n=new P){super(),this.isQuadraticBezierCurve3=!0,this.type="QuadraticBezierCurve3",this.v0=t,this.v1=e,this.v2=n}getPoint(t,e=new P){const n=e,i=this.v0,s=this.v1,o=this.v2;return n.set(Es(t,i.x,s.x,o.x),Es(t,i.y,s.y,o.y),Es(t,i.z,s.z,o.z)),n}copy(t){return super.copy(t),this.v0.copy(t.v0),this.v1.copy(t.v1),this.v2.copy(t.v2),this}toJSON(){const t=super.toJSON();return t.v0=this.v0.toArray(),t.v1=this.v1.toArray(),t.v2=this.v2.toArray(),t}fromJSON(t){return super.fromJSON(t),this.v0.fromArray(t.v0),this.v1.fromArray(t.v1),this.v2.fromArray(t.v2),this}}class lc extends qn{constructor(t=[]){super(),this.isSplineCurve=!0,this.type="SplineCurve",this.points=t}getPoint(t,e=new it){const n=e,i=this.points,s=(i.length-1)*t,o=Math.floor(s),a=s-o,l=i[o===0?o:o-1],c=i[o],u=i[o>i.length-2?i.length-1:o+1],h=i[o>i.length-3?i.length-1:o+2];return n.set(Y1(a,l.x,c.x,u.x,h.x),Y1(a,l.y,c.y,u.y,h.y)),n}copy(t){super.copy(t),this.points=[];for(let e=0,n=t.points.length;e<n;e++){const i=t.points[e];this.points.push(i.clone())}return this}toJSON(){const t=super.toJSON();t.points=[];for(let e=0,n=this.points.length;e<n;e++){const i=this.points[e];t.points.push(i.toArray())}return t}fromJSON(t){super.fromJSON(t),this.points=[];for(let e=0,n=t.points.length;e<n;e++){const i=t.points[e];this.points.push(new it().fromArray(i))}return this}}var cc=Object.freeze({__proto__:null,ArcCurve:J9,CatmullRomCurve3:Q9,CubicBezierCurve:sc,CubicBezierCurve3:ap,EllipseCurve:X0,LineCurve:Y0,LineCurve3:lp,QuadraticBezierCurve:oc,QuadraticBezierCurve3:ac,SplineCurve:lc});class cp extends qn{constructor(){super(),this.type="CurvePath",this.curves=[],this.autoClose=!1}add(t){this.curves.push(t)}closePath(){const t=this.curves[0].getPoint(0),e=this.curves[this.curves.length-1].getPoint(1);t.equals(e)||this.curves.push(new Y0(e,t))}getPoint(t,e){const n=t*this.getLength(),i=this.getCurveLengths();let s=0;for(;s<i.length;){if(i[s]>=n){const o=i[s]-n,a=this.curves[s],l=a.getLength(),c=l===0?0:1-o/l;return a.getPointAt(c,e)}s++}return null}getLength(){const t=this.getCurveLengths();return t[t.length-1]}updateArcLengths(){this.needsUpdate=!0,this.cacheLengths=null,this.getCurveLengths()}getCurveLengths(){if(this.cacheLengths&&this.cacheLengths.length===this.curves.length)return this.cacheLengths;const t=[];let e=0;for(let n=0,i=this.curves.length;n<i;n++)e+=this.curves[n].getLength(),t.push(e);return this.cacheLengths=t,t}getSpacedPoints(t=40){const e=[];for(let n=0;n<=t;n++)e.push(this.getPoint(n/t));return this.autoClose&&e.push(e[0]),e}getPoints(t=12){const e=[];let n;for(let i=0,s=this.curves;i<s.length;i++){const o=s[i],a=o.isEllipseCurve?t*2:o.isLineCurve||o.isLineCurve3?1:o.isSplineCurve?t*o.points.length:t,l=o.getPoints(a);for(let c=0;c<l.length;c++){const u=l[c];n&&n.equals(u)||(e.push(u),n=u)}}return this.autoClose&&e.length>1&&!e[e.length-1].equals(e[0])&&e.push(e[0]),e}copy(t){super.copy(t),this.curves=[];for(let e=0,n=t.curves.length;e<n;e++){const i=t.curves[e];this.curves.push(i.clone())}return this.autoClose=t.autoClose,this}toJSON(){const t=super.toJSON();t.autoClose=this.autoClose,t.curves=[];for(let e=0,n=this.curves.length;e<n;e++){const i=this.curves[e];t.curves.push(i.toJSON())}return t}fromJSON(t){super.fromJSON(t),this.autoClose=t.autoClose,this.curves=[];for(let e=0,n=t.curves.length;e<n;e++){const i=t.curves[e];this.curves.push(new cc[i.type]().fromJSON(i))}return this}}class _0 extends cp{constructor(t){super(),this.type="Path",this.currentPoint=new it,t&&this.setFromPoints(t)}setFromPoints(t){this.moveTo(t[0].x,t[0].y);for(let e=1,n=t.length;e<n;e++)this.lineTo(t[e].x,t[e].y);return this}moveTo(t,e){return this.currentPoint.set(t,e),this}lineTo(t,e){const n=new Y0(this.currentPoint.clone(),new it(t,e));return this.curves.push(n),this.currentPoint.set(t,e),this}quadraticCurveTo(t,e,n,i){const s=new oc(this.currentPoint.clone(),new it(t,e),new it(n,i));return this.curves.push(s),this.currentPoint.set(n,i),this}bezierCurveTo(t,e,n,i,s,o){const a=new sc(this.currentPoint.clone(),new it(t,e),new it(n,i),new it(s,o));return this.curves.push(a),this.currentPoint.set(s,o),this}splineThru(t){const e=[this.currentPoint.clone()].concat(t),n=new lc(e);return this.curves.push(n),this.currentPoint.copy(t[t.length-1]),this}arc(t,e,n,i,s,o){const a=this.currentPoint.x,l=this.currentPoint.y;return this.absarc(t+a,e+l,n,i,s,o),this}absarc(t,e,n,i,s,o){return this.absellipse(t,e,n,n,i,s,o),this}ellipse(t,e,n,i,s,o,a,l){const c=this.currentPoint.x,u=this.currentPoint.y;return this.absellipse(t+c,e+u,n,i,s,o,a,l),this}absellipse(t,e,n,i,s,o,a,l){const c=new X0(t,e,n,i,s,o,a,l);if(this.curves.length>0){const h=c.getPoint(0);h.equals(this.currentPoint)||this.lineTo(h.x,h.y)}this.curves.push(c);const u=c.getPoint(1);return this.currentPoint.copy(u),this}copy(t){return super.copy(t),this.currentPoint.copy(t.currentPoint),this}toJSON(){const t=super.toJSON();return t.currentPoint=this.currentPoint.toArray(),t}fromJSON(t){return super.fromJSON(t),this.currentPoint.fromArray(t.currentPoint),this}}class zo extends Ae{constructor(t=1,e=32,n=0,i=Math.PI*2){super(),this.type="CircleGeometry",this.parameters={radius:t,segments:e,thetaStart:n,thetaLength:i},e=Math.max(3,e);const s=[],o=[],a=[],l=[],c=new P,u=new it;o.push(0,0,0),a.push(0,0,1),l.push(.5,.5);for(let h=0,f=3;h<=e;h++,f+=3){const d=n+h/e*i;c.x=t*Math.cos(d),c.y=t*Math.sin(d),o.push(c.x,c.y,c.z),a.push(0,0,1),u.x=(o[f]/t+1)/2,u.y=(o[f+1]/t+1)/2,l.push(u.x,u.y)}for(let h=1;h<=e;h++)s.push(h,h+1,0);this.setIndex(s),this.setAttribute("position",new le(o,3)),this.setAttribute("normal",new le(a,3)),this.setAttribute("uv",new le(l,2))}copy(t){return super.copy(t),this.parameters=Object.assign({},t.parameters),this}static fromJSON(t){return new zo(t.radius,t.segments,t.thetaStart,t.thetaLength)}}class na extends Ae{constructor(t=1,e=1,n=1,i=32,s=1,o=!1,a=0,l=Math.PI*2){super(),this.type="CylinderGeometry",this.parameters={radiusTop:t,radiusBottom:e,height:n,radialSegments:i,heightSegments:s,openEnded:o,thetaStart:a,thetaLength:l};const c=this;i=Math.floor(i),s=Math.floor(s);const u=[],h=[],f=[],d=[];let g=0;const _=[],m=n/2;let p=0;M(),o===!1&&(t>0&&v(!0),e>0&&v(!1)),this.setIndex(u),this.setAttribute("position",new le(h,3)),this.setAttribute("normal",new le(f,3)),this.setAttribute("uv",new le(d,2));function M(){const x=new P,S=new P;let T=0;const E=(e-t)/n;for(let A=0;A<=s;A++){const y=[],b=A/s,F=b*(e-t)+t;for(let z=0;z<=i;z++){const I=z/i,O=I*l+a,N=Math.sin(O),X=Math.cos(O);S.x=F*N,S.y=-b*n+m,S.z=F*X,h.push(S.x,S.y,S.z),x.set(N,E,X).normalize(),f.push(x.x,x.y,x.z),d.push(I,1-b),y.push(g++)}_.push(y)}for(let A=0;A<i;A++)for(let y=0;y<s;y++){const b=_[y][A],F=_[y+1][A],z=_[y+1][A+1],I=_[y][A+1];u.push(b,F,I),u.push(F,z,I),T+=6}c.addGroup(p,T,0),p+=T}function v(x){const S=g,T=new it,E=new P;let A=0;const y=x===!0?t:e,b=x===!0?1:-1;for(let z=1;z<=i;z++)h.push(0,m*b,0),f.push(0,b,0),d.push(.5,.5),g++;const F=g;for(let z=0;z<=i;z++){const O=z/i*l+a,N=Math.cos(O),X=Math.sin(O);E.x=y*X,E.y=m*b,E.z=y*N,h.push(E.x,E.y,E.z),f.push(0,b,0),T.x=N*.5+.5,T.y=X*.5*b+.5,d.push(T.x,T.y),g++}for(let z=0;z<i;z++){const I=S+z,O=F+z;x===!0?u.push(O,O+1,I):u.push(O+1,O,I),A+=3}c.addGroup(p,A,x===!0?1:2),p+=A}}copy(t){return super.copy(t),this.parameters=Object.assign({},t.parameters),this}static fromJSON(t){return new na(t.radiusTop,t.radiusBottom,t.height,t.radialSegments,t.heightSegments,t.openEnded,t.thetaStart,t.thetaLength)}}class j0 extends na{constructor(t=1,e=1,n=32,i=1,s=!1,o=0,a=Math.PI*2){super(0,t,e,n,i,s,o,a),this.type="ConeGeometry",this.parameters={radius:t,height:e,radialSegments:n,heightSegments:i,openEnded:s,thetaStart:o,thetaLength:a}}static fromJSON(t){return new j0(t.radius,t.height,t.radialSegments,t.heightSegments,t.openEnded,t.thetaStart,t.thetaLength)}}class Z0 extends Ae{constructor(t=[],e=[],n=1,i=0){super(),this.type="PolyhedronGeometry",this.parameters={vertices:t,indices:e,radius:n,detail:i};const s=[],o=[];a(i),c(n),u(),this.setAttribute("position",new le(s,3)),this.setAttribute("normal",new le(s.slice(),3)),this.setAttribute("uv",new le(o,2)),i===0?this.computeVertexNormals():this.normalizeNormals();function a(M){const v=new P,x=new P,S=new P;for(let T=0;T<e.length;T+=3)d(e[T+0],v),d(e[T+1],x),d(e[T+2],S),l(v,x,S,M)}function l(M,v,x,S){const T=S+1,E=[];for(let A=0;A<=T;A++){E[A]=[];const y=M.clone().lerp(x,A/T),b=v.clone().lerp(x,A/T),F=T-A;for(let z=0;z<=F;z++)z===0&&A===T?E[A][z]=y:E[A][z]=y.clone().lerp(b,z/F)}for(let A=0;A<T;A++)for(let y=0;y<2*(T-A)-1;y++){const b=Math.floor(y/2);y%2===0?(f(E[A][b+1]),f(E[A+1][b]),f(E[A][b])):(f(E[A][b+1]),f(E[A+1][b+1]),f(E[A+1][b]))}}function c(M){const v=new P;for(let x=0;x<s.length;x+=3)v.x=s[x+0],v.y=s[x+1],v.z=s[x+2],v.normalize().multiplyScalar(M),s[x+0]=v.x,s[x+1]=v.y,s[x+2]=v.z}function u(){const M=new P;for(let v=0;v<s.length;v+=3){M.x=s[v+0],M.y=s[v+1],M.z=s[v+2];const x=m(M)/2/Math.PI+.5,S=p(M)/Math.PI+.5;o.push(x,1-S)}g(),h()}function h(){for(let M=0;M<o.length;M+=6){const v=o[M+0],x=o[M+2],S=o[M+4],T=Math.max(v,x,S),E=Math.min(v,x,S);T>.9&&E<.1&&(v<.2&&(o[M+0]+=1),x<.2&&(o[M+2]+=1),S<.2&&(o[M+4]+=1))}}function f(M){s.push(M.x,M.y,M.z)}function d(M,v){const x=M*3;v.x=t[x+0],v.y=t[x+1],v.z=t[x+2]}function g(){const M=new P,v=new P,x=new P,S=new P,T=new it,E=new it,A=new it;for(let y=0,b=0;y<s.length;y+=9,b+=6){M.set(s[y+0],s[y+1],s[y+2]),v.set(s[y+3],s[y+4],s[y+5]),x.set(s[y+6],s[y+7],s[y+8]),T.set(o[b+0],o[b+1]),E.set(o[b+2],o[b+3]),A.set(o[b+4],o[b+5]),S.copy(M).add(v).add(x).divideScalar(3);const F=m(S);_(T,b+0,M,F),_(E,b+2,v,F),_(A,b+4,x,F)}}function _(M,v,x,S){S<0&&M.x===1&&(o[v]=M.x-1),x.x===0&&x.z===0&&(o[v]=S/2/Math.PI+.5)}function m(M){return Math.atan2(M.z,-M.x)}function p(M){return Math.atan2(-M.y,Math.sqrt(M.x*M.x+M.z*M.z))}}copy(t){return super.copy(t),this.parameters=Object.assign({},t.parameters),this}static fromJSON(t){return new Z0(t.vertices,t.indices,t.radius,t.details)}}class Do extends _0{constructor(t){super(t),this.uuid=ar(),this.type="Shape",this.holes=[]}getPointsHoles(t){const e=[];for(let n=0,i=this.holes.length;n<i;n++)e[n]=this.holes[n].getPoints(t);return e}extractPoints(t){return{shape:this.getPoints(t),holes:this.getPointsHoles(t)}}copy(t){super.copy(t),this.holes=[];for(let e=0,n=t.holes.length;e<n;e++){const i=t.holes[e];this.holes.push(i.clone())}return this}toJSON(){const t=super.toJSON();t.uuid=this.uuid,t.holes=[];for(let e=0,n=this.holes.length;e<n;e++){const i=this.holes[e];t.holes.push(i.toJSON())}return t}fromJSON(t){super.fromJSON(t),this.uuid=t.uuid,this.holes=[];for(let e=0,n=t.holes.length;e<n;e++){const i=t.holes[e];this.holes.push(new _0().fromJSON(i))}return this}}const up={triangulate:function(r,t,e=2){const n=t&&t.length,i=n?t[0]*e:r.length;let s=uc(r,0,i,e,!0);const o=[];if(!s||s.next===s.prev)return o;let a,l,c,u,h,f,d;if(n&&(s=mp(r,t,s,e)),r.length>80*e){a=c=r[0],l=u=r[1];for(let g=e;g<i;g+=e)h=r[g],f=r[g+1],h<a&&(a=h),f<l&&(l=f),h>c&&(c=h),f>u&&(u=f);d=Math.max(c-a,u-l),d=d!==0?32767/d:0}return Ds(s,o,e,a,l,d,0),o}};function uc(r,t,e,n,i){let s,o;if(i===wp(r,t,e,n)>0)for(s=t;s<e;s+=n)o=j1(s,r[s],r[s+1],o);else for(s=e-n;s>=t;s-=n)o=j1(s,r[s],r[s+1],o);return o&&ia(o,o.next)&&(Is(o),o=o.next),o}function nr(r,t){if(!r)return r;t||(t=r);let e=r,n;do if(n=!1,!e.steiner&&(ia(e,e.next)||ue(e.prev,e,e.next)===0)){if(Is(e),e=t=e.prev,e===e.next)break;n=!0}else e=e.next;while(n||e!==t);return t}function Ds(r,t,e,n,i,s,o){if(!r)return;!o&&s&&yp(r,n,i,s);let a=r,l,c;for(;r.prev!==r.next;){if(l=r.prev,c=r.next,s?fp(r,n,i,s):hp(r)){t.push(l.i/e|0),t.push(r.i/e|0),t.push(c.i/e|0),Is(r),r=c.next,a=c.next;continue}if(r=c,r===a){o?o===1?(r=dp(nr(r),t,e),Ds(r,t,e,n,i,s,2)):o===2&&pp(r,t,e,n,i,s):Ds(nr(r),t,e,n,i,s,1);break}}}function hp(r){const t=r.prev,e=r,n=r.next;if(ue(t,e,n)>=0)return!1;const i=t.x,s=e.x,o=n.x,a=t.y,l=e.y,c=n.y,u=i<s?i<o?i:o:s<o?s:o,h=a<l?a<c?a:c:l<c?l:c,f=i>s?i>o?i:o:s>o?s:o,d=a>l?a>c?a:c:l>c?l:c;let g=n.next;for(;g!==t;){if(g.x>=u&&g.x<=f&&g.y>=h&&g.y<=d&&Nr(i,a,s,l,o,c,g.x,g.y)&&ue(g.prev,g,g.next)>=0)return!1;g=g.next}return!0}function fp(r,t,e,n){const i=r.prev,s=r,o=r.next;if(ue(i,s,o)>=0)return!1;const a=i.x,l=s.x,c=o.x,u=i.y,h=s.y,f=o.y,d=a<l?a<c?a:c:l<c?l:c,g=u<h?u<f?u:f:h<f?h:f,_=a>l?a>c?a:c:l>c?l:c,m=u>h?u>f?u:f:h>f?h:f,p=g0(d,g,t,e,n),M=g0(_,m,t,e,n);let v=r.prevZ,x=r.nextZ;for(;v&&v.z>=p&&x&&x.z<=M;){if(v.x>=d&&v.x<=_&&v.y>=g&&v.y<=m&&v!==i&&v!==o&&Nr(a,u,l,h,c,f,v.x,v.y)&&ue(v.prev,v,v.next)>=0||(v=v.prevZ,x.x>=d&&x.x<=_&&x.y>=g&&x.y<=m&&x!==i&&x!==o&&Nr(a,u,l,h,c,f,x.x,x.y)&&ue(x.prev,x,x.next)>=0))return!1;x=x.nextZ}for(;v&&v.z>=p;){if(v.x>=d&&v.x<=_&&v.y>=g&&v.y<=m&&v!==i&&v!==o&&Nr(a,u,l,h,c,f,v.x,v.y)&&ue(v.prev,v,v.next)>=0)return!1;v=v.prevZ}for(;x&&x.z<=M;){if(x.x>=d&&x.x<=_&&x.y>=g&&x.y<=m&&x!==i&&x!==o&&Nr(a,u,l,h,c,f,x.x,x.y)&&ue(x.prev,x,x.next)>=0)return!1;x=x.nextZ}return!0}function dp(r,t,e){let n=r;do{const i=n.prev,s=n.next.next;!ia(i,s)&&hc(i,n,n.next,s)&&Us(i,s)&&Us(s,i)&&(t.push(i.i/e|0),t.push(n.i/e|0),t.push(s.i/e|0),Is(n),Is(n.next),n=r=s),n=n.next}while(n!==r);return nr(n)}function pp(r,t,e,n,i,s){let o=r;do{let a=o.next.next;for(;a!==o.prev;){if(o.i!==a.i&&Ep(o,a)){let l=fc(o,a);o=nr(o,o.next),l=nr(l,l.next),Ds(o,t,e,n,i,s,0),Ds(l,t,e,n,i,s,0);return}a=a.next}o=o.next}while(o!==r)}function mp(r,t,e,n){const i=[];let s,o,a,l,c;for(s=0,o=t.length;s<o;s++)a=t[s]*n,l=s<o-1?t[s+1]*n:r.length,c=uc(r,a,l,n,!1),c===c.next&&(c.steiner=!0),i.push(Sp(c));for(i.sort(_p),s=0;s<i.length;s++)e=gp(i[s],e);return e}function _p(r,t){return r.x-t.x}function gp(r,t){const e=vp(r,t);if(!e)return t;const n=fc(e,r);return nr(n,n.next),nr(e,e.next)}function vp(r,t){let e=t,n=-1/0,i;const s=r.x,o=r.y;do{if(o<=e.y&&o>=e.next.y&&e.next.y!==e.y){const f=e.x+(o-e.y)*(e.next.x-e.x)/(e.next.y-e.y);if(f<=s&&f>n&&(n=f,i=e.x<e.next.x?e:e.next,f===s))return i}e=e.next}while(e!==t);if(!i)return null;const a=i,l=i.x,c=i.y;let u=1/0,h;e=i;do s>=e.x&&e.x>=l&&s!==e.x&&Nr(o<c?s:n,o,l,c,o<c?n:s,o,e.x,e.y)&&(h=Math.abs(o-e.y)/(s-e.x),Us(e,r)&&(h<u||h===u&&(e.x>i.x||e.x===i.x&&xp(i,e)))&&(i=e,u=h)),e=e.next;while(e!==a);return i}function xp(r,t){return ue(r.prev,r,t.prev)<0&&ue(t.next,r,r.next)<0}function yp(r,t,e,n){let i=r;do i.z===0&&(i.z=g0(i.x,i.y,t,e,n)),i.prevZ=i.prev,i.nextZ=i.next,i=i.next;while(i!==r);i.prevZ.nextZ=null,i.prevZ=null,Mp(i)}function Mp(r){let t,e,n,i,s,o,a,l,c=1;do{for(e=r,r=null,s=null,o=0;e;){for(o++,n=e,a=0,t=0;t<c&&(a++,n=n.nextZ,!!n);t++);for(l=c;a>0||l>0&&n;)a!==0&&(l===0||!n||e.z<=n.z)?(i=e,e=e.nextZ,a--):(i=n,n=n.nextZ,l--),s?s.nextZ=i:r=i,i.prevZ=s,s=i;e=n}s.nextZ=null,c*=2}while(o>1);return r}function g0(r,t,e,n,i){return r=(r-e)*i|0,t=(t-n)*i|0,r=(r|r<<8)&16711935,r=(r|r<<4)&252645135,r=(r|r<<2)&858993459,r=(r|r<<1)&1431655765,t=(t|t<<8)&16711935,t=(t|t<<4)&252645135,t=(t|t<<2)&858993459,t=(t|t<<1)&1431655765,r|t<<1}function Sp(r){let t=r,e=r;do(t.x<e.x||t.x===e.x&&t.y<e.y)&&(e=t),t=t.next;while(t!==r);return e}function Nr(r,t,e,n,i,s,o,a){return(i-o)*(t-a)>=(r-o)*(s-a)&&(r-o)*(n-a)>=(e-o)*(t-a)&&(e-o)*(s-a)>=(i-o)*(n-a)}function Ep(r,t){return r.next.i!==t.i&&r.prev.i!==t.i&&!Tp(r,t)&&(Us(r,t)&&Us(t,r)&&bp(r,t)&&(ue(r.prev,r,t.prev)||ue(r,t.prev,t))||ia(r,t)&&ue(r.prev,r,r.next)>0&&ue(t.prev,t,t.next)>0)}function ue(r,t,e){return(t.y-r.y)*(e.x-t.x)-(t.x-r.x)*(e.y-t.y)}function ia(r,t){return r.x===t.x&&r.y===t.y}function hc(r,t,e,n){const i=wo(ue(r,t,e)),s=wo(ue(r,t,n)),o=wo(ue(e,n,r)),a=wo(ue(e,n,t));return!!(i!==s&&o!==a||i===0&&bo(r,e,t)||s===0&&bo(r,n,t)||o===0&&bo(e,r,n)||a===0&&bo(e,t,n))}function bo(r,t,e){return t.x<=Math.max(r.x,e.x)&&t.x>=Math.min(r.x,e.x)&&t.y<=Math.max(r.y,e.y)&&t.y>=Math.min(r.y,e.y)}function wo(r){return r>0?1:r<0?-1:0}function Tp(r,t){let e=r;do{if(e.i!==r.i&&e.next.i!==r.i&&e.i!==t.i&&e.next.i!==t.i&&hc(e,e.next,r,t))return!0;e=e.next}while(e!==r);return!1}function Us(r,t){return ue(r.prev,r,r.next)<0?ue(r,t,r.next)>=0&&ue(r,r.prev,t)>=0:ue(r,t,r.prev)<0||ue(r,r.next,t)<0}function bp(r,t){let e=r,n=!1;const i=(r.x+t.x)/2,s=(r.y+t.y)/2;do e.y>s!=e.next.y>s&&e.next.y!==e.y&&i<(e.next.x-e.x)*(s-e.y)/(e.next.y-e.y)+e.x&&(n=!n),e=e.next;while(e!==r);return n}function fc(r,t){const e=new v0(r.i,r.x,r.y),n=new v0(t.i,t.x,t.y),i=r.next,s=t.prev;return r.next=t,t.prev=r,e.next=i,i.prev=e,n.next=e,e.prev=n,s.next=n,n.prev=s,n}function j1(r,t,e,n){const i=new v0(r,t,e);return n?(i.next=n.next,i.prev=n,n.next.prev=i,n.next=i):(i.prev=i,i.next=i),i}function Is(r){r.next.prev=r.prev,r.prev.next=r.next,r.prevZ&&(r.prevZ.nextZ=r.nextZ),r.nextZ&&(r.nextZ.prevZ=r.prevZ)}function v0(r,t,e){this.i=r,this.x=t,this.y=e,this.prev=null,this.next=null,this.z=0,this.prevZ=null,this.nextZ=null,this.steiner=!1}function wp(r,t,e,n){let i=0;for(let s=t,o=e-n;s<e;s+=n)i+=(r[o]-r[s])*(r[s+1]+r[o+1]),o=s;return i}class Hr{static area(t){const e=t.length;let n=0;for(let i=e-1,s=0;s<e;i=s++)n+=t[i].x*t[s].y-t[s].x*t[i].y;return n*.5}static isClockWise(t){return Hr.area(t)<0}static triangulateShape(t,e){const n=[],i=[],s=[];Z1(t),K1(n,t);let o=t.length;e.forEach(Z1);for(let l=0;l<e.length;l++)i.push(o),o+=e[l].length,K1(n,e[l]);const a=up.triangulate(n,i);for(let l=0;l<a.length;l+=3)s.push(a.slice(l,l+3));return s}}function Z1(r){const t=r.length;t>2&&r[t-1].equals(r[0])&&r.pop()}function K1(r,t){for(let e=0;e<t.length;e++)r.push(t[e].x),r.push(t[e].y)}class K0 extends Ae{constructor(t=new Do([new it(.5,.5),new it(-.5,.5),new it(-.5,-.5),new it(.5,-.5)]),e={}){super(),this.type="ExtrudeGeometry",this.parameters={shapes:t,options:e},t=Array.isArray(t)?t:[t];const n=this,i=[],s=[];for(let a=0,l=t.length;a<l;a++){const c=t[a];o(c)}this.setAttribute("position",new le(i,3)),this.setAttribute("uv",new le(s,2)),this.computeVertexNormals();function o(a){const l=[],c=e.curveSegments!==void 0?e.curveSegments:12,u=e.steps!==void 0?e.steps:1,h=e.depth!==void 0?e.depth:1;let f=e.bevelEnabled!==void 0?e.bevelEnabled:!0,d=e.bevelThickness!==void 0?e.bevelThickness:.2,g=e.bevelSize!==void 0?e.bevelSize:d-.1,_=e.bevelOffset!==void 0?e.bevelOffset:0,m=e.bevelSegments!==void 0?e.bevelSegments:3;const p=e.extrudePath,M=e.UVGenerator!==void 0?e.UVGenerator:Ap;let v,x=!1,S,T,E,A;p&&(v=p.getSpacedPoints(u),x=!0,f=!1,S=p.computeFrenetFrames(u,!1),T=new P,E=new P,A=new P),f||(m=0,d=0,g=0,_=0);const y=a.extractPoints(c);let b=y.shape;const F=y.holes;if(!Hr.isClockWise(b)){b=b.reverse();for(let L=0,ut=F.length;L<ut;L++){const J=F[L];Hr.isClockWise(J)&&(F[L]=J.reverse())}}const I=Hr.triangulateShape(b,F),O=b;for(let L=0,ut=F.length;L<ut;L++){const J=F[L];b=b.concat(J)}function N(L,ut,J){return ut||console.error("THREE.ExtrudeGeometry: vec does not exist"),L.clone().addScaledVector(ut,J)}const X=b.length,k=I.length;function Y(L,ut,J){let ot,et,Tt;const xt=L.x-ut.x,Mt=L.y-ut.y,Lt=J.x-L.x,Bt=J.y-L.y,se=xt*xt+Mt*Mt,C=xt*Bt-Mt*Lt;if(Math.abs(C)>Number.EPSILON){const w=Math.sqrt(se),W=Math.sqrt(Lt*Lt+Bt*Bt),st=ut.x-Mt/w,nt=ut.y+xt/w,at=J.x-Bt/W,Et=J.y+Lt/W,lt=((at-st)*Bt-(Et-nt)*Lt)/(xt*Bt-Mt*Lt);ot=st+xt*lt-L.x,et=nt+Mt*lt-L.y;const q=ot*ot+et*et;if(q<=2)return new it(ot,et);Tt=Math.sqrt(q/2)}else{let w=!1;xt>Number.EPSILON?Lt>Number.EPSILON&&(w=!0):xt<-Number.EPSILON?Lt<-Number.EPSILON&&(w=!0):Math.sign(Mt)===Math.sign(Bt)&&(w=!0),w?(ot=-Mt,et=xt,Tt=Math.sqrt(se)):(ot=xt,et=Mt,Tt=Math.sqrt(se/2))}return new it(ot/Tt,et/Tt)}const Q=[];for(let L=0,ut=O.length,J=ut-1,ot=L+1;L<ut;L++,J++,ot++)J===ut&&(J=0),ot===ut&&(ot=0),Q[L]=Y(O[L],O[J],O[ot]);const $=[];let B,V=Q.concat();for(let L=0,ut=F.length;L<ut;L++){const J=F[L];B=[];for(let ot=0,et=J.length,Tt=et-1,xt=ot+1;ot<et;ot++,Tt++,xt++)Tt===et&&(Tt=0),xt===et&&(xt=0),B[ot]=Y(J[ot],J[Tt],J[xt]);$.push(B),V=V.concat(B)}for(let L=0;L<m;L++){const ut=L/m,J=d*Math.cos(ut*Math.PI/2),ot=g*Math.sin(ut*Math.PI/2)+_;for(let et=0,Tt=O.length;et<Tt;et++){const xt=N(O[et],Q[et],ot);wt(xt.x,xt.y,-J)}for(let et=0,Tt=F.length;et<Tt;et++){const xt=F[et];B=$[et];for(let Mt=0,Lt=xt.length;Mt<Lt;Mt++){const Bt=N(xt[Mt],B[Mt],ot);wt(Bt.x,Bt.y,-J)}}}const ht=g+_;for(let L=0;L<X;L++){const ut=f?N(b[L],V[L],ht):b[L];x?(E.copy(S.normals[0]).multiplyScalar(ut.x),T.copy(S.binormals[0]).multiplyScalar(ut.y),A.copy(v[0]).add(E).add(T),wt(A.x,A.y,A.z)):wt(ut.x,ut.y,0)}for(let L=1;L<=u;L++)for(let ut=0;ut<X;ut++){const J=f?N(b[ut],V[ut],ht):b[ut];x?(E.copy(S.normals[L]).multiplyScalar(J.x),T.copy(S.binormals[L]).multiplyScalar(J.y),A.copy(v[L]).add(E).add(T),wt(A.x,A.y,A.z)):wt(J.x,J.y,h/u*L)}for(let L=m-1;L>=0;L--){const ut=L/m,J=d*Math.cos(ut*Math.PI/2),ot=g*Math.sin(ut*Math.PI/2)+_;for(let et=0,Tt=O.length;et<Tt;et++){const xt=N(O[et],Q[et],ot);wt(xt.x,xt.y,h+J)}for(let et=0,Tt=F.length;et<Tt;et++){const xt=F[et];B=$[et];for(let Mt=0,Lt=xt.length;Mt<Lt;Mt++){const Bt=N(xt[Mt],B[Mt],ot);x?wt(Bt.x,Bt.y+v[u-1].y,v[u-1].x+J):wt(Bt.x,Bt.y,h+J)}}}ct(),_t();function ct(){const L=i.length/3;if(f){let ut=0,J=X*ut;for(let ot=0;ot<k;ot++){const et=I[ot];bt(et[2]+J,et[1]+J,et[0]+J)}ut=u+m*2,J=X*ut;for(let ot=0;ot<k;ot++){const et=I[ot];bt(et[0]+J,et[1]+J,et[2]+J)}}else{for(let ut=0;ut<k;ut++){const J=I[ut];bt(J[2],J[1],J[0])}for(let ut=0;ut<k;ut++){const J=I[ut];bt(J[0]+X*u,J[1]+X*u,J[2]+X*u)}}n.addGroup(L,i.length/3-L,0)}function _t(){const L=i.length/3;let ut=0;Rt(O,ut),ut+=O.length;for(let J=0,ot=F.length;J<ot;J++){const et=F[J];Rt(et,ut),ut+=et.length}n.addGroup(L,i.length/3-L,1)}function Rt(L,ut){let J=L.length;for(;--J>=0;){const ot=J;let et=J-1;et<0&&(et=L.length-1);for(let Tt=0,xt=u+m*2;Tt<xt;Tt++){const Mt=X*Tt,Lt=X*(Tt+1),Bt=ut+ot+Mt,se=ut+et+Mt,C=ut+et+Lt,w=ut+ot+Lt;Vt(Bt,se,C,w)}}}function wt(L,ut,J){l.push(L),l.push(ut),l.push(J)}function bt(L,ut,J){Kt(L),Kt(ut),Kt(J);const ot=i.length/3,et=M.generateTopUV(n,i,ot-3,ot-2,ot-1);Ct(et[0]),Ct(et[1]),Ct(et[2])}function Vt(L,ut,J,ot){Kt(L),Kt(ut),Kt(ot),Kt(ut),Kt(J),Kt(ot);const et=i.length/3,Tt=M.generateSideWallUV(n,i,et-6,et-3,et-2,et-1);Ct(Tt[0]),Ct(Tt[1]),Ct(Tt[3]),Ct(Tt[1]),Ct(Tt[2]),Ct(Tt[3])}function Kt(L){i.push(l[L*3+0]),i.push(l[L*3+1]),i.push(l[L*3+2])}function Ct(L){s.push(L.x),s.push(L.y)}}}copy(t){return super.copy(t),this.parameters=Object.assign({},t.parameters),this}toJSON(){const t=super.toJSON(),e=this.parameters.shapes,n=this.parameters.options;return Rp(e,n,t)}static fromJSON(t,e){const n=[];for(let s=0,o=t.shapes.length;s<o;s++){const a=e[t.shapes[s]];n.push(a)}const i=t.options.extrudePath;return i!==void 0&&(t.options.extrudePath=new cc[i.type]().fromJSON(i)),new K0(n,t.options)}}const Ap={generateTopUV:function(r,t,e,n,i){const s=t[e*3],o=t[e*3+1],a=t[n*3],l=t[n*3+1],c=t[i*3],u=t[i*3+1];return[new it(s,o),new it(a,l),new it(c,u)]},generateSideWallUV:function(r,t,e,n,i,s){const o=t[e*3],a=t[e*3+1],l=t[e*3+2],c=t[n*3],u=t[n*3+1],h=t[n*3+2],f=t[i*3],d=t[i*3+1],g=t[i*3+2],_=t[s*3],m=t[s*3+1],p=t[s*3+2];return Math.abs(a-u)<Math.abs(o-c)?[new it(o,1-l),new it(c,1-h),new it(f,1-g),new it(_,1-p)]:[new it(a,1-l),new it(u,1-h),new it(d,1-g),new it(m,1-p)]}};function Rp(r,t,e){if(e.shapes=[],Array.isArray(r))for(let n=0,i=r.length;n<i;n++){const s=r[n];e.shapes.push(s.uuid)}else e.shapes.push(r.uuid);return e.options=Object.assign({},t),t.extrudePath!==void 0&&(e.options.extrudePath=t.extrudePath.toJSON()),e}class $0 extends Z0{constructor(t=1,e=0){const n=(1+Math.sqrt(5))/2,i=[-1,n,0,1,n,0,-1,-n,0,1,-n,0,0,-1,n,0,1,n,0,-1,-n,0,1,-n,n,0,-1,n,0,1,-n,0,-1,-n,0,1],s=[0,11,5,0,5,1,0,1,7,0,7,10,0,10,11,1,5,9,5,11,4,11,10,2,10,7,6,7,1,8,3,9,4,3,4,2,3,2,6,3,6,8,3,8,9,4,9,5,2,4,11,6,2,10,8,6,7,9,8,1];super(i,s,t,e),this.type="IcosahedronGeometry",this.parameters={radius:t,detail:e}}static fromJSON(t){return new $0(t.radius,t.detail)}}class J0 extends Ae{constructor(t=1,e=32,n=16,i=0,s=Math.PI*2,o=0,a=Math.PI){super(),this.type="SphereGeometry",this.parameters={radius:t,widthSegments:e,heightSegments:n,phiStart:i,phiLength:s,thetaStart:o,thetaLength:a},e=Math.max(3,Math.floor(e)),n=Math.max(2,Math.floor(n));const l=Math.min(o+a,Math.PI);let c=0;const u=[],h=new P,f=new P,d=[],g=[],_=[],m=[];for(let p=0;p<=n;p++){const M=[],v=p/n;let x=0;p===0&&o===0?x=.5/e:p===n&&l===Math.PI&&(x=-.5/e);for(let S=0;S<=e;S++){const T=S/e;h.x=-t*Math.cos(i+T*s)*Math.sin(o+v*a),h.y=t*Math.cos(o+v*a),h.z=t*Math.sin(i+T*s)*Math.sin(o+v*a),g.push(h.x,h.y,h.z),f.copy(h).normalize(),_.push(f.x,f.y,f.z),m.push(T+x,1-v),M.push(c++)}u.push(M)}for(let p=0;p<n;p++)for(let M=0;M<e;M++){const v=u[p][M+1],x=u[p][M],S=u[p+1][M],T=u[p+1][M+1];(p!==0||o>0)&&d.push(v,x,T),(p!==n-1||l<Math.PI)&&d.push(x,S,T)}this.setIndex(d),this.setAttribute("position",new le(g,3)),this.setAttribute("normal",new le(_,3)),this.setAttribute("uv",new le(m,2))}copy(t){return super.copy(t),this.parameters=Object.assign({},t.parameters),this}static fromJSON(t){return new J0(t.radius,t.widthSegments,t.heightSegments,t.phiStart,t.phiLength,t.thetaStart,t.thetaLength)}}class Cp extends lr{constructor(t){super(),this.isMeshStandardMaterial=!0,this.defines={STANDARD:""},this.type="MeshStandardMaterial",this.color=new qt(16777215),this.roughness=1,this.metalness=0,this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new qt(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=k0,this.normalScale=new it(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.roughnessMap=null,this.metalnessMap=null,this.alphaMap=null,this.envMap=null,this.envMapIntensity=1,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.flatShading=!1,this.fog=!0,this.setValues(t)}copy(t){return super.copy(t),this.defines={STANDARD:""},this.color.copy(t.color),this.roughness=t.roughness,this.metalness=t.metalness,this.map=t.map,this.lightMap=t.lightMap,this.lightMapIntensity=t.lightMapIntensity,this.aoMap=t.aoMap,this.aoMapIntensity=t.aoMapIntensity,this.emissive.copy(t.emissive),this.emissiveMap=t.emissiveMap,this.emissiveIntensity=t.emissiveIntensity,this.bumpMap=t.bumpMap,this.bumpScale=t.bumpScale,this.normalMap=t.normalMap,this.normalMapType=t.normalMapType,this.normalScale.copy(t.normalScale),this.displacementMap=t.displacementMap,this.displacementScale=t.displacementScale,this.displacementBias=t.displacementBias,this.roughnessMap=t.roughnessMap,this.metalnessMap=t.metalnessMap,this.alphaMap=t.alphaMap,this.envMap=t.envMap,this.envMapIntensity=t.envMapIntensity,this.wireframe=t.wireframe,this.wireframeLinewidth=t.wireframeLinewidth,this.wireframeLinecap=t.wireframeLinecap,this.wireframeLinejoin=t.wireframeLinejoin,this.flatShading=t.flatShading,this.fog=t.fog,this}}class $1 extends lr{constructor(t){super(),this.isMeshNormalMaterial=!0,this.type="MeshNormalMaterial",this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=k0,this.normalScale=new it(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.wireframe=!1,this.wireframeLinewidth=1,this.flatShading=!1,this.setValues(t)}copy(t){return super.copy(t),this.bumpMap=t.bumpMap,this.bumpScale=t.bumpScale,this.normalMap=t.normalMap,this.normalMapType=t.normalMapType,this.normalScale.copy(t.normalScale),this.displacementMap=t.displacementMap,this.displacementScale=t.displacementScale,this.displacementBias=t.displacementBias,this.wireframe=t.wireframe,this.wireframeLinewidth=t.wireframeLinewidth,this.flatShading=t.flatShading,this}}const Bo={enabled:!1,files:{},add:function(r,t){this.enabled!==!1&&(this.files[r]=t)},get:function(r){if(this.enabled!==!1)return this.files[r]},remove:function(r){delete this.files[r]},clear:function(){this.files={}}};class Pp{constructor(t,e,n){const i=this;let s=!1,o=0,a=0,l;const c=[];this.onStart=void 0,this.onLoad=t,this.onProgress=e,this.onError=n,this.itemStart=function(u){a++,s===!1&&i.onStart!==void 0&&i.onStart(u,o,a),s=!0},this.itemEnd=function(u){o++,i.onProgress!==void 0&&i.onProgress(u,o,a),o===a&&(s=!1,i.onLoad!==void 0&&i.onLoad())},this.itemError=function(u){i.onError!==void 0&&i.onError(u)},this.resolveURL=function(u){return l?l(u):u},this.setURLModifier=function(u){return l=u,this},this.addHandler=function(u,h){return c.push(u,h),this},this.removeHandler=function(u){const h=c.indexOf(u);return h!==-1&&c.splice(h,2),this},this.getHandler=function(u){for(let h=0,f=c.length;h<f;h+=2){const d=c[h],g=c[h+1];if(d.global&&(d.lastIndex=0),d.test(u))return g}return null}}}const Lp=new Pp;class $s{constructor(t){this.manager=t!==void 0?t:Lp,this.crossOrigin="anonymous",this.withCredentials=!1,this.path="",this.resourcePath="",this.requestHeader={}}load(){}loadAsync(t,e){const n=this;return new Promise(function(i,s){n.load(t,i,e,s)})}parse(){}setCrossOrigin(t){return this.crossOrigin=t,this}setWithCredentials(t){return this.withCredentials=t,this}setPath(t){return this.path=t,this}setResourcePath(t){return this.resourcePath=t,this}setRequestHeader(t){return this.requestHeader=t,this}}$s.DEFAULT_MATERIAL_NAME="__DEFAULT";const ti={};class Dp extends Error{constructor(t,e){super(t),this.response=e}}class Up extends $s{constructor(t){super(t)}load(t,e,n,i){t===void 0&&(t=""),this.path!==void 0&&(t=this.path+t),t=this.manager.resolveURL(t);const s=Bo.get(t);if(s!==void 0)return this.manager.itemStart(t),setTimeout(()=>{e&&e(s),this.manager.itemEnd(t)},0),s;if(ti[t]!==void 0){ti[t].push({onLoad:e,onProgress:n,onError:i});return}ti[t]=[],ti[t].push({onLoad:e,onProgress:n,onError:i});const o=new Request(t,{headers:new Headers(this.requestHeader),credentials:this.withCredentials?"include":"same-origin"}),a=this.mimeType,l=this.responseType;fetch(o).then(c=>{if(c.status===200||c.status===0){if(c.status===0&&console.warn("THREE.FileLoader: HTTP Status 0 received."),typeof ReadableStream>"u"||c.body===void 0||c.body.getReader===void 0)return c;const u=ti[t],h=c.body.getReader(),f=c.headers.get("Content-Length")||c.headers.get("X-File-Size"),d=f?parseInt(f):0,g=d!==0;let _=0;const m=new ReadableStream({start(p){M();function M(){h.read().then(({done:v,value:x})=>{if(v)p.close();else{_+=x.byteLength;const S=new ProgressEvent("progress",{lengthComputable:g,loaded:_,total:d});for(let T=0,E=u.length;T<E;T++){const A=u[T];A.onProgress&&A.onProgress(S)}p.enqueue(x),M()}})}}});return new Response(m)}else throw new Dp(`fetch for "${c.url}" responded with ${c.status}: ${c.statusText}`,c)}).then(c=>{switch(l){case"arraybuffer":return c.arrayBuffer();case"blob":return c.blob();case"document":return c.text().then(u=>new DOMParser().parseFromString(u,a));case"json":return c.json();default:if(a===void 0)return c.text();{const h=/charset="?([^;"\s]*)"?/i.exec(a),f=h&&h[1]?h[1].toLowerCase():void 0,d=new TextDecoder(f);return c.arrayBuffer().then(g=>d.decode(g))}}}).then(c=>{Bo.add(t,c);const u=ti[t];delete ti[t];for(let h=0,f=u.length;h<f;h++){const d=u[h];d.onLoad&&d.onLoad(c)}}).catch(c=>{const u=ti[t];if(u===void 0)throw this.manager.itemError(t),c;delete ti[t];for(let h=0,f=u.length;h<f;h++){const d=u[h];d.onError&&d.onError(c)}this.manager.itemError(t)}).finally(()=>{this.manager.itemEnd(t)}),this.manager.itemStart(t)}setResponseType(t){return this.responseType=t,this}setMimeType(t){return this.mimeType=t,this}}class Ip extends $s{constructor(t){super(t)}load(t,e,n,i){this.path!==void 0&&(t=this.path+t),t=this.manager.resolveURL(t);const s=this,o=Bo.get(t);if(o!==void 0)return s.manager.itemStart(t),setTimeout(function(){e&&e(o),s.manager.itemEnd(t)},0),o;const a=Ls("img");function l(){u(),Bo.add(t,this),e&&e(this),s.manager.itemEnd(t)}function c(h){u(),i&&i(h),s.manager.itemError(t),s.manager.itemEnd(t)}function u(){a.removeEventListener("load",l,!1),a.removeEventListener("error",c,!1)}return a.addEventListener("load",l,!1),a.addEventListener("error",c,!1),t.slice(0,5)!=="data:"&&this.crossOrigin!==void 0&&(a.crossOrigin=this.crossOrigin),s.manager.itemStart(t),a.src=t,a}}class dc extends $s{constructor(t){super(t)}load(t,e,n,i){const s=new tn,o=new Ip(this.manager);return o.setCrossOrigin(this.crossOrigin),o.setPath(this.path),o.load(t,function(a){s.image=a,s.needsUpdate=!0,e!==void 0&&e(s)},n,i),s}}class Op extends pe{constructor(t,e=1){super(),this.isLight=!0,this.type="Light",this.color=new qt(t),this.intensity=e}dispose(){}copy(t,e){return super.copy(t,e),this.color.copy(t.color),this.intensity=t.intensity,this}toJSON(t){const e=super.toJSON(t);return e.object.color=this.color.getHex(),e.object.intensity=this.intensity,this.groundColor!==void 0&&(e.object.groundColor=this.groundColor.getHex()),this.distance!==void 0&&(e.object.distance=this.distance),this.angle!==void 0&&(e.object.angle=this.angle),this.decay!==void 0&&(e.object.decay=this.decay),this.penumbra!==void 0&&(e.object.penumbra=this.penumbra),this.shadow!==void 0&&(e.object.shadow=this.shadow.toJSON()),e}}const Xa=new ge,J1=new P,Q1=new P;class Np{constructor(t){this.camera=t,this.bias=0,this.normalBias=0,this.radius=1,this.blurSamples=8,this.mapSize=new it(512,512),this.map=null,this.mapPass=null,this.matrix=new ge,this.autoUpdate=!0,this.needsUpdate=!1,this._frustum=new V0,this._frameExtents=new it(1,1),this._viewportCount=1,this._viewports=[new Ue(0,0,1,1)]}getViewportCount(){return this._viewportCount}getFrustum(){return this._frustum}updateMatrices(t){const e=this.camera,n=this.matrix;J1.setFromMatrixPosition(t.matrixWorld),e.position.copy(J1),Q1.setFromMatrixPosition(t.target.matrixWorld),e.lookAt(Q1),e.updateMatrixWorld(),Xa.multiplyMatrices(e.projectionMatrix,e.matrixWorldInverse),this._frustum.setFromProjectionMatrix(Xa),n.set(.5,0,0,.5,0,.5,0,.5,0,0,.5,.5,0,0,0,1),n.multiply(Xa)}getViewport(t){return this._viewports[t]}getFrameExtents(){return this._frameExtents}dispose(){this.map&&this.map.dispose(),this.mapPass&&this.mapPass.dispose()}copy(t){return this.camera=t.camera.clone(),this.bias=t.bias,this.radius=t.radius,this.mapSize.copy(t.mapSize),this}clone(){return new this.constructor().copy(this)}toJSON(){const t={};return this.bias!==0&&(t.bias=this.bias),this.normalBias!==0&&(t.normalBias=this.normalBias),this.radius!==1&&(t.radius=this.radius),(this.mapSize.x!==512||this.mapSize.y!==512)&&(t.mapSize=this.mapSize.toArray()),t.camera=this.camera.toJSON(!1).object,delete t.camera.matrix,t}}class Fp extends Np{constructor(){super(new $l(-5,5,5,-5,.5,500)),this.isDirectionalLightShadow=!0}}class pc extends Op{constructor(t,e){super(t,e),this.isDirectionalLight=!0,this.type="DirectionalLight",this.position.copy(pe.DEFAULT_UP),this.updateMatrix(),this.target=new pe,this.shadow=new Fp}dispose(){this.shadow.dispose()}copy(t){return super.copy(t),this.target=t.target.clone(),this.shadow=t.shadow.clone(),this}}class zp{constructor(t,e,n=0,i=1/0){this.ray=new Ks(t,e),this.near=n,this.far=i,this.camera=null,this.layers=new H0,this.params={Mesh:{},Line:{threshold:1},LOD:{},Points:{threshold:1},Sprite:{}}}set(t,e){this.ray.set(t,e)}setFromCamera(t,e){e.isPerspectiveCamera?(this.ray.origin.setFromMatrixPosition(e.matrixWorld),this.ray.direction.set(t.x,t.y,.5).unproject(e).sub(this.ray.origin).normalize(),this.camera=e):e.isOrthographicCamera?(this.ray.origin.set(t.x,t.y,(e.near+e.far)/(e.near-e.far)).unproject(e),this.ray.direction.set(0,0,-1).transformDirection(e.matrixWorld),this.camera=e):console.error("THREE.Raycaster: Unsupported camera type: "+e.type)}intersectObject(t,e=!0,n=[]){return x0(t,this,n,e),n.sort(tl),n}intersectObjects(t,e=!0,n=[]){for(let i=0,s=t.length;i<s;i++)x0(t[i],this,n,e);return n.sort(tl),n}}function tl(r,t){return r.distance-t.distance}function x0(r,t,e,n){if(r.layers.test(t.layers)&&r.raycast(t,e),n===!0){const i=r.children;for(let s=0,o=i.length;s<o;s++)x0(i[s],t,e,!0)}}class el{constructor(t=1,e=0,n=0){return this.radius=t,this.phi=e,this.theta=n,this}set(t,e,n){return this.radius=t,this.phi=e,this.theta=n,this}copy(t){return this.radius=t.radius,this.phi=t.phi,this.theta=t.theta,this}makeSafe(){return this.phi=Math.max(1e-6,Math.min(Math.PI-1e-6,this.phi)),this}setFromVector3(t){return this.setFromCartesianCoords(t.x,t.y,t.z)}setFromCartesianCoords(t,e,n){return this.radius=Math.sqrt(t*t+e*e+n*n),this.radius===0?(this.theta=0,this.phi=0):(this.theta=Math.atan2(t,n),this.phi=Math.acos(De(e/this.radius,-1,1))),this}clone(){return new this.constructor().copy(this)}}class Bp{constructor(){this.type="ShapePath",this.color=new qt,this.subPaths=[],this.currentPath=null}moveTo(t,e){return this.currentPath=new _0,this.subPaths.push(this.currentPath),this.currentPath.moveTo(t,e),this}lineTo(t,e){return this.currentPath.lineTo(t,e),this}quadraticCurveTo(t,e,n,i){return this.currentPath.quadraticCurveTo(t,e,n,i),this}bezierCurveTo(t,e,n,i,s,o){return this.currentPath.bezierCurveTo(t,e,n,i,s,o),this}splineThru(t){return this.currentPath.splineThru(t),this}toShapes(t){function e(p){const M=[];for(let v=0,x=p.length;v<x;v++){const S=p[v],T=new Do;T.curves=S.curves,M.push(T)}return M}function n(p,M){const v=M.length;let x=!1;for(let S=v-1,T=0;T<v;S=T++){let E=M[S],A=M[T],y=A.x-E.x,b=A.y-E.y;if(Math.abs(b)>Number.EPSILON){if(b<0&&(E=M[T],y=-y,A=M[S],b=-b),p.y<E.y||p.y>A.y)continue;if(p.y===E.y){if(p.x===E.x)return!0}else{const F=b*(p.x-E.x)-y*(p.y-E.y);if(F===0)return!0;if(F<0)continue;x=!x}}else{if(p.y!==E.y)continue;if(A.x<=p.x&&p.x<=E.x||E.x<=p.x&&p.x<=A.x)return!0}}return x}const i=Hr.isClockWise,s=this.subPaths;if(s.length===0)return[];let o,a,l;const c=[];if(s.length===1)return a=s[0],l=new Do,l.curves=a.curves,c.push(l),c;let u=!i(s[0].getPoints());u=t?!u:u;const h=[],f=[];let d=[],g=0,_;f[g]=void 0,d[g]=[];for(let p=0,M=s.length;p<M;p++)a=s[p],_=a.getPoints(),o=i(_),o=t?!o:o,o?(!u&&f[g]&&g++,f[g]={s:new Do,p:_},f[g].s.curves=a.curves,u&&g++,d[g]=[]):d[g].push({h:a,p:_[0]});if(!f[0])return e(s);if(f.length>1){let p=!1,M=0;for(let v=0,x=f.length;v<x;v++)h[v]=[];for(let v=0,x=f.length;v<x;v++){const S=d[v];for(let T=0;T<S.length;T++){const E=S[T];let A=!0;for(let y=0;y<f.length;y++)n(E.p,f[y].p)&&(v!==y&&M++,A?(A=!1,h[y].push(E)):p=!0);A&&h[v].push(E)}}M>0&&p===!1&&(d=h)}let m;for(let p=0,M=f.length;p<M;p++){l=f[p].s,c.push(l),m=d[p];for(let v=0,x=m.length;v<x;v++)l.holes.push(m[v].h)}return c}}typeof __THREE_DEVTOOLS__<"u"&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("register",{detail:{revision:z0}}));typeof window<"u"&&(window.__THREE__?console.warn("WARNING: Multiple instances of Three.js being imported."):window.__THREE__=z0);const nl={type:"change"},qa={type:"start"},il={type:"end"},Ao=new Ks,rl=new pi,kp=Math.cos(70*ms.DEG2RAD);class Gp extends or{constructor(t,e){super(),this.object=t,this.domElement=e,this.domElement.style.touchAction="none",this.enabled=!0,this.target=new P,this.minDistance=0,this.maxDistance=1/0,this.minZoom=0,this.maxZoom=1/0,this.minPolarAngle=0,this.maxPolarAngle=Math.PI,this.minAzimuthAngle=-1/0,this.maxAzimuthAngle=1/0,this.enableDamping=!1,this.dampingFactor=.05,this.enableZoom=!0,this.zoomSpeed=1,this.enableRotate=!0,this.rotateSpeed=1,this.enablePan=!0,this.panSpeed=1,this.screenSpacePanning=!0,this.keyPanSpeed=7,this.zoomToCursor=!1,this.autoRotate=!1,this.autoRotateSpeed=2,this.keys={LEFT:"ArrowLeft",UP:"ArrowUp",RIGHT:"ArrowRight",BOTTOM:"ArrowDown"},this.mouseButtons={LEFT:ur.ROTATE,MIDDLE:ur.DOLLY,RIGHT:ur.PAN},this.touches={ONE:hr.ROTATE,TWO:hr.DOLLY_PAN},this.target0=this.target.clone(),this.position0=this.object.position.clone(),this.zoom0=this.object.zoom,this._domElementKeyEvents=null,this.getPolarAngle=function(){return a.phi},this.getAzimuthalAngle=function(){return a.theta},this.getDistance=function(){return this.object.position.distanceTo(this.target)},this.listenToKeyEvents=function(D){D.addEventListener("keydown",w),this._domElementKeyEvents=D},this.stopListenToKeyEvents=function(){this._domElementKeyEvents.removeEventListener("keydown",w),this._domElementKeyEvents=null},this.saveState=function(){n.target0.copy(n.target),n.position0.copy(n.object.position),n.zoom0=n.object.zoom},this.reset=function(){n.target.copy(n.target0),n.object.position.copy(n.position0),n.object.zoom=n.zoom0,n.object.updateProjectionMatrix(),n.dispatchEvent(nl),n.update(),s=i.NONE},this.update=function(){const D=new P,tt=new er().setFromUnitVectors(t.up,new P(0,1,0)),vt=tt.clone().invert(),dt=new P,gt=new er,Nt=new P,Wt=2*Math.PI;return function(mt=null){const j=n.object.position;D.copy(j).sub(n.target),D.applyQuaternion(tt),a.setFromVector3(D),n.autoRotate&&s===i.NONE&&F(y(mt)),n.enableDamping?(a.theta+=l.theta*n.dampingFactor,a.phi+=l.phi*n.dampingFactor):(a.theta+=l.theta,a.phi+=l.phi);let rt=n.minAzimuthAngle,ft=n.maxAzimuthAngle;isFinite(rt)&&isFinite(ft)&&(rt<-Math.PI?rt+=Wt:rt>Math.PI&&(rt-=Wt),ft<-Math.PI?ft+=Wt:ft>Math.PI&&(ft-=Wt),rt<=ft?a.theta=Math.max(rt,Math.min(ft,a.theta)):a.theta=a.theta>(rt+ft)/2?Math.max(rt,a.theta):Math.min(ft,a.theta)),a.phi=Math.max(n.minPolarAngle,Math.min(n.maxPolarAngle,a.phi)),a.makeSafe(),n.enableDamping===!0?n.target.addScaledVector(u,n.dampingFactor):n.target.add(u),n.zoomToCursor&&T||n.object.isOrthographicCamera?a.radius=Q(a.radius):a.radius=Q(a.radius*c),D.setFromSpherical(a),D.applyQuaternion(vt),j.copy(n.target).add(D),n.object.lookAt(n.target),n.enableDamping===!0?(l.theta*=1-n.dampingFactor,l.phi*=1-n.dampingFactor,u.multiplyScalar(1-n.dampingFactor)):(l.set(0,0,0),u.set(0,0,0));let kt=!1;if(n.zoomToCursor&&T){let jt=null;if(n.object.isPerspectiveCamera){const ne=D.length();jt=Q(ne*c);const on=ne-jt;n.object.position.addScaledVector(x,on),n.object.updateMatrixWorld()}else if(n.object.isOrthographicCamera){const ne=new P(S.x,S.y,0);ne.unproject(n.object),n.object.zoom=Math.max(n.minZoom,Math.min(n.maxZoom,n.object.zoom/c)),n.object.updateProjectionMatrix(),kt=!0;const on=new P(S.x,S.y,0);on.unproject(n.object),n.object.position.sub(on).add(ne),n.object.updateMatrixWorld(),jt=D.length()}else console.warn("WARNING: OrbitControls.js encountered an unknown camera type - zoom to cursor disabled."),n.zoomToCursor=!1;jt!==null&&(this.screenSpacePanning?n.target.set(0,0,-1).transformDirection(n.object.matrix).multiplyScalar(jt).add(n.object.position):(Ao.origin.copy(n.object.position),Ao.direction.set(0,0,-1).transformDirection(n.object.matrix),Math.abs(n.object.up.dot(Ao.direction))<kp?t.lookAt(n.target):(rl.setFromNormalAndCoplanarPoint(n.object.up,n.target),Ao.intersectPlane(rl,n.target))))}else n.object.isOrthographicCamera&&(n.object.zoom=Math.max(n.minZoom,Math.min(n.maxZoom,n.object.zoom/c)),n.object.updateProjectionMatrix(),kt=!0);return c=1,T=!1,kt||dt.distanceToSquared(n.object.position)>o||8*(1-gt.dot(n.object.quaternion))>o||Nt.distanceToSquared(n.target)>0?(n.dispatchEvent(nl),dt.copy(n.object.position),gt.copy(n.object.quaternion),Nt.copy(n.target),kt=!1,!0):!1}}(),this.dispose=function(){n.domElement.removeEventListener("contextmenu",nt),n.domElement.removeEventListener("pointerdown",xt),n.domElement.removeEventListener("pointercancel",Lt),n.domElement.removeEventListener("wheel",C),n.domElement.removeEventListener("pointermove",Mt),n.domElement.removeEventListener("pointerup",Lt),n._domElementKeyEvents!==null&&(n._domElementKeyEvents.removeEventListener("keydown",w),n._domElementKeyEvents=null)};const n=this,i={NONE:-1,ROTATE:0,DOLLY:1,PAN:2,TOUCH_ROTATE:3,TOUCH_PAN:4,TOUCH_DOLLY_PAN:5,TOUCH_DOLLY_ROTATE:6};let s=i.NONE;const o=1e-6,a=new el,l=new el;let c=1;const u=new P,h=new it,f=new it,d=new it,g=new it,_=new it,m=new it,p=new it,M=new it,v=new it,x=new P,S=new it;let T=!1;const E=[],A={};function y(D){return D!==null?2*Math.PI/60*n.autoRotateSpeed*D:2*Math.PI/60/60*n.autoRotateSpeed}function b(){return Math.pow(.95,n.zoomSpeed)}function F(D){l.theta-=D}function z(D){l.phi-=D}const I=function(){const D=new P;return function(vt,dt){D.setFromMatrixColumn(dt,0),D.multiplyScalar(-vt),u.add(D)}}(),O=function(){const D=new P;return function(vt,dt){n.screenSpacePanning===!0?D.setFromMatrixColumn(dt,1):(D.setFromMatrixColumn(dt,0),D.crossVectors(n.object.up,D)),D.multiplyScalar(vt),u.add(D)}}(),N=function(){const D=new P;return function(vt,dt){const gt=n.domElement;if(n.object.isPerspectiveCamera){const Nt=n.object.position;D.copy(Nt).sub(n.target);let Wt=D.length();Wt*=Math.tan(n.object.fov/2*Math.PI/180),I(2*vt*Wt/gt.clientHeight,n.object.matrix),O(2*dt*Wt/gt.clientHeight,n.object.matrix)}else n.object.isOrthographicCamera?(I(vt*(n.object.right-n.object.left)/n.object.zoom/gt.clientWidth,n.object.matrix),O(dt*(n.object.top-n.object.bottom)/n.object.zoom/gt.clientHeight,n.object.matrix)):(console.warn("WARNING: OrbitControls.js encountered an unknown camera type - pan disabled."),n.enablePan=!1)}}();function X(D){n.object.isPerspectiveCamera||n.object.isOrthographicCamera?c/=D:(console.warn("WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled."),n.enableZoom=!1)}function k(D){n.object.isPerspectiveCamera||n.object.isOrthographicCamera?c*=D:(console.warn("WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled."),n.enableZoom=!1)}function Y(D){if(!n.zoomToCursor)return;T=!0;const tt=n.domElement.getBoundingClientRect(),vt=D.clientX-tt.left,dt=D.clientY-tt.top,gt=tt.width,Nt=tt.height;S.x=vt/gt*2-1,S.y=-(dt/Nt)*2+1,x.set(S.x,S.y,1).unproject(n.object).sub(n.object.position).normalize()}function Q(D){return Math.max(n.minDistance,Math.min(n.maxDistance,D))}function $(D){h.set(D.clientX,D.clientY)}function B(D){Y(D),p.set(D.clientX,D.clientY)}function V(D){g.set(D.clientX,D.clientY)}function ht(D){f.set(D.clientX,D.clientY),d.subVectors(f,h).multiplyScalar(n.rotateSpeed);const tt=n.domElement;F(2*Math.PI*d.x/tt.clientHeight),z(2*Math.PI*d.y/tt.clientHeight),h.copy(f),n.update()}function ct(D){M.set(D.clientX,D.clientY),v.subVectors(M,p),v.y>0?X(b()):v.y<0&&k(b()),p.copy(M),n.update()}function _t(D){_.set(D.clientX,D.clientY),m.subVectors(_,g).multiplyScalar(n.panSpeed),N(m.x,m.y),g.copy(_),n.update()}function Rt(D){Y(D),D.deltaY<0?k(b()):D.deltaY>0&&X(b()),n.update()}function wt(D){let tt=!1;switch(D.code){case n.keys.UP:D.ctrlKey||D.metaKey||D.shiftKey?z(2*Math.PI*n.rotateSpeed/n.domElement.clientHeight):N(0,n.keyPanSpeed),tt=!0;break;case n.keys.BOTTOM:D.ctrlKey||D.metaKey||D.shiftKey?z(-2*Math.PI*n.rotateSpeed/n.domElement.clientHeight):N(0,-n.keyPanSpeed),tt=!0;break;case n.keys.LEFT:D.ctrlKey||D.metaKey||D.shiftKey?F(2*Math.PI*n.rotateSpeed/n.domElement.clientHeight):N(n.keyPanSpeed,0),tt=!0;break;case n.keys.RIGHT:D.ctrlKey||D.metaKey||D.shiftKey?F(-2*Math.PI*n.rotateSpeed/n.domElement.clientHeight):N(-n.keyPanSpeed,0),tt=!0;break}tt&&(D.preventDefault(),n.update())}function bt(){if(E.length===1)h.set(E[0].pageX,E[0].pageY);else{const D=.5*(E[0].pageX+E[1].pageX),tt=.5*(E[0].pageY+E[1].pageY);h.set(D,tt)}}function Vt(){if(E.length===1)g.set(E[0].pageX,E[0].pageY);else{const D=.5*(E[0].pageX+E[1].pageX),tt=.5*(E[0].pageY+E[1].pageY);g.set(D,tt)}}function Kt(){const D=E[0].pageX-E[1].pageX,tt=E[0].pageY-E[1].pageY,vt=Math.sqrt(D*D+tt*tt);p.set(0,vt)}function Ct(){n.enableZoom&&Kt(),n.enablePan&&Vt()}function L(){n.enableZoom&&Kt(),n.enableRotate&&bt()}function ut(D){if(E.length==1)f.set(D.pageX,D.pageY);else{const vt=q(D),dt=.5*(D.pageX+vt.x),gt=.5*(D.pageY+vt.y);f.set(dt,gt)}d.subVectors(f,h).multiplyScalar(n.rotateSpeed);const tt=n.domElement;F(2*Math.PI*d.x/tt.clientHeight),z(2*Math.PI*d.y/tt.clientHeight),h.copy(f)}function J(D){if(E.length===1)_.set(D.pageX,D.pageY);else{const tt=q(D),vt=.5*(D.pageX+tt.x),dt=.5*(D.pageY+tt.y);_.set(vt,dt)}m.subVectors(_,g).multiplyScalar(n.panSpeed),N(m.x,m.y),g.copy(_)}function ot(D){const tt=q(D),vt=D.pageX-tt.x,dt=D.pageY-tt.y,gt=Math.sqrt(vt*vt+dt*dt);M.set(0,gt),v.set(0,Math.pow(M.y/p.y,n.zoomSpeed)),X(v.y),p.copy(M)}function et(D){n.enableZoom&&ot(D),n.enablePan&&J(D)}function Tt(D){n.enableZoom&&ot(D),n.enableRotate&&ut(D)}function xt(D){n.enabled!==!1&&(E.length===0&&(n.domElement.setPointerCapture(D.pointerId),n.domElement.addEventListener("pointermove",Mt),n.domElement.addEventListener("pointerup",Lt)),at(D),D.pointerType==="touch"?W(D):Bt(D))}function Mt(D){n.enabled!==!1&&(D.pointerType==="touch"?st(D):se(D))}function Lt(D){Et(D),E.length===0&&(n.domElement.releasePointerCapture(D.pointerId),n.domElement.removeEventListener("pointermove",Mt),n.domElement.removeEventListener("pointerup",Lt)),n.dispatchEvent(il),s=i.NONE}function Bt(D){let tt;switch(D.button){case 0:tt=n.mouseButtons.LEFT;break;case 1:tt=n.mouseButtons.MIDDLE;break;case 2:tt=n.mouseButtons.RIGHT;break;default:tt=-1}switch(tt){case ur.DOLLY:if(n.enableZoom===!1)return;B(D),s=i.DOLLY;break;case ur.ROTATE:if(D.ctrlKey||D.metaKey||D.shiftKey){if(n.enablePan===!1)return;V(D),s=i.PAN}else{if(n.enableRotate===!1)return;$(D),s=i.ROTATE}break;case ur.PAN:if(D.ctrlKey||D.metaKey||D.shiftKey){if(n.enableRotate===!1)return;$(D),s=i.ROTATE}else{if(n.enablePan===!1)return;V(D),s=i.PAN}break;default:s=i.NONE}s!==i.NONE&&n.dispatchEvent(qa)}function se(D){switch(s){case i.ROTATE:if(n.enableRotate===!1)return;ht(D);break;case i.DOLLY:if(n.enableZoom===!1)return;ct(D);break;case i.PAN:if(n.enablePan===!1)return;_t(D);break}}function C(D){n.enabled===!1||n.enableZoom===!1||s!==i.NONE||(D.preventDefault(),n.dispatchEvent(qa),Rt(D),n.dispatchEvent(il))}function w(D){n.enabled===!1||n.enablePan===!1||wt(D)}function W(D){switch(lt(D),E.length){case 1:switch(n.touches.ONE){case hr.ROTATE:if(n.enableRotate===!1)return;bt(),s=i.TOUCH_ROTATE;break;case hr.PAN:if(n.enablePan===!1)return;Vt(),s=i.TOUCH_PAN;break;default:s=i.NONE}break;case 2:switch(n.touches.TWO){case hr.DOLLY_PAN:if(n.enableZoom===!1&&n.enablePan===!1)return;Ct(),s=i.TOUCH_DOLLY_PAN;break;case hr.DOLLY_ROTATE:if(n.enableZoom===!1&&n.enableRotate===!1)return;L(),s=i.TOUCH_DOLLY_ROTATE;break;default:s=i.NONE}break;default:s=i.NONE}s!==i.NONE&&n.dispatchEvent(qa)}function st(D){switch(lt(D),s){case i.TOUCH_ROTATE:if(n.enableRotate===!1)return;ut(D),n.update();break;case i.TOUCH_PAN:if(n.enablePan===!1)return;J(D),n.update();break;case i.TOUCH_DOLLY_PAN:if(n.enableZoom===!1&&n.enablePan===!1)return;et(D),n.update();break;case i.TOUCH_DOLLY_ROTATE:if(n.enableZoom===!1&&n.enableRotate===!1)return;Tt(D),n.update();break;default:s=i.NONE}}function nt(D){n.enabled!==!1&&D.preventDefault()}function at(D){E.push(D)}function Et(D){delete A[D.pointerId];for(let tt=0;tt<E.length;tt++)if(E[tt].pointerId==D.pointerId){E.splice(tt,1);return}}function lt(D){let tt=A[D.pointerId];tt===void 0&&(tt=new it,A[D.pointerId]=tt),tt.set(D.pageX,D.pageY)}function q(D){const tt=D.pointerId===E[0].pointerId?E[1]:E[0];return A[tt.pointerId]}n.domElement.addEventListener("contextmenu",nt),n.domElement.addEventListener("pointerdown",xt),n.domElement.addEventListener("pointercancel",Lt),n.domElement.addEventListener("wheel",C,{passive:!1}),this.update()}}function ni(r){if(r===void 0)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return r}function mc(r,t){r.prototype=Object.create(t.prototype),r.prototype.constructor=r,r.__proto__=t}/*!
 * GSAP 3.12.2
 * https://greensock.com
 *
 * @license Copyright 2008-2023, GreenSock. All rights reserved.
 * Subject to the terms at https://greensock.com/standard-license or for
 * Club GreenSock members, the agreement issued with that membership.
 * @author: Jack Doyle, jack@greensock.com
*/var pn={autoSleep:120,force3D:"auto",nullTargetWarn:1,units:{lineHeight:""}},es={duration:.5,overwrite:!1,delay:0},Q0,Ve,de,En=1e8,ee=1/En,y0=Math.PI*2,Hp=y0/4,Vp=0,_c=Math.sqrt,Wp=Math.cos,Xp=Math.sin,Ie=function(t){return typeof t=="string"},_e=function(t){return typeof t=="function"},ai=function(t){return typeof t=="number"},t3=function(t){return typeof t>"u"},Vn=function(t){return typeof t=="object"},en=function(t){return t!==!1},e3=function(){return typeof window<"u"},Ro=function(t){return _e(t)||Ie(t)},gc=typeof ArrayBuffer=="function"&&ArrayBuffer.isView||function(){},We=Array.isArray,M0=/(?:-?\.?\d|\.)+/gi,vc=/[-+=.]*\d+[.e\-+]*\d*[e\-+]*\d*/g,Fr=/[-+=.]*\d+[.e-]*\d*[a-z%]*/g,Ya=/[-+=.]*\d+\.?\d*(?:e-|e\+)?\d*/gi,xc=/[+-]=-?[.\d]+/,yc=/[^,'"\[\]\s]+/gi,qp=/^[+\-=e\s\d]*\d+[.\d]*([a-z]*|%)\s*$/i,ce,xn,S0,n3,mn={},ko={},Mc,Sc=function(t){return(ko=ir(t,mn))&&sn},i3=function(t,e){return console.warn("Invalid property",t,"set to",e,"Missing plugin? gsap.registerPlugin()")},Go=function(t,e){return!e&&console.warn(t)},Ec=function(t,e){return t&&(mn[t]=e)&&ko&&(ko[t]=e)||mn},Os=function(){return 0},Yp={suppressEvents:!0,isStart:!0,kill:!1},Uo={suppressEvents:!0,kill:!1},jp={suppressEvents:!0},r3={},bi=[],E0={},Tc,hn={},ja={},sl=30,Io=[],s3="",o3=function(t){var e=t[0],n,i;if(Vn(e)||_e(e)||(t=[t]),!(n=(e._gsap||{}).harness)){for(i=Io.length;i--&&!Io[i].targetTest(e););n=Io[i]}for(i=t.length;i--;)t[i]&&(t[i]._gsap||(t[i]._gsap=new jc(t[i],n)))||t.splice(i,1);return t},Zi=function(t){return t._gsap||o3(Tn(t))[0]._gsap},bc=function(t,e,n){return(n=t[e])&&_e(n)?t[e]():t3(n)&&t.getAttribute&&t.getAttribute(e)||n},nn=function(t,e){return(t=t.split(",")).forEach(e)||t},Me=function(t){return Math.round(t*1e5)/1e5||0},Fe=function(t){return Math.round(t*1e7)/1e7||0},Vr=function(t,e){var n=e.charAt(0),i=parseFloat(e.substr(2));return t=parseFloat(t),n==="+"?t+i:n==="-"?t-i:n==="*"?t*i:t/i},Zp=function(t,e){for(var n=e.length,i=0;t.indexOf(e[i])<0&&++i<n;);return i<n},Ho=function(){var t=bi.length,e=bi.slice(0),n,i;for(E0={},bi.length=0,n=0;n<t;n++)i=e[n],i&&i._lazy&&(i.render(i._lazy[0],i._lazy[1],!0)._lazy=0)},wc=function(t,e,n,i){bi.length&&!Ve&&Ho(),t.render(e,n,i||Ve&&e<0&&(t._initted||t._startAt)),bi.length&&!Ve&&Ho()},Ac=function(t){var e=parseFloat(t);return(e||e===0)&&(t+"").match(yc).length<2?e:Ie(t)?t.trim():t},Rc=function(t){return t},An=function(t,e){for(var n in e)n in t||(t[n]=e[n]);return t},Kp=function(t){return function(e,n){for(var i in n)i in e||i==="duration"&&t||i==="ease"||(e[i]=n[i])}},ir=function(t,e){for(var n in e)t[n]=e[n];return t},ol=function r(t,e){for(var n in e)n!=="__proto__"&&n!=="constructor"&&n!=="prototype"&&(t[n]=Vn(e[n])?r(t[n]||(t[n]={}),e[n]):e[n]);return t},Vo=function(t,e){var n={},i;for(i in t)i in e||(n[i]=t[i]);return n},bs=function(t){var e=t.parent||ce,n=t.keyframes?Kp(We(t.keyframes)):An;if(en(t.inherit))for(;e;)n(t,e.vars.defaults),e=e.parent||e._dp;return t},$p=function(t,e){for(var n=t.length,i=n===e.length;i&&n--&&t[n]===e[n];);return n<0},Cc=function(t,e,n,i,s){n===void 0&&(n="_first"),i===void 0&&(i="_last");var o=t[i],a;if(s)for(a=e[s];o&&o[s]>a;)o=o._prev;return o?(e._next=o._next,o._next=e):(e._next=t[n],t[n]=e),e._next?e._next._prev=e:t[i]=e,e._prev=o,e.parent=e._dp=t,e},ra=function(t,e,n,i){n===void 0&&(n="_first"),i===void 0&&(i="_last");var s=e._prev,o=e._next;s?s._next=o:t[n]===e&&(t[n]=o),o?o._prev=s:t[i]===e&&(t[i]=s),e._next=e._prev=e.parent=null},Ai=function(t,e){t.parent&&(!e||t.parent.autoRemoveChildren)&&t.parent.remove&&t.parent.remove(t),t._act=0},Ki=function(t,e){if(t&&(!e||e._end>t._dur||e._start<0))for(var n=t;n;)n._dirty=1,n=n.parent;return t},Jp=function(t){for(var e=t.parent;e&&e.parent;)e._dirty=1,e.totalDuration(),e=e.parent;return t},T0=function(t,e,n,i){return t._startAt&&(Ve?t._startAt.revert(Uo):t.vars.immediateRender&&!t.vars.autoRevert||t._startAt.render(e,!0,i))},Qp=function r(t){return!t||t._ts&&r(t.parent)},al=function(t){return t._repeat?ns(t._tTime,t=t.duration()+t._rDelay)*t:0},ns=function(t,e){var n=Math.floor(t/=e);return t&&n===t?n-1:n},Wo=function(t,e){return(t-e._start)*e._ts+(e._ts>=0?0:e._dirty?e.totalDuration():e._tDur)},sa=function(t){return t._end=Fe(t._start+(t._tDur/Math.abs(t._ts||t._rts||ee)||0))},oa=function(t,e){var n=t._dp;return n&&n.smoothChildTiming&&t._ts&&(t._start=Fe(n._time-(t._ts>0?e/t._ts:((t._dirty?t.totalDuration():t._tDur)-e)/-t._ts)),sa(t),n._dirty||Ki(n,t)),t},Pc=function(t,e){var n;if((e._time||!e._dur&&e._initted||e._start<t._time&&(e._dur||!e.add))&&(n=Wo(t.rawTime(),e),(!e._dur||Js(0,e.totalDuration(),n)-e._tTime>ee)&&e.render(n,!0)),Ki(t,e)._dp&&t._initted&&t._time>=t._dur&&t._ts){if(t._dur<t.duration())for(n=t;n._dp;)n.rawTime()>=0&&n.totalTime(n._tTime),n=n._dp;t._zTime=-ee}},zn=function(t,e,n,i){return e.parent&&Ai(e),e._start=Fe((ai(n)?n:n||t!==ce?vn(t,n,e):t._time)+e._delay),e._end=Fe(e._start+(e.totalDuration()/Math.abs(e.timeScale())||0)),Cc(t,e,"_first","_last",t._sort?"_start":0),b0(e)||(t._recent=e),i||Pc(t,e),t._ts<0&&oa(t,t._tTime),t},Lc=function(t,e){return(mn.ScrollTrigger||i3("scrollTrigger",e))&&mn.ScrollTrigger.create(e,t)},Dc=function(t,e,n,i,s){if(l3(t,e,s),!t._initted)return 1;if(!n&&t._pt&&!Ve&&(t._dur&&t.vars.lazy!==!1||!t._dur&&t.vars.lazy)&&Tc!==dn.frame)return bi.push(t),t._lazy=[s,i],1},t4=function r(t){var e=t.parent;return e&&e._ts&&e._initted&&!e._lock&&(e.rawTime()<0||r(e))},b0=function(t){var e=t.data;return e==="isFromStart"||e==="isStart"},e4=function(t,e,n,i){var s=t.ratio,o=e<0||!e&&(!t._start&&t4(t)&&!(!t._initted&&b0(t))||(t._ts<0||t._dp._ts<0)&&!b0(t))?0:1,a=t._rDelay,l=0,c,u,h;if(a&&t._repeat&&(l=Js(0,t._tDur,e),u=ns(l,a),t._yoyo&&u&1&&(o=1-o),u!==ns(t._tTime,a)&&(s=1-o,t.vars.repeatRefresh&&t._initted&&t.invalidate())),o!==s||Ve||i||t._zTime===ee||!e&&t._zTime){if(!t._initted&&Dc(t,e,i,n,l))return;for(h=t._zTime,t._zTime=e||(n?ee:0),n||(n=e&&!h),t.ratio=o,t._from&&(o=1-o),t._time=0,t._tTime=l,c=t._pt;c;)c.r(o,c.d),c=c._next;e<0&&T0(t,e,n,!0),t._onUpdate&&!n&&bn(t,"onUpdate"),l&&t._repeat&&!n&&t.parent&&bn(t,"onRepeat"),(e>=t._tDur||e<0)&&t.ratio===o&&(o&&Ai(t,1),!n&&!Ve&&(bn(t,o?"onComplete":"onReverseComplete",!0),t._prom&&t._prom()))}else t._zTime||(t._zTime=e)},n4=function(t,e,n){var i;if(n>e)for(i=t._first;i&&i._start<=n;){if(i.data==="isPause"&&i._start>e)return i;i=i._next}else for(i=t._last;i&&i._start>=n;){if(i.data==="isPause"&&i._start<e)return i;i=i._prev}},is=function(t,e,n,i){var s=t._repeat,o=Fe(e)||0,a=t._tTime/t._tDur;return a&&!i&&(t._time*=o/t._dur),t._dur=o,t._tDur=s?s<0?1e10:Fe(o*(s+1)+t._rDelay*s):o,a>0&&!i&&oa(t,t._tTime=t._tDur*a),t.parent&&sa(t),n||Ki(t.parent,t),t},ll=function(t){return t instanceof Je?Ki(t):is(t,t._dur)},i4={_start:0,endTime:Os,totalDuration:Os},vn=function r(t,e,n){var i=t.labels,s=t._recent||i4,o=t.duration()>=En?s.endTime(!1):t._dur,a,l,c;return Ie(e)&&(isNaN(e)||e in i)?(l=e.charAt(0),c=e.substr(-1)==="%",a=e.indexOf("="),l==="<"||l===">"?(a>=0&&(e=e.replace(/=/,"")),(l==="<"?s._start:s.endTime(s._repeat>=0))+(parseFloat(e.substr(1))||0)*(c?(a<0?s:n).totalDuration()/100:1)):a<0?(e in i||(i[e]=o),i[e]):(l=parseFloat(e.charAt(a-1)+e.substr(a+1)),c&&n&&(l=l/100*(We(n)?n[0]:n).totalDuration()),a>1?r(t,e.substr(0,a-1),n)+l:o+l)):e==null?o:+e},ws=function(t,e,n){var i=ai(e[1]),s=(i?2:1)+(t<2?0:1),o=e[s],a,l;if(i&&(o.duration=e[1]),o.parent=n,t){for(a=o,l=n;l&&!("immediateRender"in a);)a=l.vars.defaults||{},l=en(l.vars.inherit)&&l.parent;o.immediateRender=en(a.immediateRender),t<2?o.runBackwards=1:o.startAt=e[s-1]}return new be(e[0],o,e[s+1])},Ci=function(t,e){return t||t===0?e(t):e},Js=function(t,e,n){return n<t?t:n>e?e:n},He=function(t,e){return!Ie(t)||!(e=qp.exec(t))?"":e[1]},r4=function(t,e,n){return Ci(n,function(i){return Js(t,e,i)})},w0=[].slice,Uc=function(t,e){return t&&Vn(t)&&"length"in t&&(!e&&!t.length||t.length-1 in t&&Vn(t[0]))&&!t.nodeType&&t!==xn},s4=function(t,e,n){return n===void 0&&(n=[]),t.forEach(function(i){var s;return Ie(i)&&!e||Uc(i,1)?(s=n).push.apply(s,Tn(i)):n.push(i)})||n},Tn=function(t,e,n){return de&&!e&&de.selector?de.selector(t):Ie(t)&&!n&&(S0||!rs())?w0.call((e||n3).querySelectorAll(t),0):We(t)?s4(t,n):Uc(t)?w0.call(t,0):t?[t]:[]},A0=function(t){return t=Tn(t)[0]||Go("Invalid scope")||{},function(e){var n=t.current||t.nativeElement||t;return Tn(e,n.querySelectorAll?n:n===t?Go("Invalid scope")||n3.createElement("div"):t)}},Ic=function(t){return t.sort(function(){return .5-Math.random()})},Oc=function(t){if(_e(t))return t;var e=Vn(t)?t:{each:t},n=$i(e.ease),i=e.from||0,s=parseFloat(e.base)||0,o={},a=i>0&&i<1,l=isNaN(i)||a,c=e.axis,u=i,h=i;return Ie(i)?u=h={center:.5,edges:.5,end:1}[i]||0:!a&&l&&(u=i[0],h=i[1]),function(f,d,g){var _=(g||e).length,m=o[_],p,M,v,x,S,T,E,A,y;if(!m){if(y=e.grid==="auto"?0:(e.grid||[1,En])[1],!y){for(E=-En;E<(E=g[y++].getBoundingClientRect().left)&&y<_;);y--}for(m=o[_]=[],p=l?Math.min(y,_)*u-.5:i%y,M=y===En?0:l?_*h/y-.5:i/y|0,E=0,A=En,T=0;T<_;T++)v=T%y-p,x=M-(T/y|0),m[T]=S=c?Math.abs(c==="y"?x:v):_c(v*v+x*x),S>E&&(E=S),S<A&&(A=S);i==="random"&&Ic(m),m.max=E-A,m.min=A,m.v=_=(parseFloat(e.amount)||parseFloat(e.each)*(y>_?_-1:c?c==="y"?_/y:y:Math.max(y,_/y))||0)*(i==="edges"?-1:1),m.b=_<0?s-_:s,m.u=He(e.amount||e.each)||0,n=n&&_<0?Xc(n):n}return _=(m[f]-m.min)/m.max||0,Fe(m.b+(n?n(_):_)*m.v)+m.u}},R0=function(t){var e=Math.pow(10,((t+"").split(".")[1]||"").length);return function(n){var i=Fe(Math.round(parseFloat(n)/t)*t*e);return(i-i%1)/e+(ai(n)?0:He(n))}},Nc=function(t,e){var n=We(t),i,s;return!n&&Vn(t)&&(i=n=t.radius||En,t.values?(t=Tn(t.values),(s=!ai(t[0]))&&(i*=i)):t=R0(t.increment)),Ci(e,n?_e(t)?function(o){return s=t(o),Math.abs(s-o)<=i?s:o}:function(o){for(var a=parseFloat(s?o.x:o),l=parseFloat(s?o.y:0),c=En,u=0,h=t.length,f,d;h--;)s?(f=t[h].x-a,d=t[h].y-l,f=f*f+d*d):f=Math.abs(t[h]-a),f<c&&(c=f,u=h);return u=!i||c<=i?t[u]:o,s||u===o||ai(o)?u:u+He(o)}:R0(t))},Fc=function(t,e,n,i){return Ci(We(t)?!e:n===!0?!!(n=0):!i,function(){return We(t)?t[~~(Math.random()*t.length)]:(n=n||1e-5)&&(i=n<1?Math.pow(10,(n+"").length-2):1)&&Math.floor(Math.round((t-n/2+Math.random()*(e-t+n*.99))/n)*n*i)/i})},o4=function(){for(var t=arguments.length,e=new Array(t),n=0;n<t;n++)e[n]=arguments[n];return function(i){return e.reduce(function(s,o){return o(s)},i)}},a4=function(t,e){return function(n){return t(parseFloat(n))+(e||He(n))}},l4=function(t,e,n){return Bc(t,e,0,1,n)},zc=function(t,e,n){return Ci(n,function(i){return t[~~e(i)]})},c4=function r(t,e,n){var i=e-t;return We(t)?zc(t,r(0,t.length),e):Ci(n,function(s){return(i+(s-t)%i)%i+t})},u4=function r(t,e,n){var i=e-t,s=i*2;return We(t)?zc(t,r(0,t.length-1),e):Ci(n,function(o){return o=(s+(o-t)%s)%s||0,t+(o>i?s-o:o)})},Ns=function(t){for(var e=0,n="",i,s,o,a;~(i=t.indexOf("random(",e));)o=t.indexOf(")",i),a=t.charAt(i+7)==="[",s=t.substr(i+7,o-i-7).match(a?yc:M0),n+=t.substr(e,i-e)+Fc(a?s:+s[0],a?0:+s[1],+s[2]||1e-5),e=o+1;return n+t.substr(e,t.length-e)},Bc=function(t,e,n,i,s){var o=e-t,a=i-n;return Ci(s,function(l){return n+((l-t)/o*a||0)})},h4=function r(t,e,n,i){var s=isNaN(t+e)?0:function(d){return(1-d)*t+d*e};if(!s){var o=Ie(t),a={},l,c,u,h,f;if(n===!0&&(i=1)&&(n=null),o)t={p:t},e={p:e};else if(We(t)&&!We(e)){for(u=[],h=t.length,f=h-2,c=1;c<h;c++)u.push(r(t[c-1],t[c]));h--,s=function(g){g*=h;var _=Math.min(f,~~g);return u[_](g-_)},n=e}else i||(t=ir(We(t)?[]:{},t));if(!u){for(l in e)a3.call(a,t,l,"get",e[l]);s=function(g){return h3(g,a)||(o?t.p:t)}}}return Ci(n,s)},cl=function(t,e,n){var i=t.labels,s=En,o,a,l;for(o in i)a=i[o]-e,a<0==!!n&&a&&s>(a=Math.abs(a))&&(l=o,s=a);return l},bn=function(t,e,n){var i=t.vars,s=i[e],o=de,a=t._ctx,l,c,u;if(s)return l=i[e+"Params"],c=i.callbackScope||t,n&&bi.length&&Ho(),a&&(de=a),u=l?s.apply(c,l):s.call(c),de=o,u},vs=function(t){return Ai(t),t.scrollTrigger&&t.scrollTrigger.kill(!!Ve),t.progress()<1&&bn(t,"onInterrupt"),t},zr,kc=[],Gc=function(t){if(e3()&&t){t=!t.name&&t.default||t;var e=t.name,n=_e(t),i=e&&!n&&t.init?function(){this._props=[]}:t,s={init:Os,render:h3,add:a3,kill:A4,modifier:w4,rawVars:0},o={targetTest:0,get:0,getSetter:u3,aliases:{},register:0};if(rs(),t!==i){if(hn[e])return;An(i,An(Vo(t,s),o)),ir(i.prototype,ir(s,Vo(t,o))),hn[i.prop=e]=i,t.targetTest&&(Io.push(i),r3[e]=1),e=(e==="css"?"CSS":e.charAt(0).toUpperCase()+e.substr(1))+"Plugin"}Ec(e,i),t.register&&t.register(sn,i,rn)}else t&&kc.push(t)},te=255,xs={aqua:[0,te,te],lime:[0,te,0],silver:[192,192,192],black:[0,0,0],maroon:[128,0,0],teal:[0,128,128],blue:[0,0,te],navy:[0,0,128],white:[te,te,te],olive:[128,128,0],yellow:[te,te,0],orange:[te,165,0],gray:[128,128,128],purple:[128,0,128],green:[0,128,0],red:[te,0,0],pink:[te,192,203],cyan:[0,te,te],transparent:[te,te,te,0]},Za=function(t,e,n){return t+=t<0?1:t>1?-1:0,(t*6<1?e+(n-e)*t*6:t<.5?n:t*3<2?e+(n-e)*(2/3-t)*6:e)*te+.5|0},Hc=function(t,e,n){var i=t?ai(t)?[t>>16,t>>8&te,t&te]:0:xs.black,s,o,a,l,c,u,h,f,d,g;if(!i){if(t.substr(-1)===","&&(t=t.substr(0,t.length-1)),xs[t])i=xs[t];else if(t.charAt(0)==="#"){if(t.length<6&&(s=t.charAt(1),o=t.charAt(2),a=t.charAt(3),t="#"+s+s+o+o+a+a+(t.length===5?t.charAt(4)+t.charAt(4):"")),t.length===9)return i=parseInt(t.substr(1,6),16),[i>>16,i>>8&te,i&te,parseInt(t.substr(7),16)/255];t=parseInt(t.substr(1),16),i=[t>>16,t>>8&te,t&te]}else if(t.substr(0,3)==="hsl"){if(i=g=t.match(M0),!e)l=+i[0]%360/360,c=+i[1]/100,u=+i[2]/100,o=u<=.5?u*(c+1):u+c-u*c,s=u*2-o,i.length>3&&(i[3]*=1),i[0]=Za(l+1/3,s,o),i[1]=Za(l,s,o),i[2]=Za(l-1/3,s,o);else if(~t.indexOf("="))return i=t.match(vc),n&&i.length<4&&(i[3]=1),i}else i=t.match(M0)||xs.transparent;i=i.map(Number)}return e&&!g&&(s=i[0]/te,o=i[1]/te,a=i[2]/te,h=Math.max(s,o,a),f=Math.min(s,o,a),u=(h+f)/2,h===f?l=c=0:(d=h-f,c=u>.5?d/(2-h-f):d/(h+f),l=h===s?(o-a)/d+(o<a?6:0):h===o?(a-s)/d+2:(s-o)/d+4,l*=60),i[0]=~~(l+.5),i[1]=~~(c*100+.5),i[2]=~~(u*100+.5)),n&&i.length<4&&(i[3]=1),i},Vc=function(t){var e=[],n=[],i=-1;return t.split(wi).forEach(function(s){var o=s.match(Fr)||[];e.push.apply(e,o),n.push(i+=o.length+1)}),e.c=n,e},ul=function(t,e,n){var i="",s=(t+i).match(wi),o=e?"hsla(":"rgba(",a=0,l,c,u,h;if(!s)return t;if(s=s.map(function(f){return(f=Hc(f,e,1))&&o+(e?f[0]+","+f[1]+"%,"+f[2]+"%,"+f[3]:f.join(","))+")"}),n&&(u=Vc(t),l=n.c,l.join(i)!==u.c.join(i)))for(c=t.replace(wi,"1").split(Fr),h=c.length-1;a<h;a++)i+=c[a]+(~l.indexOf(a)?s.shift()||o+"0,0,0,0)":(u.length?u:s.length?s:n).shift());if(!c)for(c=t.split(wi),h=c.length-1;a<h;a++)i+=c[a]+s[a];return i+c[h]},wi=function(){var r="(?:\\b(?:(?:rgb|rgba|hsl|hsla)\\(.+?\\))|\\B#(?:[0-9a-f]{3,4}){1,2}\\b",t;for(t in xs)r+="|"+t+"\\b";return new RegExp(r+")","gi")}(),f4=/hsl[a]?\(/,Wc=function(t){var e=t.join(" "),n;if(wi.lastIndex=0,wi.test(e))return n=f4.test(e),t[1]=ul(t[1],n),t[0]=ul(t[0],n,Vc(t[1])),!0},Fs,dn=function(){var r=Date.now,t=500,e=33,n=r(),i=n,s=1e3/240,o=s,a=[],l,c,u,h,f,d,g=function _(m){var p=r()-i,M=m===!0,v,x,S,T;if(p>t&&(n+=p-e),i+=p,S=i-n,v=S-o,(v>0||M)&&(T=++h.frame,f=S-h.time*1e3,h.time=S=S/1e3,o+=v+(v>=s?4:s-v),x=1),M||(l=c(_)),x)for(d=0;d<a.length;d++)a[d](S,f,T,m)};return h={time:0,frame:0,tick:function(){g(!0)},deltaRatio:function(m){return f/(1e3/(m||60))},wake:function(){Mc&&(!S0&&e3()&&(xn=S0=window,n3=xn.document||{},mn.gsap=sn,(xn.gsapVersions||(xn.gsapVersions=[])).push(sn.version),Sc(ko||xn.GreenSockGlobals||!xn.gsap&&xn||{}),u=xn.requestAnimationFrame,kc.forEach(Gc)),l&&h.sleep(),c=u||function(m){return setTimeout(m,o-h.time*1e3+1|0)},Fs=1,g(2))},sleep:function(){(u?xn.cancelAnimationFrame:clearTimeout)(l),Fs=0,c=Os},lagSmoothing:function(m,p){t=m||1/0,e=Math.min(p||33,t)},fps:function(m){s=1e3/(m||240),o=h.time*1e3+s},add:function(m,p,M){var v=p?function(x,S,T,E){m(x,S,T,E),h.remove(v)}:m;return h.remove(m),a[M?"unshift":"push"](v),rs(),v},remove:function(m,p){~(p=a.indexOf(m))&&a.splice(p,1)&&d>=p&&d--},_listeners:a},h}(),rs=function(){return!Fs&&dn.wake()},Xt={},d4=/^[\d.\-M][\d.\-,\s]/,p4=/["']/g,m4=function(t){for(var e={},n=t.substr(1,t.length-3).split(":"),i=n[0],s=1,o=n.length,a,l,c;s<o;s++)l=n[s],a=s!==o-1?l.lastIndexOf(","):l.length,c=l.substr(0,a),e[i]=isNaN(c)?c.replace(p4,"").trim():+c,i=l.substr(a+1).trim();return e},_4=function(t){var e=t.indexOf("(")+1,n=t.indexOf(")"),i=t.indexOf("(",e);return t.substring(e,~i&&i<n?t.indexOf(")",n+1):n)},g4=function(t){var e=(t+"").split("("),n=Xt[e[0]];return n&&e.length>1&&n.config?n.config.apply(null,~t.indexOf("{")?[m4(e[1])]:_4(t).split(",").map(Ac)):Xt._CE&&d4.test(t)?Xt._CE("",t):n},Xc=function(t){return function(e){return 1-t(1-e)}},qc=function r(t,e){for(var n=t._first,i;n;)n instanceof Je?r(n,e):n.vars.yoyoEase&&(!n._yoyo||!n._repeat)&&n._yoyo!==e&&(n.timeline?r(n.timeline,e):(i=n._ease,n._ease=n._yEase,n._yEase=i,n._yoyo=e)),n=n._next},$i=function(t,e){return t&&(_e(t)?t:Xt[t]||g4(t))||e},cr=function(t,e,n,i){n===void 0&&(n=function(l){return 1-e(1-l)}),i===void 0&&(i=function(l){return l<.5?e(l*2)/2:1-e((1-l)*2)/2});var s={easeIn:e,easeOut:n,easeInOut:i},o;return nn(t,function(a){Xt[a]=mn[a]=s,Xt[o=a.toLowerCase()]=n;for(var l in s)Xt[o+(l==="easeIn"?".in":l==="easeOut"?".out":".inOut")]=Xt[a+"."+l]=s[l]}),s},Yc=function(t){return function(e){return e<.5?(1-t(1-e*2))/2:.5+t((e-.5)*2)/2}},Ka=function r(t,e,n){var i=e>=1?e:1,s=(n||(t?.3:.45))/(e<1?e:1),o=s/y0*(Math.asin(1/i)||0),a=function(u){return u===1?1:i*Math.pow(2,-10*u)*Xp((u-o)*s)+1},l=t==="out"?a:t==="in"?function(c){return 1-a(1-c)}:Yc(a);return s=y0/s,l.config=function(c,u){return r(t,c,u)},l},$a=function r(t,e){e===void 0&&(e=1.70158);var n=function(o){return o?--o*o*((e+1)*o+e)+1:0},i=t==="out"?n:t==="in"?function(s){return 1-n(1-s)}:Yc(n);return i.config=function(s){return r(t,s)},i};nn("Linear,Quad,Cubic,Quart,Quint,Strong",function(r,t){var e=t<5?t+1:t;cr(r+",Power"+(e-1),t?function(n){return Math.pow(n,e)}:function(n){return n},function(n){return 1-Math.pow(1-n,e)},function(n){return n<.5?Math.pow(n*2,e)/2:1-Math.pow((1-n)*2,e)/2})});Xt.Linear.easeNone=Xt.none=Xt.Linear.easeIn;cr("Elastic",Ka("in"),Ka("out"),Ka());(function(r,t){var e=1/t,n=2*e,i=2.5*e,s=function(a){return a<e?r*a*a:a<n?r*Math.pow(a-1.5/t,2)+.75:a<i?r*(a-=2.25/t)*a+.9375:r*Math.pow(a-2.625/t,2)+.984375};cr("Bounce",function(o){return 1-s(1-o)},s)})(7.5625,2.75);cr("Expo",function(r){return r?Math.pow(2,10*(r-1)):0});cr("Circ",function(r){return-(_c(1-r*r)-1)});cr("Sine",function(r){return r===1?1:-Wp(r*Hp)+1});cr("Back",$a("in"),$a("out"),$a());Xt.SteppedEase=Xt.steps=mn.SteppedEase={config:function(t,e){t===void 0&&(t=1);var n=1/t,i=t+(e?0:1),s=e?1:0,o=1-ee;return function(a){return((i*Js(0,o,a)|0)+s)*n}}};es.ease=Xt["quad.out"];nn("onComplete,onUpdate,onStart,onRepeat,onReverseComplete,onInterrupt",function(r){return s3+=r+","+r+"Params,"});var jc=function(t,e){this.id=Vp++,t._gsap=this,this.target=t,this.harness=e,this.get=e?e.get:bc,this.set=e?e.getSetter:u3},zs=function(){function r(e){this.vars=e,this._delay=+e.delay||0,(this._repeat=e.repeat===1/0?-2:e.repeat||0)&&(this._rDelay=e.repeatDelay||0,this._yoyo=!!e.yoyo||!!e.yoyoEase),this._ts=1,is(this,+e.duration,1,1),this.data=e.data,de&&(this._ctx=de,de.data.push(this)),Fs||dn.wake()}var t=r.prototype;return t.delay=function(n){return n||n===0?(this.parent&&this.parent.smoothChildTiming&&this.startTime(this._start+n-this._delay),this._delay=n,this):this._delay},t.duration=function(n){return arguments.length?this.totalDuration(this._repeat>0?n+(n+this._rDelay)*this._repeat:n):this.totalDuration()&&this._dur},t.totalDuration=function(n){return arguments.length?(this._dirty=0,is(this,this._repeat<0?n:(n-this._repeat*this._rDelay)/(this._repeat+1))):this._tDur},t.totalTime=function(n,i){if(rs(),!arguments.length)return this._tTime;var s=this._dp;if(s&&s.smoothChildTiming&&this._ts){for(oa(this,n),!s._dp||s.parent||Pc(s,this);s&&s.parent;)s.parent._time!==s._start+(s._ts>=0?s._tTime/s._ts:(s.totalDuration()-s._tTime)/-s._ts)&&s.totalTime(s._tTime,!0),s=s.parent;!this.parent&&this._dp.autoRemoveChildren&&(this._ts>0&&n<this._tDur||this._ts<0&&n>0||!this._tDur&&!n)&&zn(this._dp,this,this._start-this._delay)}return(this._tTime!==n||!this._dur&&!i||this._initted&&Math.abs(this._zTime)===ee||!n&&!this._initted&&(this.add||this._ptLookup))&&(this._ts||(this._pTime=n),wc(this,n,i)),this},t.time=function(n,i){return arguments.length?this.totalTime(Math.min(this.totalDuration(),n+al(this))%(this._dur+this._rDelay)||(n?this._dur:0),i):this._time},t.totalProgress=function(n,i){return arguments.length?this.totalTime(this.totalDuration()*n,i):this.totalDuration()?Math.min(1,this._tTime/this._tDur):this.ratio},t.progress=function(n,i){return arguments.length?this.totalTime(this.duration()*(this._yoyo&&!(this.iteration()&1)?1-n:n)+al(this),i):this.duration()?Math.min(1,this._time/this._dur):this.ratio},t.iteration=function(n,i){var s=this.duration()+this._rDelay;return arguments.length?this.totalTime(this._time+(n-1)*s,i):this._repeat?ns(this._tTime,s)+1:1},t.timeScale=function(n){if(!arguments.length)return this._rts===-ee?0:this._rts;if(this._rts===n)return this;var i=this.parent&&this._ts?Wo(this.parent._time,this):this._tTime;return this._rts=+n||0,this._ts=this._ps||n===-ee?0:this._rts,this.totalTime(Js(-Math.abs(this._delay),this._tDur,i),!0),sa(this),Jp(this)},t.paused=function(n){return arguments.length?(this._ps!==n&&(this._ps=n,n?(this._pTime=this._tTime||Math.max(-this._delay,this.rawTime()),this._ts=this._act=0):(rs(),this._ts=this._rts,this.totalTime(this.parent&&!this.parent.smoothChildTiming?this.rawTime():this._tTime||this._pTime,this.progress()===1&&Math.abs(this._zTime)!==ee&&(this._tTime-=ee)))),this):this._ps},t.startTime=function(n){if(arguments.length){this._start=n;var i=this.parent||this._dp;return i&&(i._sort||!this.parent)&&zn(i,this,n-this._delay),this}return this._start},t.endTime=function(n){return this._start+(en(n)?this.totalDuration():this.duration())/Math.abs(this._ts||1)},t.rawTime=function(n){var i=this.parent||this._dp;return i?n&&(!this._ts||this._repeat&&this._time&&this.totalProgress()<1)?this._tTime%(this._dur+this._rDelay):this._ts?Wo(i.rawTime(n),this):this._tTime:this._tTime},t.revert=function(n){n===void 0&&(n=jp);var i=Ve;return Ve=n,(this._initted||this._startAt)&&(this.timeline&&this.timeline.revert(n),this.totalTime(-.01,n.suppressEvents)),this.data!=="nested"&&n.kill!==!1&&this.kill(),Ve=i,this},t.globalTime=function(n){for(var i=this,s=arguments.length?n:i.rawTime();i;)s=i._start+s/(i._ts||1),i=i._dp;return!this.parent&&this._sat?this._sat.vars.immediateRender?-1/0:this._sat.globalTime(n):s},t.repeat=function(n){return arguments.length?(this._repeat=n===1/0?-2:n,ll(this)):this._repeat===-2?1/0:this._repeat},t.repeatDelay=function(n){if(arguments.length){var i=this._time;return this._rDelay=n,ll(this),i?this.time(i):this}return this._rDelay},t.yoyo=function(n){return arguments.length?(this._yoyo=n,this):this._yoyo},t.seek=function(n,i){return this.totalTime(vn(this,n),en(i))},t.restart=function(n,i){return this.play().totalTime(n?-this._delay:0,en(i))},t.play=function(n,i){return n!=null&&this.seek(n,i),this.reversed(!1).paused(!1)},t.reverse=function(n,i){return n!=null&&this.seek(n||this.totalDuration(),i),this.reversed(!0).paused(!1)},t.pause=function(n,i){return n!=null&&this.seek(n,i),this.paused(!0)},t.resume=function(){return this.paused(!1)},t.reversed=function(n){return arguments.length?(!!n!==this.reversed()&&this.timeScale(-this._rts||(n?-ee:0)),this):this._rts<0},t.invalidate=function(){return this._initted=this._act=0,this._zTime=-ee,this},t.isActive=function(){var n=this.parent||this._dp,i=this._start,s;return!!(!n||this._ts&&this._initted&&n.isActive()&&(s=n.rawTime(!0))>=i&&s<this.endTime(!0)-ee)},t.eventCallback=function(n,i,s){var o=this.vars;return arguments.length>1?(i?(o[n]=i,s&&(o[n+"Params"]=s),n==="onUpdate"&&(this._onUpdate=i)):delete o[n],this):o[n]},t.then=function(n){var i=this;return new Promise(function(s){var o=_e(n)?n:Rc,a=function(){var c=i.then;i.then=null,_e(o)&&(o=o(i))&&(o.then||o===i)&&(i.then=c),s(o),i.then=c};i._initted&&i.totalProgress()===1&&i._ts>=0||!i._tTime&&i._ts<0?a():i._prom=a})},t.kill=function(){vs(this)},r}();An(zs.prototype,{_time:0,_start:0,_end:0,_tTime:0,_tDur:0,_dirty:0,_repeat:0,_yoyo:!1,parent:null,_initted:!1,_rDelay:0,_ts:1,_dp:0,ratio:0,_zTime:-ee,_prom:0,_ps:!1,_rts:1});var Je=function(r){mc(t,r);function t(n,i){var s;return n===void 0&&(n={}),s=r.call(this,n)||this,s.labels={},s.smoothChildTiming=!!n.smoothChildTiming,s.autoRemoveChildren=!!n.autoRemoveChildren,s._sort=en(n.sortChildren),ce&&zn(n.parent||ce,ni(s),i),n.reversed&&s.reverse(),n.paused&&s.paused(!0),n.scrollTrigger&&Lc(ni(s),n.scrollTrigger),s}var e=t.prototype;return e.to=function(i,s,o){return ws(0,arguments,this),this},e.from=function(i,s,o){return ws(1,arguments,this),this},e.fromTo=function(i,s,o,a){return ws(2,arguments,this),this},e.set=function(i,s,o){return s.duration=0,s.parent=this,bs(s).repeatDelay||(s.repeat=0),s.immediateRender=!!s.immediateRender,new be(i,s,vn(this,o),1),this},e.call=function(i,s,o){return zn(this,be.delayedCall(0,i,s),o)},e.staggerTo=function(i,s,o,a,l,c,u){return o.duration=s,o.stagger=o.stagger||a,o.onComplete=c,o.onCompleteParams=u,o.parent=this,new be(i,o,vn(this,l)),this},e.staggerFrom=function(i,s,o,a,l,c,u){return o.runBackwards=1,bs(o).immediateRender=en(o.immediateRender),this.staggerTo(i,s,o,a,l,c,u)},e.staggerFromTo=function(i,s,o,a,l,c,u,h){return a.startAt=o,bs(a).immediateRender=en(a.immediateRender),this.staggerTo(i,s,a,l,c,u,h)},e.render=function(i,s,o){var a=this._time,l=this._dirty?this.totalDuration():this._tDur,c=this._dur,u=i<=0?0:Fe(i),h=this._zTime<0!=i<0&&(this._initted||!c),f,d,g,_,m,p,M,v,x,S,T,E;if(this!==ce&&u>l&&i>=0&&(u=l),u!==this._tTime||o||h){if(a!==this._time&&c&&(u+=this._time-a,i+=this._time-a),f=u,x=this._start,v=this._ts,p=!v,h&&(c||(a=this._zTime),(i||!s)&&(this._zTime=i)),this._repeat){if(T=this._yoyo,m=c+this._rDelay,this._repeat<-1&&i<0)return this.totalTime(m*100+i,s,o);if(f=Fe(u%m),u===l?(_=this._repeat,f=c):(_=~~(u/m),_&&_===u/m&&(f=c,_--),f>c&&(f=c)),S=ns(this._tTime,m),!a&&this._tTime&&S!==_&&this._tTime-S*m-this._dur<=0&&(S=_),T&&_&1&&(f=c-f,E=1),_!==S&&!this._lock){var A=T&&S&1,y=A===(T&&_&1);if(_<S&&(A=!A),a=A?0:u%c?c:u,this._lock=1,this.render(a||(E?0:Fe(_*m)),s,!c)._lock=0,this._tTime=u,!s&&this.parent&&bn(this,"onRepeat"),this.vars.repeatRefresh&&!E&&(this.invalidate()._lock=1),a&&a!==this._time||p!==!this._ts||this.vars.onRepeat&&!this.parent&&!this._act)return this;if(c=this._dur,l=this._tDur,y&&(this._lock=2,a=A?c:-1e-4,this.render(a,!0),this.vars.repeatRefresh&&!E&&this.invalidate()),this._lock=0,!this._ts&&!p)return this;qc(this,E)}}if(this._hasPause&&!this._forcing&&this._lock<2&&(M=n4(this,Fe(a),Fe(f)),M&&(u-=f-(f=M._start))),this._tTime=u,this._time=f,this._act=!v,this._initted||(this._onUpdate=this.vars.onUpdate,this._initted=1,this._zTime=i,a=0),!a&&f&&!s&&!_&&(bn(this,"onStart"),this._tTime!==u))return this;if(f>=a&&i>=0)for(d=this._first;d;){if(g=d._next,(d._act||f>=d._start)&&d._ts&&M!==d){if(d.parent!==this)return this.render(i,s,o);if(d.render(d._ts>0?(f-d._start)*d._ts:(d._dirty?d.totalDuration():d._tDur)+(f-d._start)*d._ts,s,o),f!==this._time||!this._ts&&!p){M=0,g&&(u+=this._zTime=-ee);break}}d=g}else{d=this._last;for(var b=i<0?i:f;d;){if(g=d._prev,(d._act||b<=d._end)&&d._ts&&M!==d){if(d.parent!==this)return this.render(i,s,o);if(d.render(d._ts>0?(b-d._start)*d._ts:(d._dirty?d.totalDuration():d._tDur)+(b-d._start)*d._ts,s,o||Ve&&(d._initted||d._startAt)),f!==this._time||!this._ts&&!p){M=0,g&&(u+=this._zTime=b?-ee:ee);break}}d=g}}if(M&&!s&&(this.pause(),M.render(f>=a?0:-ee)._zTime=f>=a?1:-1,this._ts))return this._start=x,sa(this),this.render(i,s,o);this._onUpdate&&!s&&bn(this,"onUpdate",!0),(u===l&&this._tTime>=this.totalDuration()||!u&&a)&&(x===this._start||Math.abs(v)!==Math.abs(this._ts))&&(this._lock||((i||!c)&&(u===l&&this._ts>0||!u&&this._ts<0)&&Ai(this,1),!s&&!(i<0&&!a)&&(u||a||!l)&&(bn(this,u===l&&i>=0?"onComplete":"onReverseComplete",!0),this._prom&&!(u<l&&this.timeScale()>0)&&this._prom())))}return this},e.add=function(i,s){var o=this;if(ai(s)||(s=vn(this,s,i)),!(i instanceof zs)){if(We(i))return i.forEach(function(a){return o.add(a,s)}),this;if(Ie(i))return this.addLabel(i,s);if(_e(i))i=be.delayedCall(0,i);else return this}return this!==i?zn(this,i,s):this},e.getChildren=function(i,s,o,a){i===void 0&&(i=!0),s===void 0&&(s=!0),o===void 0&&(o=!0),a===void 0&&(a=-En);for(var l=[],c=this._first;c;)c._start>=a&&(c instanceof be?s&&l.push(c):(o&&l.push(c),i&&l.push.apply(l,c.getChildren(!0,s,o)))),c=c._next;return l},e.getById=function(i){for(var s=this.getChildren(1,1,1),o=s.length;o--;)if(s[o].vars.id===i)return s[o]},e.remove=function(i){return Ie(i)?this.removeLabel(i):_e(i)?this.killTweensOf(i):(ra(this,i),i===this._recent&&(this._recent=this._last),Ki(this))},e.totalTime=function(i,s){return arguments.length?(this._forcing=1,!this._dp&&this._ts&&(this._start=Fe(dn.time-(this._ts>0?i/this._ts:(this.totalDuration()-i)/-this._ts))),r.prototype.totalTime.call(this,i,s),this._forcing=0,this):this._tTime},e.addLabel=function(i,s){return this.labels[i]=vn(this,s),this},e.removeLabel=function(i){return delete this.labels[i],this},e.addPause=function(i,s,o){var a=be.delayedCall(0,s||Os,o);return a.data="isPause",this._hasPause=1,zn(this,a,vn(this,i))},e.removePause=function(i){var s=this._first;for(i=vn(this,i);s;)s._start===i&&s.data==="isPause"&&Ai(s),s=s._next},e.killTweensOf=function(i,s,o){for(var a=this.getTweensOf(i,o),l=a.length;l--;)xi!==a[l]&&a[l].kill(i,s);return this},e.getTweensOf=function(i,s){for(var o=[],a=Tn(i),l=this._first,c=ai(s),u;l;)l instanceof be?Zp(l._targets,a)&&(c?(!xi||l._initted&&l._ts)&&l.globalTime(0)<=s&&l.globalTime(l.totalDuration())>s:!s||l.isActive())&&o.push(l):(u=l.getTweensOf(a,s)).length&&o.push.apply(o,u),l=l._next;return o},e.tweenTo=function(i,s){s=s||{};var o=this,a=vn(o,i),l=s,c=l.startAt,u=l.onStart,h=l.onStartParams,f=l.immediateRender,d,g=be.to(o,An({ease:s.ease||"none",lazy:!1,immediateRender:!1,time:a,overwrite:"auto",duration:s.duration||Math.abs((a-(c&&"time"in c?c.time:o._time))/o.timeScale())||ee,onStart:function(){if(o.pause(),!d){var m=s.duration||Math.abs((a-(c&&"time"in c?c.time:o._time))/o.timeScale());g._dur!==m&&is(g,m,0,1).render(g._time,!0,!0),d=1}u&&u.apply(g,h||[])}},s));return f?g.render(0):g},e.tweenFromTo=function(i,s,o){return this.tweenTo(s,An({startAt:{time:vn(this,i)}},o))},e.recent=function(){return this._recent},e.nextLabel=function(i){return i===void 0&&(i=this._time),cl(this,vn(this,i))},e.previousLabel=function(i){return i===void 0&&(i=this._time),cl(this,vn(this,i),1)},e.currentLabel=function(i){return arguments.length?this.seek(i,!0):this.previousLabel(this._time+ee)},e.shiftChildren=function(i,s,o){o===void 0&&(o=0);for(var a=this._first,l=this.labels,c;a;)a._start>=o&&(a._start+=i,a._end+=i),a=a._next;if(s)for(c in l)l[c]>=o&&(l[c]+=i);return Ki(this)},e.invalidate=function(i){var s=this._first;for(this._lock=0;s;)s.invalidate(i),s=s._next;return r.prototype.invalidate.call(this,i)},e.clear=function(i){i===void 0&&(i=!0);for(var s=this._first,o;s;)o=s._next,this.remove(s),s=o;return this._dp&&(this._time=this._tTime=this._pTime=0),i&&(this.labels={}),Ki(this)},e.totalDuration=function(i){var s=0,o=this,a=o._last,l=En,c,u,h;if(arguments.length)return o.timeScale((o._repeat<0?o.duration():o.totalDuration())/(o.reversed()?-i:i));if(o._dirty){for(h=o.parent;a;)c=a._prev,a._dirty&&a.totalDuration(),u=a._start,u>l&&o._sort&&a._ts&&!o._lock?(o._lock=1,zn(o,a,u-a._delay,1)._lock=0):l=u,u<0&&a._ts&&(s-=u,(!h&&!o._dp||h&&h.smoothChildTiming)&&(o._start+=u/o._ts,o._time-=u,o._tTime-=u),o.shiftChildren(-u,!1,-1/0),l=0),a._end>s&&a._ts&&(s=a._end),a=c;is(o,o===ce&&o._time>s?o._time:s,1,1),o._dirty=0}return o._tDur},t.updateRoot=function(i){if(ce._ts&&(wc(ce,Wo(i,ce)),Tc=dn.frame),dn.frame>=sl){sl+=pn.autoSleep||120;var s=ce._first;if((!s||!s._ts)&&pn.autoSleep&&dn._listeners.length<2){for(;s&&!s._ts;)s=s._next;s||dn.sleep()}}},t}(zs);An(Je.prototype,{_lock:0,_hasPause:0,_forcing:0});var v4=function(t,e,n,i,s,o,a){var l=new rn(this._pt,t,e,0,1,t6,null,s),c=0,u=0,h,f,d,g,_,m,p,M;for(l.b=n,l.e=i,n+="",i+="",(p=~i.indexOf("random("))&&(i=Ns(i)),o&&(M=[n,i],o(M,t,e),n=M[0],i=M[1]),f=n.match(Ya)||[];h=Ya.exec(i);)g=h[0],_=i.substring(c,h.index),d?d=(d+1)%5:_.substr(-5)==="rgba("&&(d=1),g!==f[u++]&&(m=parseFloat(f[u-1])||0,l._pt={_next:l._pt,p:_||u===1?_:",",s:m,c:g.charAt(1)==="="?Vr(m,g)-m:parseFloat(g)-m,m:d&&d<4?Math.round:0},c=Ya.lastIndex);return l.c=c<i.length?i.substring(c,i.length):"",l.fp=a,(xc.test(i)||p)&&(l.e=0),this._pt=l,l},a3=function(t,e,n,i,s,o,a,l,c,u){_e(i)&&(i=i(s||0,t,o));var h=t[e],f=n!=="get"?n:_e(h)?c?t[e.indexOf("set")||!_e(t["get"+e.substr(3)])?e:"get"+e.substr(3)](c):t[e]():h,d=_e(h)?c?E4:Jc:c3,g;if(Ie(i)&&(~i.indexOf("random(")&&(i=Ns(i)),i.charAt(1)==="="&&(g=Vr(f,i)+(He(f)||0),(g||g===0)&&(i=g))),!u||f!==i||C0)return!isNaN(f*i)&&i!==""?(g=new rn(this._pt,t,e,+f||0,i-(f||0),typeof h=="boolean"?b4:Qc,0,d),c&&(g.fp=c),a&&g.modifier(a,this,t),this._pt=g):(!h&&!(e in t)&&i3(e,i),v4.call(this,t,e,f,i,d,l||pn.stringFilter,c))},x4=function(t,e,n,i,s){if(_e(t)&&(t=As(t,s,e,n,i)),!Vn(t)||t.style&&t.nodeType||We(t)||gc(t))return Ie(t)?As(t,s,e,n,i):t;var o={},a;for(a in t)o[a]=As(t[a],s,e,n,i);return o},Zc=function(t,e,n,i,s,o){var a,l,c,u;if(hn[t]&&(a=new hn[t]).init(s,a.rawVars?e[t]:x4(e[t],i,s,o,n),n,i,o)!==!1&&(n._pt=l=new rn(n._pt,s,t,0,1,a.render,a,0,a.priority),n!==zr))for(c=n._ptLookup[n._targets.indexOf(s)],u=a._props.length;u--;)c[a._props[u]]=l;return a},xi,C0,l3=function r(t,e,n){var i=t.vars,s=i.ease,o=i.startAt,a=i.immediateRender,l=i.lazy,c=i.onUpdate,u=i.onUpdateParams,h=i.callbackScope,f=i.runBackwards,d=i.yoyoEase,g=i.keyframes,_=i.autoRevert,m=t._dur,p=t._startAt,M=t._targets,v=t.parent,x=v&&v.data==="nested"?v.vars.targets:M,S=t._overwrite==="auto"&&!Q0,T=t.timeline,E,A,y,b,F,z,I,O,N,X,k,Y,Q;if(T&&(!g||!s)&&(s="none"),t._ease=$i(s,es.ease),t._yEase=d?Xc($i(d===!0?s:d,es.ease)):0,d&&t._yoyo&&!t._repeat&&(d=t._yEase,t._yEase=t._ease,t._ease=d),t._from=!T&&!!i.runBackwards,!T||g&&!i.stagger){if(O=M[0]?Zi(M[0]).harness:0,Y=O&&i[O.prop],E=Vo(i,r3),p&&(p._zTime<0&&p.progress(1),e<0&&f&&a&&!_?p.render(-1,!0):p.revert(f&&m?Uo:Yp),p._lazy=0),o){if(Ai(t._startAt=be.set(M,An({data:"isStart",overwrite:!1,parent:v,immediateRender:!0,lazy:!p&&en(l),startAt:null,delay:0,onUpdate:c,onUpdateParams:u,callbackScope:h,stagger:0},o))),t._startAt._dp=0,t._startAt._sat=t,e<0&&(Ve||!a&&!_)&&t._startAt.revert(Uo),a&&m&&e<=0&&n<=0){e&&(t._zTime=e);return}}else if(f&&m&&!p){if(e&&(a=!1),y=An({overwrite:!1,data:"isFromStart",lazy:a&&!p&&en(l),immediateRender:a,stagger:0,parent:v},E),Y&&(y[O.prop]=Y),Ai(t._startAt=be.set(M,y)),t._startAt._dp=0,t._startAt._sat=t,e<0&&(Ve?t._startAt.revert(Uo):t._startAt.render(-1,!0)),t._zTime=e,!a)r(t._startAt,ee,ee);else if(!e)return}for(t._pt=t._ptCache=0,l=m&&en(l)||l&&!m,A=0;A<M.length;A++){if(F=M[A],I=F._gsap||o3(M)[A]._gsap,t._ptLookup[A]=X={},E0[I.id]&&bi.length&&Ho(),k=x===M?A:x.indexOf(F),O&&(N=new O).init(F,Y||E,t,k,x)!==!1&&(t._pt=b=new rn(t._pt,F,N.name,0,1,N.render,N,0,N.priority),N._props.forEach(function($){X[$]=b}),N.priority&&(z=1)),!O||Y)for(y in E)hn[y]&&(N=Zc(y,E,t,k,F,x))?N.priority&&(z=1):X[y]=b=a3.call(t,F,y,"get",E[y],k,x,0,i.stringFilter);t._op&&t._op[A]&&t.kill(F,t._op[A]),S&&t._pt&&(xi=t,ce.killTweensOf(F,X,t.globalTime(e)),Q=!t.parent,xi=0),t._pt&&l&&(E0[I.id]=1)}z&&e6(t),t._onInit&&t._onInit(t)}t._onUpdate=c,t._initted=(!t._op||t._pt)&&!Q,g&&e<=0&&T.render(En,!0,!0)},y4=function(t,e,n,i,s,o,a){var l=(t._pt&&t._ptCache||(t._ptCache={}))[e],c,u,h,f;if(!l)for(l=t._ptCache[e]=[],h=t._ptLookup,f=t._targets.length;f--;){if(c=h[f][e],c&&c.d&&c.d._pt)for(c=c.d._pt;c&&c.p!==e&&c.fp!==e;)c=c._next;if(!c)return C0=1,t.vars[e]="+=0",l3(t,a),C0=0,1;l.push(c)}for(f=l.length;f--;)u=l[f],c=u._pt||u,c.s=(i||i===0)&&!s?i:c.s+(i||0)+o*c.c,c.c=n-c.s,u.e&&(u.e=Me(n)+He(u.e)),u.b&&(u.b=c.s+He(u.b))},M4=function(t,e){var n=t[0]?Zi(t[0]).harness:0,i=n&&n.aliases,s,o,a,l;if(!i)return e;s=ir({},e);for(o in i)if(o in s)for(l=i[o].split(","),a=l.length;a--;)s[l[a]]=s[o];return s},S4=function(t,e,n,i){var s=e.ease||i||"power1.inOut",o,a;if(We(e))a=n[t]||(n[t]=[]),e.forEach(function(l,c){return a.push({t:c/(e.length-1)*100,v:l,e:s})});else for(o in e)a=n[o]||(n[o]=[]),o==="ease"||a.push({t:parseFloat(t),v:e[o],e:s})},As=function(t,e,n,i,s){return _e(t)?t.call(e,n,i,s):Ie(t)&&~t.indexOf("random(")?Ns(t):t},Kc=s3+"repeat,repeatDelay,yoyo,repeatRefresh,yoyoEase,autoRevert",$c={};nn(Kc+",id,stagger,delay,duration,paused,scrollTrigger",function(r){return $c[r]=1});var be=function(r){mc(t,r);function t(n,i,s,o){var a;typeof i=="number"&&(s.duration=i,i=s,s=null),a=r.call(this,o?i:bs(i))||this;var l=a.vars,c=l.duration,u=l.delay,h=l.immediateRender,f=l.stagger,d=l.overwrite,g=l.keyframes,_=l.defaults,m=l.scrollTrigger,p=l.yoyoEase,M=i.parent||ce,v=(We(n)||gc(n)?ai(n[0]):"length"in i)?[n]:Tn(n),x,S,T,E,A,y,b,F;if(a._targets=v.length?o3(v):Go("GSAP target "+n+" not found. https://greensock.com",!pn.nullTargetWarn)||[],a._ptLookup=[],a._overwrite=d,g||f||Ro(c)||Ro(u)){if(i=a.vars,x=a.timeline=new Je({data:"nested",defaults:_||{},targets:M&&M.data==="nested"?M.vars.targets:v}),x.kill(),x.parent=x._dp=ni(a),x._start=0,f||Ro(c)||Ro(u)){if(E=v.length,b=f&&Oc(f),Vn(f))for(A in f)~Kc.indexOf(A)&&(F||(F={}),F[A]=f[A]);for(S=0;S<E;S++)T=Vo(i,$c),T.stagger=0,p&&(T.yoyoEase=p),F&&ir(T,F),y=v[S],T.duration=+As(c,ni(a),S,y,v),T.delay=(+As(u,ni(a),S,y,v)||0)-a._delay,!f&&E===1&&T.delay&&(a._delay=u=T.delay,a._start+=u,T.delay=0),x.to(y,T,b?b(S,y,v):0),x._ease=Xt.none;x.duration()?c=u=0:a.timeline=0}else if(g){bs(An(x.vars.defaults,{ease:"none"})),x._ease=$i(g.ease||i.ease||"none");var z=0,I,O,N;if(We(g))g.forEach(function(X){return x.to(v,X,">")}),x.duration();else{T={};for(A in g)A==="ease"||A==="easeEach"||S4(A,g[A],T,g.easeEach);for(A in T)for(I=T[A].sort(function(X,k){return X.t-k.t}),z=0,S=0;S<I.length;S++)O=I[S],N={ease:O.e,duration:(O.t-(S?I[S-1].t:0))/100*c},N[A]=O.v,x.to(v,N,z),z+=N.duration;x.duration()<c&&x.to({},{duration:c-x.duration()})}}c||a.duration(c=x.duration())}else a.timeline=0;return d===!0&&!Q0&&(xi=ni(a),ce.killTweensOf(v),xi=0),zn(M,ni(a),s),i.reversed&&a.reverse(),i.paused&&a.paused(!0),(h||!c&&!g&&a._start===Fe(M._time)&&en(h)&&Qp(ni(a))&&M.data!=="nested")&&(a._tTime=-ee,a.render(Math.max(0,-u)||0)),m&&Lc(ni(a),m),a}var e=t.prototype;return e.render=function(i,s,o){var a=this._time,l=this._tDur,c=this._dur,u=i<0,h=i>l-ee&&!u?l:i<ee?0:i,f,d,g,_,m,p,M,v,x;if(!c)e4(this,i,s,o);else if(h!==this._tTime||!i||o||!this._initted&&this._tTime||this._startAt&&this._zTime<0!==u){if(f=h,v=this.timeline,this._repeat){if(_=c+this._rDelay,this._repeat<-1&&u)return this.totalTime(_*100+i,s,o);if(f=Fe(h%_),h===l?(g=this._repeat,f=c):(g=~~(h/_),g&&g===h/_&&(f=c,g--),f>c&&(f=c)),p=this._yoyo&&g&1,p&&(x=this._yEase,f=c-f),m=ns(this._tTime,_),f===a&&!o&&this._initted)return this._tTime=h,this;g!==m&&(v&&this._yEase&&qc(v,p),this.vars.repeatRefresh&&!p&&!this._lock&&(this._lock=o=1,this.render(Fe(_*g),!0).invalidate()._lock=0))}if(!this._initted){if(Dc(this,u?i:f,o,s,h))return this._tTime=0,this;if(a!==this._time)return this;if(c!==this._dur)return this.render(i,s,o)}if(this._tTime=h,this._time=f,!this._act&&this._ts&&(this._act=1,this._lazy=0),this.ratio=M=(x||this._ease)(f/c),this._from&&(this.ratio=M=1-M),f&&!a&&!s&&!g&&(bn(this,"onStart"),this._tTime!==h))return this;for(d=this._pt;d;)d.r(M,d.d),d=d._next;v&&v.render(i<0?i:!f&&p?-ee:v._dur*v._ease(f/this._dur),s,o)||this._startAt&&(this._zTime=i),this._onUpdate&&!s&&(u&&T0(this,i,s,o),bn(this,"onUpdate")),this._repeat&&g!==m&&this.vars.onRepeat&&!s&&this.parent&&bn(this,"onRepeat"),(h===this._tDur||!h)&&this._tTime===h&&(u&&!this._onUpdate&&T0(this,i,!0,!0),(i||!c)&&(h===this._tDur&&this._ts>0||!h&&this._ts<0)&&Ai(this,1),!s&&!(u&&!a)&&(h||a||p)&&(bn(this,h===l?"onComplete":"onReverseComplete",!0),this._prom&&!(h<l&&this.timeScale()>0)&&this._prom()))}return this},e.targets=function(){return this._targets},e.invalidate=function(i){return(!i||!this.vars.runBackwards)&&(this._startAt=0),this._pt=this._op=this._onUpdate=this._lazy=this.ratio=0,this._ptLookup=[],this.timeline&&this.timeline.invalidate(i),r.prototype.invalidate.call(this,i)},e.resetTo=function(i,s,o,a){Fs||dn.wake(),this._ts||this.play();var l=Math.min(this._dur,(this._dp._time-this._start)*this._ts),c;return this._initted||l3(this,l),c=this._ease(l/this._dur),y4(this,i,s,o,a,c,l)?this.resetTo(i,s,o,a):(oa(this,0),this.parent||Cc(this._dp,this,"_first","_last",this._dp._sort?"_start":0),this.render(0))},e.kill=function(i,s){if(s===void 0&&(s="all"),!i&&(!s||s==="all"))return this._lazy=this._pt=0,this.parent?vs(this):this;if(this.timeline){var o=this.timeline.totalDuration();return this.timeline.killTweensOf(i,s,xi&&xi.vars.overwrite!==!0)._first||vs(this),this.parent&&o!==this.timeline.totalDuration()&&is(this,this._dur*this.timeline._tDur/o,0,1),this}var a=this._targets,l=i?Tn(i):a,c=this._ptLookup,u=this._pt,h,f,d,g,_,m,p;if((!s||s==="all")&&$p(a,l))return s==="all"&&(this._pt=0),vs(this);for(h=this._op=this._op||[],s!=="all"&&(Ie(s)&&(_={},nn(s,function(M){return _[M]=1}),s=_),s=M4(a,s)),p=a.length;p--;)if(~l.indexOf(a[p])){f=c[p],s==="all"?(h[p]=s,g=f,d={}):(d=h[p]=h[p]||{},g=s);for(_ in g)m=f&&f[_],m&&((!("kill"in m.d)||m.d.kill(_)===!0)&&ra(this,m,"_pt"),delete f[_]),d!=="all"&&(d[_]=1)}return this._initted&&!this._pt&&u&&vs(this),this},t.to=function(i,s){return new t(i,s,arguments[2])},t.from=function(i,s){return ws(1,arguments)},t.delayedCall=function(i,s,o,a){return new t(s,0,{immediateRender:!1,lazy:!1,overwrite:!1,delay:i,onComplete:s,onReverseComplete:s,onCompleteParams:o,onReverseCompleteParams:o,callbackScope:a})},t.fromTo=function(i,s,o){return ws(2,arguments)},t.set=function(i,s){return s.duration=0,s.repeatDelay||(s.repeat=0),new t(i,s)},t.killTweensOf=function(i,s,o){return ce.killTweensOf(i,s,o)},t}(zs);An(be.prototype,{_targets:[],_lazy:0,_startAt:0,_op:0,_onInit:0});nn("staggerTo,staggerFrom,staggerFromTo",function(r){be[r]=function(){var t=new Je,e=w0.call(arguments,0);return e.splice(r==="staggerFromTo"?5:4,0,0),t[r].apply(t,e)}});var c3=function(t,e,n){return t[e]=n},Jc=function(t,e,n){return t[e](n)},E4=function(t,e,n,i){return t[e](i.fp,n)},T4=function(t,e,n){return t.setAttribute(e,n)},u3=function(t,e){return _e(t[e])?Jc:t3(t[e])&&t.setAttribute?T4:c3},Qc=function(t,e){return e.set(e.t,e.p,Math.round((e.s+e.c*t)*1e6)/1e6,e)},b4=function(t,e){return e.set(e.t,e.p,!!(e.s+e.c*t),e)},t6=function(t,e){var n=e._pt,i="";if(!t&&e.b)i=e.b;else if(t===1&&e.e)i=e.e;else{for(;n;)i=n.p+(n.m?n.m(n.s+n.c*t):Math.round((n.s+n.c*t)*1e4)/1e4)+i,n=n._next;i+=e.c}e.set(e.t,e.p,i,e)},h3=function(t,e){for(var n=e._pt;n;)n.r(t,n.d),n=n._next},w4=function(t,e,n,i){for(var s=this._pt,o;s;)o=s._next,s.p===i&&s.modifier(t,e,n),s=o},A4=function(t){for(var e=this._pt,n,i;e;)i=e._next,e.p===t&&!e.op||e.op===t?ra(this,e,"_pt"):e.dep||(n=1),e=i;return!n},R4=function(t,e,n,i){i.mSet(t,e,i.m.call(i.tween,n,i.mt),i)},e6=function(t){for(var e=t._pt,n,i,s,o;e;){for(n=e._next,i=s;i&&i.pr>e.pr;)i=i._next;(e._prev=i?i._prev:o)?e._prev._next=e:s=e,(e._next=i)?i._prev=e:o=e,e=n}t._pt=s},rn=function(){function r(e,n,i,s,o,a,l,c,u){this.t=n,this.s=s,this.c=o,this.p=i,this.r=a||Qc,this.d=l||this,this.set=c||c3,this.pr=u||0,this._next=e,e&&(e._prev=this)}var t=r.prototype;return t.modifier=function(n,i,s){this.mSet=this.mSet||this.set,this.set=R4,this.m=n,this.mt=s,this.tween=i},r}();nn(s3+"parent,duration,ease,delay,overwrite,runBackwards,startAt,yoyo,immediateRender,repeat,repeatDelay,data,paused,reversed,lazy,callbackScope,stringFilter,id,yoyoEase,stagger,inherit,repeatRefresh,keyframes,autoRevert,scrollTrigger",function(r){return r3[r]=1});mn.TweenMax=mn.TweenLite=be;mn.TimelineLite=mn.TimelineMax=Je;ce=new Je({sortChildren:!1,defaults:es,autoRemoveChildren:!0,id:"root",smoothChildTiming:!0});pn.stringFilter=Wc;var Ji=[],Oo={},C4=[],hl=0,P4=0,Ja=function(t){return(Oo[t]||C4).map(function(e){return e()})},P0=function(){var t=Date.now(),e=[];t-hl>2&&(Ja("matchMediaInit"),Ji.forEach(function(n){var i=n.queries,s=n.conditions,o,a,l,c;for(a in i)o=xn.matchMedia(i[a]).matches,o&&(l=1),o!==s[a]&&(s[a]=o,c=1);c&&(n.revert(),l&&e.push(n))}),Ja("matchMediaRevert"),e.forEach(function(n){return n.onMatch(n)}),hl=t,Ja("matchMedia"))},n6=function(){function r(e,n){this.selector=n&&A0(n),this.data=[],this._r=[],this.isReverted=!1,this.id=P4++,e&&this.add(e)}var t=r.prototype;return t.add=function(n,i,s){_e(n)&&(s=i,i=n,n=_e);var o=this,a=function(){var c=de,u=o.selector,h;return c&&c!==o&&c.data.push(o),s&&(o.selector=A0(s)),de=o,h=i.apply(o,arguments),_e(h)&&o._r.push(h),de=c,o.selector=u,o.isReverted=!1,h};return o.last=a,n===_e?a(o):n?o[n]=a:a},t.ignore=function(n){var i=de;de=null,n(this),de=i},t.getTweens=function(){var n=[];return this.data.forEach(function(i){return i instanceof r?n.push.apply(n,i.getTweens()):i instanceof be&&!(i.parent&&i.parent.data==="nested")&&n.push(i)}),n},t.clear=function(){this._r.length=this.data.length=0},t.kill=function(n,i){var s=this;if(n){var o=this.getTweens();this.data.forEach(function(l){l.data==="isFlip"&&(l.revert(),l.getChildren(!0,!0,!1).forEach(function(c){return o.splice(o.indexOf(c),1)}))}),o.map(function(l){return{g:l.globalTime(0),t:l}}).sort(function(l,c){return c.g-l.g||-1/0}).forEach(function(l){return l.t.revert(n)}),this.data.forEach(function(l){return!(l instanceof be)&&l.revert&&l.revert(n)}),this._r.forEach(function(l){return l(n,s)}),this.isReverted=!0}else this.data.forEach(function(l){return l.kill&&l.kill()});if(this.clear(),i)for(var a=Ji.length;a--;)Ji[a].id===this.id&&Ji.splice(a,1)},t.revert=function(n){this.kill(n||{})},r}(),L4=function(){function r(e){this.contexts=[],this.scope=e}var t=r.prototype;return t.add=function(n,i,s){Vn(n)||(n={matches:n});var o=new n6(0,s||this.scope),a=o.conditions={},l,c,u;de&&!o.selector&&(o.selector=de.selector),this.contexts.push(o),i=o.add("onMatch",i),o.queries=n;for(c in n)c==="all"?u=1:(l=xn.matchMedia(n[c]),l&&(Ji.indexOf(o)<0&&Ji.push(o),(a[c]=l.matches)&&(u=1),l.addListener?l.addListener(P0):l.addEventListener("change",P0)));return u&&i(o),this},t.revert=function(n){this.kill(n||{})},t.kill=function(n){this.contexts.forEach(function(i){return i.kill(n,!0)})},r}(),Xo={registerPlugin:function(){for(var t=arguments.length,e=new Array(t),n=0;n<t;n++)e[n]=arguments[n];e.forEach(function(i){return Gc(i)})},timeline:function(t){return new Je(t)},getTweensOf:function(t,e){return ce.getTweensOf(t,e)},getProperty:function(t,e,n,i){Ie(t)&&(t=Tn(t)[0]);var s=Zi(t||{}).get,o=n?Rc:Ac;return n==="native"&&(n=""),t&&(e?o((hn[e]&&hn[e].get||s)(t,e,n,i)):function(a,l,c){return o((hn[a]&&hn[a].get||s)(t,a,l,c))})},quickSetter:function(t,e,n){if(t=Tn(t),t.length>1){var i=t.map(function(u){return sn.quickSetter(u,e,n)}),s=i.length;return function(u){for(var h=s;h--;)i[h](u)}}t=t[0]||{};var o=hn[e],a=Zi(t),l=a.harness&&(a.harness.aliases||{})[e]||e,c=o?function(u){var h=new o;zr._pt=0,h.init(t,n?u+n:u,zr,0,[t]),h.render(1,h),zr._pt&&h3(1,zr)}:a.set(t,l);return o?c:function(u){return c(t,l,n?u+n:u,a,1)}},quickTo:function(t,e,n){var i,s=sn.to(t,ir((i={},i[e]="+=0.1",i.paused=!0,i),n||{})),o=function(l,c,u){return s.resetTo(e,l,c,u)};return o.tween=s,o},isTweening:function(t){return ce.getTweensOf(t,!0).length>0},defaults:function(t){return t&&t.ease&&(t.ease=$i(t.ease,es.ease)),ol(es,t||{})},config:function(t){return ol(pn,t||{})},registerEffect:function(t){var e=t.name,n=t.effect,i=t.plugins,s=t.defaults,o=t.extendTimeline;(i||"").split(",").forEach(function(a){return a&&!hn[a]&&!mn[a]&&Go(e+" effect requires "+a+" plugin.")}),ja[e]=function(a,l,c){return n(Tn(a),An(l||{},s),c)},o&&(Je.prototype[e]=function(a,l,c){return this.add(ja[e](a,Vn(l)?l:(c=l)&&{},this),c)})},registerEase:function(t,e){Xt[t]=$i(e)},parseEase:function(t,e){return arguments.length?$i(t,e):Xt},getById:function(t){return ce.getById(t)},exportRoot:function(t,e){t===void 0&&(t={});var n=new Je(t),i,s;for(n.smoothChildTiming=en(t.smoothChildTiming),ce.remove(n),n._dp=0,n._time=n._tTime=ce._time,i=ce._first;i;)s=i._next,(e||!(!i._dur&&i instanceof be&&i.vars.onComplete===i._targets[0]))&&zn(n,i,i._start-i._delay),i=s;return zn(ce,n,0),n},context:function(t,e){return t?new n6(t,e):de},matchMedia:function(t){return new L4(t)},matchMediaRefresh:function(){return Ji.forEach(function(t){var e=t.conditions,n,i;for(i in e)e[i]&&(e[i]=!1,n=1);n&&t.revert()})||P0()},addEventListener:function(t,e){var n=Oo[t]||(Oo[t]=[]);~n.indexOf(e)||n.push(e)},removeEventListener:function(t,e){var n=Oo[t],i=n&&n.indexOf(e);i>=0&&n.splice(i,1)},utils:{wrap:c4,wrapYoyo:u4,distribute:Oc,random:Fc,snap:Nc,normalize:l4,getUnit:He,clamp:r4,splitColor:Hc,toArray:Tn,selector:A0,mapRange:Bc,pipe:o4,unitize:a4,interpolate:h4,shuffle:Ic},install:Sc,effects:ja,ticker:dn,updateRoot:Je.updateRoot,plugins:hn,globalTimeline:ce,core:{PropTween:rn,globals:Ec,Tween:be,Timeline:Je,Animation:zs,getCache:Zi,_removeLinkedListItem:ra,reverting:function(){return Ve},context:function(t){return t&&de&&(de.data.push(t),t._ctx=de),de},suppressOverwrites:function(t){return Q0=t}}};nn("to,from,fromTo,delayedCall,set,killTweensOf",function(r){return Xo[r]=be[r]});dn.add(Je.updateRoot);zr=Xo.to({},{duration:0});var D4=function(t,e){for(var n=t._pt;n&&n.p!==e&&n.op!==e&&n.fp!==e;)n=n._next;return n},U4=function(t,e){var n=t._targets,i,s,o;for(i in e)for(s=n.length;s--;)o=t._ptLookup[s][i],o&&(o=o.d)&&(o._pt&&(o=D4(o,i)),o&&o.modifier&&o.modifier(e[i],t,n[s],i))},Qa=function(t,e){return{name:t,rawVars:1,init:function(i,s,o){o._onInit=function(a){var l,c;if(Ie(s)&&(l={},nn(s,function(u){return l[u]=1}),s=l),e){l={};for(c in s)l[c]=e(s[c]);s=l}U4(a,s)}}}},sn=Xo.registerPlugin({name:"attr",init:function(t,e,n,i,s){var o,a,l;this.tween=n;for(o in e)l=t.getAttribute(o)||"",a=this.add(t,"setAttribute",(l||0)+"",e[o],i,s,0,0,o),a.op=o,a.b=l,this._props.push(o)},render:function(t,e){for(var n=e._pt;n;)Ve?n.set(n.t,n.p,n.b,n):n.r(t,n.d),n=n._next}},{name:"endArray",init:function(t,e){for(var n=e.length;n--;)this.add(t,n,t[n]||0,e[n],0,0,0,0,0,1)}},Qa("roundProps",R0),Qa("modifiers"),Qa("snap",Nc))||Xo;be.version=Je.version=sn.version="3.12.2";Mc=1;e3()&&rs();Xt.Power0;Xt.Power1;Xt.Power2;Xt.Power3;Xt.Power4;Xt.Linear;Xt.Quad;Xt.Cubic;Xt.Quart;Xt.Quint;Xt.Strong;Xt.Elastic;Xt.Back;Xt.SteppedEase;Xt.Bounce;Xt.Sine;Xt.Expo;Xt.Circ;/*!
 * CSSPlugin 3.12.2
 * https://greensock.com
 *
 * Copyright 2008-2023, GreenSock. All rights reserved.
 * Subject to the terms at https://greensock.com/standard-license or for
 * Club GreenSock members, the agreement issued with that membership.
 * @author: Jack Doyle, jack@greensock.com
*/var fl,yi,Wr,f3,Gi,dl,d3,I4=function(){return typeof window<"u"},li={},Bi=180/Math.PI,Xr=Math.PI/180,Rr=Math.atan2,pl=1e8,p3=/([A-Z])/g,O4=/(left|right|width|margin|padding|x)/i,N4=/[\s,\(]\S/,Bn={autoAlpha:"opacity,visibility",scale:"scaleX,scaleY",alpha:"opacity"},L0=function(t,e){return e.set(e.t,e.p,Math.round((e.s+e.c*t)*1e4)/1e4+e.u,e)},F4=function(t,e){return e.set(e.t,e.p,t===1?e.e:Math.round((e.s+e.c*t)*1e4)/1e4+e.u,e)},z4=function(t,e){return e.set(e.t,e.p,t?Math.round((e.s+e.c*t)*1e4)/1e4+e.u:e.b,e)},B4=function(t,e){var n=e.s+e.c*t;e.set(e.t,e.p,~~(n+(n<0?-.5:.5))+e.u,e)},i6=function(t,e){return e.set(e.t,e.p,t?e.e:e.b,e)},r6=function(t,e){return e.set(e.t,e.p,t!==1?e.b:e.e,e)},k4=function(t,e,n){return t.style[e]=n},G4=function(t,e,n){return t.style.setProperty(e,n)},H4=function(t,e,n){return t._gsap[e]=n},V4=function(t,e,n){return t._gsap.scaleX=t._gsap.scaleY=n},W4=function(t,e,n,i,s){var o=t._gsap;o.scaleX=o.scaleY=n,o.renderTransform(s,o)},X4=function(t,e,n,i,s){var o=t._gsap;o[e]=n,o.renderTransform(s,o)},he="transform",On=he+"Origin",q4=function r(t,e){var n=this,i=this.target,s=i.style;if(t in li&&s){if(this.tfm=this.tfm||{},t!=="transform")t=Bn[t]||t,~t.indexOf(",")?t.split(",").forEach(function(o){return n.tfm[o]=ri(i,o)}):this.tfm[t]=i._gsap.x?i._gsap[t]:ri(i,t);else return Bn.transform.split(",").forEach(function(o){return r.call(n,o,e)});if(this.props.indexOf(he)>=0)return;i._gsap.svg&&(this.svgo=i.getAttribute("data-svg-origin"),this.props.push(On,e,"")),t=he}(s||e)&&this.props.push(t,e,s[t])},s6=function(t){t.translate&&(t.removeProperty("translate"),t.removeProperty("scale"),t.removeProperty("rotate"))},Y4=function(){var t=this.props,e=this.target,n=e.style,i=e._gsap,s,o;for(s=0;s<t.length;s+=3)t[s+1]?e[t[s]]=t[s+2]:t[s+2]?n[t[s]]=t[s+2]:n.removeProperty(t[s].substr(0,2)==="--"?t[s]:t[s].replace(p3,"-$1").toLowerCase());if(this.tfm){for(o in this.tfm)i[o]=this.tfm[o];i.svg&&(i.renderTransform(),e.setAttribute("data-svg-origin",this.svgo||"")),s=d3(),(!s||!s.isStart)&&!n[he]&&(s6(n),i.uncache=1)}},o6=function(t,e){var n={target:t,props:[],revert:Y4,save:q4};return t._gsap||sn.core.getCache(t),e&&e.split(",").forEach(function(i){return n.save(i)}),n},a6,D0=function(t,e){var n=yi.createElementNS?yi.createElementNS((e||"http://www.w3.org/1999/xhtml").replace(/^https/,"http"),t):yi.createElement(t);return n.style?n:yi.createElement(t)},Gn=function r(t,e,n){var i=getComputedStyle(t);return i[e]||i.getPropertyValue(e.replace(p3,"-$1").toLowerCase())||i.getPropertyValue(e)||!n&&r(t,ss(e)||e,1)||""},ml="O,Moz,ms,Ms,Webkit".split(","),ss=function(t,e,n){var i=e||Gi,s=i.style,o=5;if(t in s&&!n)return t;for(t=t.charAt(0).toUpperCase()+t.substr(1);o--&&!(ml[o]+t in s););return o<0?null:(o===3?"ms":o>=0?ml[o]:"")+t},U0=function(){I4()&&window.document&&(fl=window,yi=fl.document,Wr=yi.documentElement,Gi=D0("div")||{style:{}},D0("div"),he=ss(he),On=he+"Origin",Gi.style.cssText="border-width:0;line-height:0;position:absolute;padding:0",a6=!!ss("perspective"),d3=sn.core.reverting,f3=1)},t0=function r(t){var e=D0("svg",this.ownerSVGElement&&this.ownerSVGElement.getAttribute("xmlns")||"http://www.w3.org/2000/svg"),n=this.parentNode,i=this.nextSibling,s=this.style.cssText,o;if(Wr.appendChild(e),e.appendChild(this),this.style.display="block",t)try{o=this.getBBox(),this._gsapBBox=this.getBBox,this.getBBox=r}catch{}else this._gsapBBox&&(o=this._gsapBBox());return n&&(i?n.insertBefore(this,i):n.appendChild(this)),Wr.removeChild(e),this.style.cssText=s,o},_l=function(t,e){for(var n=e.length;n--;)if(t.hasAttribute(e[n]))return t.getAttribute(e[n])},l6=function(t){var e;try{e=t.getBBox()}catch{e=t0.call(t,!0)}return e&&(e.width||e.height)||t.getBBox===t0||(e=t0.call(t,!0)),e&&!e.width&&!e.x&&!e.y?{x:+_l(t,["x","cx","x1"])||0,y:+_l(t,["y","cy","y1"])||0,width:0,height:0}:e},c6=function(t){return!!(t.getCTM&&(!t.parentNode||t.ownerSVGElement)&&l6(t))},Bs=function(t,e){if(e){var n=t.style;e in li&&e!==On&&(e=he),n.removeProperty?((e.substr(0,2)==="ms"||e.substr(0,6)==="webkit")&&(e="-"+e),n.removeProperty(e.replace(p3,"-$1").toLowerCase())):n.removeAttribute(e)}},Mi=function(t,e,n,i,s,o){var a=new rn(t._pt,e,n,0,1,o?r6:i6);return t._pt=a,a.b=i,a.e=s,t._props.push(n),a},gl={deg:1,rad:1,turn:1},j4={grid:1,flex:1},Ri=function r(t,e,n,i){var s=parseFloat(n)||0,o=(n+"").trim().substr((s+"").length)||"px",a=Gi.style,l=O4.test(e),c=t.tagName.toLowerCase()==="svg",u=(c?"client":"offset")+(l?"Width":"Height"),h=100,f=i==="px",d=i==="%",g,_,m,p;return i===o||!s||gl[i]||gl[o]?s:(o!=="px"&&!f&&(s=r(t,e,n,"px")),p=t.getCTM&&c6(t),(d||o==="%")&&(li[e]||~e.indexOf("adius"))?(g=p?t.getBBox()[l?"width":"height"]:t[u],Me(d?s/g*h:s/100*g)):(a[l?"width":"height"]=h+(f?o:i),_=~e.indexOf("adius")||i==="em"&&t.appendChild&&!c?t:t.parentNode,p&&(_=(t.ownerSVGElement||{}).parentNode),(!_||_===yi||!_.appendChild)&&(_=yi.body),m=_._gsap,m&&d&&m.width&&l&&m.time===dn.time&&!m.uncache?Me(s/m.width*h):((d||o==="%")&&!j4[Gn(_,"display")]&&(a.position=Gn(t,"position")),_===t&&(a.position="static"),_.appendChild(Gi),g=Gi[u],_.removeChild(Gi),a.position="absolute",l&&d&&(m=Zi(_),m.time=dn.time,m.width=_[u]),Me(f?g*s/h:g&&s?h/g*s:0))))},ri=function(t,e,n,i){var s;return f3||U0(),e in Bn&&e!=="transform"&&(e=Bn[e],~e.indexOf(",")&&(e=e.split(",")[0])),li[e]&&e!=="transform"?(s=Gs(t,i),s=e!=="transformOrigin"?s[e]:s.svg?s.origin:Yo(Gn(t,On))+" "+s.zOrigin+"px"):(s=t.style[e],(!s||s==="auto"||i||~(s+"").indexOf("calc("))&&(s=qo[e]&&qo[e](t,e,n)||Gn(t,e)||bc(t,e)||(e==="opacity"?1:0))),n&&!~(s+"").trim().indexOf(" ")?Ri(t,e,s,n)+n:s},Z4=function(t,e,n,i){if(!n||n==="none"){var s=ss(e,t,1),o=s&&Gn(t,s,1);o&&o!==n?(e=s,n=o):e==="borderColor"&&(n=Gn(t,"borderTopColor"))}var a=new rn(this._pt,t.style,e,0,1,t6),l=0,c=0,u,h,f,d,g,_,m,p,M,v,x,S;if(a.b=n,a.e=i,n+="",i+="",i==="auto"&&(t.style[e]=i,i=Gn(t,e)||i,t.style[e]=n),u=[n,i],Wc(u),n=u[0],i=u[1],f=n.match(Fr)||[],S=i.match(Fr)||[],S.length){for(;h=Fr.exec(i);)m=h[0],M=i.substring(l,h.index),g?g=(g+1)%5:(M.substr(-5)==="rgba("||M.substr(-5)==="hsla(")&&(g=1),m!==(_=f[c++]||"")&&(d=parseFloat(_)||0,x=_.substr((d+"").length),m.charAt(1)==="="&&(m=Vr(d,m)+x),p=parseFloat(m),v=m.substr((p+"").length),l=Fr.lastIndex-v.length,v||(v=v||pn.units[e]||x,l===i.length&&(i+=v,a.e+=v)),x!==v&&(d=Ri(t,e,_,v)||0),a._pt={_next:a._pt,p:M||c===1?M:",",s:d,c:p-d,m:g&&g<4||e==="zIndex"?Math.round:0});a.c=l<i.length?i.substring(l,i.length):""}else a.r=e==="display"&&i==="none"?r6:i6;return xc.test(i)&&(a.e=0),this._pt=a,a},vl={top:"0%",bottom:"100%",left:"0%",right:"100%",center:"50%"},K4=function(t){var e=t.split(" "),n=e[0],i=e[1]||"50%";return(n==="top"||n==="bottom"||i==="left"||i==="right")&&(t=n,n=i,i=t),e[0]=vl[n]||n,e[1]=vl[i]||i,e.join(" ")},$4=function(t,e){if(e.tween&&e.tween._time===e.tween._dur){var n=e.t,i=n.style,s=e.u,o=n._gsap,a,l,c;if(s==="all"||s===!0)i.cssText="",l=1;else for(s=s.split(","),c=s.length;--c>-1;)a=s[c],li[a]&&(l=1,a=a==="transformOrigin"?On:he),Bs(n,a);l&&(Bs(n,he),o&&(o.svg&&n.removeAttribute("transform"),Gs(n,1),o.uncache=1,s6(i)))}},qo={clearProps:function(t,e,n,i,s){if(s.data!=="isFromStart"){var o=t._pt=new rn(t._pt,e,n,0,0,$4);return o.u=i,o.pr=-10,o.tween=s,t._props.push(n),1}}},ks=[1,0,0,1,0,0],u6={},h6=function(t){return t==="matrix(1, 0, 0, 1, 0, 0)"||t==="none"||!t},xl=function(t){var e=Gn(t,he);return h6(e)?ks:e.substr(7).match(vc).map(Me)},m3=function(t,e){var n=t._gsap||Zi(t),i=t.style,s=xl(t),o,a,l,c;return n.svg&&t.getAttribute("transform")?(l=t.transform.baseVal.consolidate().matrix,s=[l.a,l.b,l.c,l.d,l.e,l.f],s.join(",")==="1,0,0,1,0,0"?ks:s):(s===ks&&!t.offsetParent&&t!==Wr&&!n.svg&&(l=i.display,i.display="block",o=t.parentNode,(!o||!t.offsetParent)&&(c=1,a=t.nextElementSibling,Wr.appendChild(t)),s=xl(t),l?i.display=l:Bs(t,"display"),c&&(a?o.insertBefore(t,a):o?o.appendChild(t):Wr.removeChild(t))),e&&s.length>6?[s[0],s[1],s[4],s[5],s[12],s[13]]:s)},I0=function(t,e,n,i,s,o){var a=t._gsap,l=s||m3(t,!0),c=a.xOrigin||0,u=a.yOrigin||0,h=a.xOffset||0,f=a.yOffset||0,d=l[0],g=l[1],_=l[2],m=l[3],p=l[4],M=l[5],v=e.split(" "),x=parseFloat(v[0])||0,S=parseFloat(v[1])||0,T,E,A,y;n?l!==ks&&(E=d*m-g*_)&&(A=x*(m/E)+S*(-_/E)+(_*M-m*p)/E,y=x*(-g/E)+S*(d/E)-(d*M-g*p)/E,x=A,S=y):(T=l6(t),x=T.x+(~v[0].indexOf("%")?x/100*T.width:x),S=T.y+(~(v[1]||v[0]).indexOf("%")?S/100*T.height:S)),i||i!==!1&&a.smooth?(p=x-c,M=S-u,a.xOffset=h+(p*d+M*_)-p,a.yOffset=f+(p*g+M*m)-M):a.xOffset=a.yOffset=0,a.xOrigin=x,a.yOrigin=S,a.smooth=!!i,a.origin=e,a.originIsAbsolute=!!n,t.style[On]="0px 0px",o&&(Mi(o,a,"xOrigin",c,x),Mi(o,a,"yOrigin",u,S),Mi(o,a,"xOffset",h,a.xOffset),Mi(o,a,"yOffset",f,a.yOffset)),t.setAttribute("data-svg-origin",x+" "+S)},Gs=function(t,e){var n=t._gsap||new jc(t);if("x"in n&&!e&&!n.uncache)return n;var i=t.style,s=n.scaleX<0,o="px",a="deg",l=getComputedStyle(t),c=Gn(t,On)||"0",u,h,f,d,g,_,m,p,M,v,x,S,T,E,A,y,b,F,z,I,O,N,X,k,Y,Q,$,B,V,ht,ct,_t;return u=h=f=_=m=p=M=v=x=0,d=g=1,n.svg=!!(t.getCTM&&c6(t)),l.translate&&((l.translate!=="none"||l.scale!=="none"||l.rotate!=="none")&&(i[he]=(l.translate!=="none"?"translate3d("+(l.translate+" 0 0").split(" ").slice(0,3).join(", ")+") ":"")+(l.rotate!=="none"?"rotate("+l.rotate+") ":"")+(l.scale!=="none"?"scale("+l.scale.split(" ").join(",")+") ":"")+(l[he]!=="none"?l[he]:"")),i.scale=i.rotate=i.translate="none"),E=m3(t,n.svg),n.svg&&(n.uncache?(Y=t.getBBox(),c=n.xOrigin-Y.x+"px "+(n.yOrigin-Y.y)+"px",k=""):k=!e&&t.getAttribute("data-svg-origin"),I0(t,k||c,!!k||n.originIsAbsolute,n.smooth!==!1,E)),S=n.xOrigin||0,T=n.yOrigin||0,E!==ks&&(F=E[0],z=E[1],I=E[2],O=E[3],u=N=E[4],h=X=E[5],E.length===6?(d=Math.sqrt(F*F+z*z),g=Math.sqrt(O*O+I*I),_=F||z?Rr(z,F)*Bi:0,M=I||O?Rr(I,O)*Bi+_:0,M&&(g*=Math.abs(Math.cos(M*Xr))),n.svg&&(u-=S-(S*F+T*I),h-=T-(S*z+T*O))):(_t=E[6],ht=E[7],$=E[8],B=E[9],V=E[10],ct=E[11],u=E[12],h=E[13],f=E[14],A=Rr(_t,V),m=A*Bi,A&&(y=Math.cos(-A),b=Math.sin(-A),k=N*y+$*b,Y=X*y+B*b,Q=_t*y+V*b,$=N*-b+$*y,B=X*-b+B*y,V=_t*-b+V*y,ct=ht*-b+ct*y,N=k,X=Y,_t=Q),A=Rr(-I,V),p=A*Bi,A&&(y=Math.cos(-A),b=Math.sin(-A),k=F*y-$*b,Y=z*y-B*b,Q=I*y-V*b,ct=O*b+ct*y,F=k,z=Y,I=Q),A=Rr(z,F),_=A*Bi,A&&(y=Math.cos(A),b=Math.sin(A),k=F*y+z*b,Y=N*y+X*b,z=z*y-F*b,X=X*y-N*b,F=k,N=Y),m&&Math.abs(m)+Math.abs(_)>359.9&&(m=_=0,p=180-p),d=Me(Math.sqrt(F*F+z*z+I*I)),g=Me(Math.sqrt(X*X+_t*_t)),A=Rr(N,X),M=Math.abs(A)>2e-4?A*Bi:0,x=ct?1/(ct<0?-ct:ct):0),n.svg&&(k=t.getAttribute("transform"),n.forceCSS=t.setAttribute("transform","")||!h6(Gn(t,he)),k&&t.setAttribute("transform",k))),Math.abs(M)>90&&Math.abs(M)<270&&(s?(d*=-1,M+=_<=0?180:-180,_+=_<=0?180:-180):(g*=-1,M+=M<=0?180:-180)),e=e||n.uncache,n.x=u-((n.xPercent=u&&(!e&&n.xPercent||(Math.round(t.offsetWidth/2)===Math.round(-u)?-50:0)))?t.offsetWidth*n.xPercent/100:0)+o,n.y=h-((n.yPercent=h&&(!e&&n.yPercent||(Math.round(t.offsetHeight/2)===Math.round(-h)?-50:0)))?t.offsetHeight*n.yPercent/100:0)+o,n.z=f+o,n.scaleX=Me(d),n.scaleY=Me(g),n.rotation=Me(_)+a,n.rotationX=Me(m)+a,n.rotationY=Me(p)+a,n.skewX=M+a,n.skewY=v+a,n.transformPerspective=x+o,(n.zOrigin=parseFloat(c.split(" ")[2])||0)&&(i[On]=Yo(c)),n.xOffset=n.yOffset=0,n.force3D=pn.force3D,n.renderTransform=n.svg?Q4:a6?f6:J4,n.uncache=0,n},Yo=function(t){return(t=t.split(" "))[0]+" "+t[1]},e0=function(t,e,n){var i=He(e);return Me(parseFloat(e)+parseFloat(Ri(t,"x",n+"px",i)))+i},J4=function(t,e){e.z="0px",e.rotationY=e.rotationX="0deg",e.force3D=0,f6(t,e)},Ni="0deg",ds="0px",Fi=") ",f6=function(t,e){var n=e||this,i=n.xPercent,s=n.yPercent,o=n.x,a=n.y,l=n.z,c=n.rotation,u=n.rotationY,h=n.rotationX,f=n.skewX,d=n.skewY,g=n.scaleX,_=n.scaleY,m=n.transformPerspective,p=n.force3D,M=n.target,v=n.zOrigin,x="",S=p==="auto"&&t&&t!==1||p===!0;if(v&&(h!==Ni||u!==Ni)){var T=parseFloat(u)*Xr,E=Math.sin(T),A=Math.cos(T),y;T=parseFloat(h)*Xr,y=Math.cos(T),o=e0(M,o,E*y*-v),a=e0(M,a,-Math.sin(T)*-v),l=e0(M,l,A*y*-v+v)}m!==ds&&(x+="perspective("+m+Fi),(i||s)&&(x+="translate("+i+"%, "+s+"%) "),(S||o!==ds||a!==ds||l!==ds)&&(x+=l!==ds||S?"translate3d("+o+", "+a+", "+l+") ":"translate("+o+", "+a+Fi),c!==Ni&&(x+="rotate("+c+Fi),u!==Ni&&(x+="rotateY("+u+Fi),h!==Ni&&(x+="rotateX("+h+Fi),(f!==Ni||d!==Ni)&&(x+="skew("+f+", "+d+Fi),(g!==1||_!==1)&&(x+="scale("+g+", "+_+Fi),M.style[he]=x||"translate(0, 0)"},Q4=function(t,e){var n=e||this,i=n.xPercent,s=n.yPercent,o=n.x,a=n.y,l=n.rotation,c=n.skewX,u=n.skewY,h=n.scaleX,f=n.scaleY,d=n.target,g=n.xOrigin,_=n.yOrigin,m=n.xOffset,p=n.yOffset,M=n.forceCSS,v=parseFloat(o),x=parseFloat(a),S,T,E,A,y;l=parseFloat(l),c=parseFloat(c),u=parseFloat(u),u&&(u=parseFloat(u),c+=u,l+=u),l||c?(l*=Xr,c*=Xr,S=Math.cos(l)*h,T=Math.sin(l)*h,E=Math.sin(l-c)*-f,A=Math.cos(l-c)*f,c&&(u*=Xr,y=Math.tan(c-u),y=Math.sqrt(1+y*y),E*=y,A*=y,u&&(y=Math.tan(u),y=Math.sqrt(1+y*y),S*=y,T*=y)),S=Me(S),T=Me(T),E=Me(E),A=Me(A)):(S=h,A=f,T=E=0),(v&&!~(o+"").indexOf("px")||x&&!~(a+"").indexOf("px"))&&(v=Ri(d,"x",o,"px"),x=Ri(d,"y",a,"px")),(g||_||m||p)&&(v=Me(v+g-(g*S+_*E)+m),x=Me(x+_-(g*T+_*A)+p)),(i||s)&&(y=d.getBBox(),v=Me(v+i/100*y.width),x=Me(x+s/100*y.height)),y="matrix("+S+","+T+","+E+","+A+","+v+","+x+")",d.setAttribute("transform",y),M&&(d.style[he]=y)},tm=function(t,e,n,i,s){var o=360,a=Ie(s),l=parseFloat(s)*(a&&~s.indexOf("rad")?Bi:1),c=l-i,u=i+c+"deg",h,f;return a&&(h=s.split("_")[1],h==="short"&&(c%=o,c!==c%(o/2)&&(c+=c<0?o:-o)),h==="cw"&&c<0?c=(c+o*pl)%o-~~(c/o)*o:h==="ccw"&&c>0&&(c=(c-o*pl)%o-~~(c/o)*o)),t._pt=f=new rn(t._pt,e,n,i,c,F4),f.e=u,f.u="deg",t._props.push(n),f},yl=function(t,e){for(var n in e)t[n]=e[n];return t},em=function(t,e,n){var i=yl({},n._gsap),s="perspective,force3D,transformOrigin,svgOrigin",o=n.style,a,l,c,u,h,f,d,g;i.svg?(c=n.getAttribute("transform"),n.setAttribute("transform",""),o[he]=e,a=Gs(n,1),Bs(n,he),n.setAttribute("transform",c)):(c=getComputedStyle(n)[he],o[he]=e,a=Gs(n,1),o[he]=c);for(l in li)c=i[l],u=a[l],c!==u&&s.indexOf(l)<0&&(d=He(c),g=He(u),h=d!==g?Ri(n,l,c,g):parseFloat(c),f=parseFloat(u),t._pt=new rn(t._pt,a,l,h,f-h,L0),t._pt.u=g||0,t._props.push(l));yl(a,i)};nn("padding,margin,Width,Radius",function(r,t){var e="Top",n="Right",i="Bottom",s="Left",o=(t<3?[e,n,i,s]:[e+s,e+n,i+n,i+s]).map(function(a){return t<2?r+a:"border"+a+r});qo[t>1?"border"+r:r]=function(a,l,c,u,h){var f,d;if(arguments.length<4)return f=o.map(function(g){return ri(a,g,c)}),d=f.join(" "),d.split(f[0]).length===5?f[0]:d;f=(u+"").split(" "),d={},o.forEach(function(g,_){return d[g]=f[_]=f[_]||f[(_-1)/2|0]}),a.init(l,d,h)}});var d6={name:"css",register:U0,targetTest:function(t){return t.style&&t.nodeType},init:function(t,e,n,i,s){var o=this._props,a=t.style,l=n.vars.startAt,c,u,h,f,d,g,_,m,p,M,v,x,S,T,E,A;f3||U0(),this.styles=this.styles||o6(t),A=this.styles.props,this.tween=n;for(_ in e)if(_!=="autoRound"&&(u=e[_],!(hn[_]&&Zc(_,e,n,i,t,s)))){if(d=typeof u,g=qo[_],d==="function"&&(u=u.call(n,i,t,s),d=typeof u),d==="string"&&~u.indexOf("random(")&&(u=Ns(u)),g)g(this,t,_,u,n)&&(E=1);else if(_.substr(0,2)==="--")c=(getComputedStyle(t).getPropertyValue(_)+"").trim(),u+="",wi.lastIndex=0,wi.test(c)||(m=He(c),p=He(u)),p?m!==p&&(c=Ri(t,_,c,p)+p):m&&(u+=m),this.add(a,"setProperty",c,u,i,s,0,0,_),o.push(_),A.push(_,0,a[_]);else if(d!=="undefined"){if(l&&_ in l?(c=typeof l[_]=="function"?l[_].call(n,i,t,s):l[_],Ie(c)&&~c.indexOf("random(")&&(c=Ns(c)),He(c+"")||(c+=pn.units[_]||He(ri(t,_))||""),(c+"").charAt(1)==="="&&(c=ri(t,_))):c=ri(t,_),f=parseFloat(c),M=d==="string"&&u.charAt(1)==="="&&u.substr(0,2),M&&(u=u.substr(2)),h=parseFloat(u),_ in Bn&&(_==="autoAlpha"&&(f===1&&ri(t,"visibility")==="hidden"&&h&&(f=0),A.push("visibility",0,a.visibility),Mi(this,a,"visibility",f?"inherit":"hidden",h?"inherit":"hidden",!h)),_!=="scale"&&_!=="transform"&&(_=Bn[_],~_.indexOf(",")&&(_=_.split(",")[0]))),v=_ in li,v){if(this.styles.save(_),x||(S=t._gsap,S.renderTransform&&!e.parseTransform||Gs(t,e.parseTransform),T=e.smoothOrigin!==!1&&S.smooth,x=this._pt=new rn(this._pt,a,he,0,1,S.renderTransform,S,0,-1),x.dep=1),_==="scale")this._pt=new rn(this._pt,S,"scaleY",S.scaleY,(M?Vr(S.scaleY,M+h):h)-S.scaleY||0,L0),this._pt.u=0,o.push("scaleY",_),_+="X";else if(_==="transformOrigin"){A.push(On,0,a[On]),u=K4(u),S.svg?I0(t,u,0,T,0,this):(p=parseFloat(u.split(" ")[2])||0,p!==S.zOrigin&&Mi(this,S,"zOrigin",S.zOrigin,p),Mi(this,a,_,Yo(c),Yo(u)));continue}else if(_==="svgOrigin"){I0(t,u,1,T,0,this);continue}else if(_ in u6){tm(this,S,_,f,M?Vr(f,M+u):u);continue}else if(_==="smoothOrigin"){Mi(this,S,"smooth",S.smooth,u);continue}else if(_==="force3D"){S[_]=u;continue}else if(_==="transform"){em(this,u,t);continue}}else _ in a||(_=ss(_)||_);if(v||(h||h===0)&&(f||f===0)&&!N4.test(u)&&_ in a)m=(c+"").substr((f+"").length),h||(h=0),p=He(u)||(_ in pn.units?pn.units[_]:m),m!==p&&(f=Ri(t,_,c,p)),this._pt=new rn(this._pt,v?S:a,_,f,(M?Vr(f,M+h):h)-f,!v&&(p==="px"||_==="zIndex")&&e.autoRound!==!1?B4:L0),this._pt.u=p||0,m!==p&&p!=="%"&&(this._pt.b=c,this._pt.r=z4);else if(_ in a)Z4.call(this,t,_,c,M?M+u:u);else if(_ in t)this.add(t,_,c||t[_],M?M+u:u,i,s);else if(_!=="parseTransform"){i3(_,u);continue}v||(_ in a?A.push(_,0,a[_]):A.push(_,1,c||t[_])),o.push(_)}}E&&e6(this)},render:function(t,e){if(e.tween._time||!d3())for(var n=e._pt;n;)n.r(t,n.d),n=n._next;else e.styles.revert()},get:ri,aliases:Bn,getSetter:function(t,e,n){var i=Bn[e];return i&&i.indexOf(",")<0&&(e=i),e in li&&e!==On&&(t._gsap.x||ri(t,"x"))?n&&dl===n?e==="scale"?V4:H4:(dl=n||{})&&(e==="scale"?W4:X4):t.style&&!t3(t.style[e])?k4:~e.indexOf("-")?G4:u3(t,e)},core:{_removeProperty:Bs,_getMatrix:m3}};sn.utils.checkPrefix=ss;sn.core.getStyleSaver=o6;(function(r,t,e,n){var i=nn(r+","+t+","+e,function(s){li[s]=1});nn(t,function(s){pn.units[s]="deg",u6[s]=1}),Bn[i[13]]=r+","+t,nn(n,function(s){var o=s.split(":");Bn[o[1]]=i[o[0]]})})("x,y,z,scale,scaleX,scaleY,xPercent,yPercent","rotation,rotationX,rotationY,skewX,skewY","transform,transformOrigin,svgOrigin,force3D,smoothOrigin,transformPerspective","0:translateX,1:translateY,2:translateZ,8:rotate,8:rotationZ,8:rotateZ,9:rotateX,10:rotateY");nn("x,y,z,top,right,bottom,left,width,height,fontSize,padding,margin,perspective",function(r){pn.units[r]="px"});sn.registerPlugin(d6);var p6=sn.registerPlugin(d6)||sn;p6.core.Tween;class nm extends $s{constructor(t){super(t)}load(t,e,n,i){const s=this,o=new Up(this.manager);o.setPath(this.path),o.setRequestHeader(this.requestHeader),o.setWithCredentials(this.withCredentials),o.load(t,function(a){const l=s.parse(JSON.parse(a));e&&e(l)},n,i)}parse(t){return new im(t)}}class im{constructor(t){this.isFont=!0,this.type="Font",this.data=t}generateShapes(t,e=100){const n=[],i=rm(t,e,this.data);for(let s=0,o=i.length;s<o;s++)n.push(...i[s].toShapes());return n}}function rm(r,t,e){const n=Array.from(r),i=t/e.resolution,s=(e.boundingBox.yMax-e.boundingBox.yMin+e.underlineThickness)*i,o=[];let a=0,l=0;for(let c=0;c<n.length;c++){const u=n[c];if(u===`
`)a=0,l-=s;else{const h=sm(u,i,a,l,e);a+=h.offsetX,o.push(h.path)}}return o}function sm(r,t,e,n,i){const s=i.glyphs[r]||i.glyphs["?"];if(!s){console.error('THREE.Font: character "'+r+'" does not exists in font family '+i.familyName+".");return}const o=new Bp;let a,l,c,u,h,f,d,g;if(s.o){const _=s._cachedOutline||(s._cachedOutline=s.o.split(" "));for(let m=0,p=_.length;m<p;)switch(_[m++]){case"m":a=_[m++]*t+e,l=_[m++]*t+n,o.moveTo(a,l);break;case"l":a=_[m++]*t+e,l=_[m++]*t+n,o.lineTo(a,l);break;case"q":c=_[m++]*t+e,u=_[m++]*t+n,h=_[m++]*t+e,f=_[m++]*t+n,o.quadraticCurveTo(h,f,c,u);break;case"b":c=_[m++]*t+e,u=_[m++]*t+n,h=_[m++]*t+e,f=_[m++]*t+n,d=_[m++]*t+e,g=_[m++]*t+n,o.bezierCurveTo(h,f,d,g,c,u);break}}return{offsetX:s.ha*t,path:o}}class om extends K0{constructor(t,e={}){const n=e.font;if(n===void 0)super();else{const i=n.generateShapes(t,e.size);e.depth=e.height!==void 0?e.height:50,e.bevelThickness===void 0&&(e.bevelThickness=10),e.bevelSize===void 0&&(e.bevelSize=8),e.bevelEnabled===void 0&&(e.bevelEnabled=!1),super(i,e)}this.type="TextGeometry"}}function Ml(r,t=!1){const e=r[0].index!==null,n=new Set(Object.keys(r[0].attributes)),i=new Set(Object.keys(r[0].morphAttributes)),s={},o={},a=r[0].morphTargetsRelative,l=new Ae;let c=0;for(let u=0;u<r.length;++u){const h=r[u];let f=0;if(e!==(h.index!==null))return console.error("THREE.BufferGeometryUtils: .mergeGeometries() failed with geometry at index "+u+". All geometries must have compatible attributes; make sure index attribute exists among all geometries, or in none of them."),null;for(const d in h.attributes){if(!n.has(d))return console.error("THREE.BufferGeometryUtils: .mergeGeometries() failed with geometry at index "+u+'. All geometries must have compatible attributes; make sure "'+d+'" attribute exists among all geometries, or in none of them.'),null;s[d]===void 0&&(s[d]=[]),s[d].push(h.attributes[d]),f++}if(f!==n.size)return console.error("THREE.BufferGeometryUtils: .mergeGeometries() failed with geometry at index "+u+". Make sure all geometries have the same number of attributes."),null;if(a!==h.morphTargetsRelative)return console.error("THREE.BufferGeometryUtils: .mergeGeometries() failed with geometry at index "+u+". .morphTargetsRelative must be consistent throughout all geometries."),null;for(const d in h.morphAttributes){if(!i.has(d))return console.error("THREE.BufferGeometryUtils: .mergeGeometries() failed with geometry at index "+u+".  .morphAttributes must be consistent throughout all geometries."),null;o[d]===void 0&&(o[d]=[]),o[d].push(h.morphAttributes[d])}if(t){let d;if(e)d=h.index.count;else if(h.attributes.position!==void 0)d=h.attributes.position.count;else return console.error("THREE.BufferGeometryUtils: .mergeGeometries() failed with geometry at index "+u+". The geometry must have either an index or a position attribute"),null;l.addGroup(c,d,u),c+=d}}if(e){let u=0;const h=[];for(let f=0;f<r.length;++f){const d=r[f].index;for(let g=0;g<d.count;++g)h.push(d.getX(g)+u);u+=r[f].attributes.position.count}l.setIndex(h)}for(const u in s){const h=Sl(s[u]);if(!h)return console.error("THREE.BufferGeometryUtils: .mergeGeometries() failed while trying to merge the "+u+" attribute."),null;l.setAttribute(u,h)}for(const u in o){const h=o[u][0].length;if(h===0)break;l.morphAttributes=l.morphAttributes||{},l.morphAttributes[u]=[];for(let f=0;f<h;++f){const d=[];for(let _=0;_<o[u].length;++_)d.push(o[u][_][f]);const g=Sl(d);if(!g)return console.error("THREE.BufferGeometryUtils: .mergeGeometries() failed while trying to merge the "+u+" morphAttribute."),null;l.morphAttributes[u].push(g)}}return l}function Sl(r){let t,e,n,i=-1,s=0;for(let c=0;c<r.length;++c){const u=r[c];if(u.isInterleavedBufferAttribute)return console.error("THREE.BufferGeometryUtils: .mergeAttributes() failed. InterleavedBufferAttributes are not supported."),null;if(t===void 0&&(t=u.array.constructor),t!==u.array.constructor)return console.error("THREE.BufferGeometryUtils: .mergeAttributes() failed. BufferAttribute.array must be of consistent array types across matching attributes."),null;if(e===void 0&&(e=u.itemSize),e!==u.itemSize)return console.error("THREE.BufferGeometryUtils: .mergeAttributes() failed. BufferAttribute.itemSize must be consistent across matching attributes."),null;if(n===void 0&&(n=u.normalized),n!==u.normalized)return console.error("THREE.BufferGeometryUtils: .mergeAttributes() failed. BufferAttribute.normalized must be consistent across matching attributes."),null;if(i===-1&&(i=u.gpuType),i!==u.gpuType)return console.error("THREE.BufferGeometryUtils: .mergeAttributes() failed. BufferAttribute.gpuType must be consistent across matching attributes."),null;s+=u.array.length}const o=new t(s);let a=0;for(let c=0;c<r.length;++c)o.set(r[c].array,a),a+=r[c].array.length;const l=new oe(o,e,n);return i!==void 0&&(l.gpuType=i),l}const am=[-261,-51.06,-260,-51.06,-259,-51.06,-258,-51.06,-257,-51.06,-256,-51.06,-255,-51.06,-254,-51.06,-253,-51.06,-252,-51.06,-251,-51.06,-250,-51.06,-249,-51.06,-248,-51.06,-247,-51.06,-227,-51.06,-226,-51.06,-225,-51.06,-224,-51.06,-223,-51.06,-222,-51.06,-221,-51.06,-220,-51.06,-219,-51.06,-218,-51.06,-217,-51.06,-216,-51.06,-215,-51.06,-214,-51.06,-213,-51.06,-212,-51.06,-211,-51.06,-210,-51.06,-209,-51.06,-208,-51.06,-207,-51.06,-270,-50.06,-269,-50.06,-268,-50.06,-267,-50.06,-266,-50.06,-265,-50.06,-264,-50.06,-263,-50.06,-262,-50.06,-261,-50.06,-260,-50.06,-259,-50.06,-258,-50.06,-257,-50.06,-256,-50.06,-255,-50.06,-254,-50.06,-253,-50.06,-252,-50.06,-251,-50.06,-250,-50.06,-249,-50.06,-248,-50.06,-247,-50.06,-242,-50.06,-241,-50.06,-240,-50.06,-239,-50.06,-238,-50.06,-237,-50.06,-236,-50.06,-235,-50.06,-234,-50.06,-233,-50.06,-232,-50.06,-231,-50.06,-230,-50.06,-229,-50.06,-228,-50.06,-227,-50.06,-226,-50.06,-225,-50.06,-224,-50.06,-223,-50.06,-222,-50.06,-221,-50.06,-220,-50.06,-219,-50.06,-218,-50.06,-217,-50.06,-216,-50.06,-215,-50.06,-214,-50.06,-213,-50.06,-212,-50.06,-211,-50.06,-210,-50.06,-209,-50.06,-208,-50.06,-207,-50.06,-206,-50.06,-205,-50.06,-204,-50.06,-198,-50.06,-197,-50.06,-196,-50.06,-276,-49.06,-275,-49.06,-274,-49.06,-273,-49.06,-269,-49.06,-268,-49.06,-267,-49.06,-266,-49.06,-265,-49.06,-264,-49.06,-263,-49.06,-262,-49.06,-261,-49.06,-260,-49.06,-259,-49.06,-258,-49.06,-257,-49.06,-256,-49.06,-255,-49.06,-254,-49.06,-253,-49.06,-252,-49.06,-251,-49.06,-245,-49.06,-244,-49.06,-243,-49.06,-242,-49.06,-241,-49.06,-240,-49.06,-239,-49.06,-238,-49.06,-237,-49.06,-236,-49.06,-235,-49.06,-234,-49.06,-233,-49.06,-232,-49.06,-231,-49.06,-230,-49.06,-229,-49.06,-228,-49.06,-227,-49.06,-226,-49.06,-225,-49.06,-224,-49.06,-223,-49.06,-222,-49.06,-221,-49.06,-220,-49.06,-219,-49.06,-218,-49.06,-217,-49.06,-216,-49.06,-215,-49.06,-214,-49.06,-213,-49.06,-212,-49.06,-211,-49.06,-210,-49.06,-209,-49.06,-208,-49.06,-207,-49.06,-206,-49.06,-205,-49.06,-204,-49.06,-203,-49.06,-202,-49.06,-201,-49.06,-200,-49.06,-199,-49.06,-198,-49.06,-124,-49.06,-87,-49.06,-86,-49.06,-85,-49.06,-275,-48.06,-274,-48.06,-273,-48.06,-272,-48.06,-271,-48.06,-270,-48.06,-269,-48.06,-268,-48.06,-267,-48.06,-266,-48.06,-265,-48.06,-264,-48.06,-263,-48.06,-262,-48.06,-261,-48.06,-260,-48.06,-259,-48.06,-258,-48.06,-257,-48.06,-256,-48.06,-245,-48.06,-244,-48.06,-243,-48.06,-242,-48.06,-241,-48.06,-240,-48.06,-239,-48.06,-238,-48.06,-237,-48.06,-236,-48.06,-235,-48.06,-234,-48.06,-233,-48.06,-232,-48.06,-231,-48.06,-230,-48.06,-229,-48.06,-228,-48.06,-227,-48.06,-226,-48.06,-225,-48.06,-224,-48.06,-223,-48.06,-222,-48.06,-221,-48.06,-220,-48.06,-219,-48.06,-218,-48.06,-217,-48.06,-216,-48.06,-215,-48.06,-214,-48.06,-213,-48.06,-212,-48.06,-211,-48.06,-210,-48.06,-209,-48.06,-208,-48.06,-207,-48.06,-206,-48.06,-205,-48.06,-204,-48.06,-203,-48.06,-202,-48.06,-201,-48.06,-164,-48.06,-163,-48.06,-162,-48.06,-161,-48.06,-160,-48.06,-159,-48.06,-158,-48.06,-157,-48.06,-156,-48.06,-155,-48.06,-85,-48.06,-84,-48.06,-83,-48.06,-82,-48.06,-81,-48.06,-283,-47.06,-271,-47.06,-267,-47.06,-266,-47.06,-265,-47.06,-264,-47.06,-263,-47.06,-262,-47.06,-261,-47.06,-260,-47.06,-259,-47.06,-258,-47.06,-257,-47.06,-249,-47.06,-248,-47.06,-247,-47.06,-246,-47.06,-245,-47.06,-244,-47.06,-243,-47.06,-242,-47.06,-241,-47.06,-240,-47.06,-239,-47.06,-238,-47.06,-237,-47.06,-236,-47.06,-235,-47.06,-234,-47.06,-233,-47.06,-232,-47.06,-231,-47.06,-230,-47.06,-229,-47.06,-228,-47.06,-227,-47.06,-226,-47.06,-225,-47.06,-224,-47.06,-223,-47.06,-222,-47.06,-221,-47.06,-220,-47.06,-219,-47.06,-218,-47.06,-217,-47.06,-216,-47.06,-215,-47.06,-214,-47.06,-213,-47.06,-212,-47.06,-211,-47.06,-210,-47.06,-209,-47.06,-208,-47.06,-207,-47.06,-206,-47.06,-205,-47.06,-204,-47.06,-203,-47.06,-202,-47.06,-201,-47.06,-200,-47.06,-167,-47.06,-166,-47.06,-165,-47.06,-164,-47.06,-163,-47.06,-162,-47.06,-159,-47.06,-276,-46.06,-267,-46.06,-266,-46.06,-265,-46.06,-264,-46.06,-263,-46.06,-262,-46.06,-261,-46.06,-260,-46.06,-259,-46.06,-251,-46.06,-250,-46.06,-249,-46.06,-248,-46.06,-247,-46.06,-246,-46.06,-245,-46.06,-244,-46.06,-243,-46.06,-242,-46.06,-241,-46.06,-240,-46.06,-239,-46.06,-238,-46.06,-237,-46.06,-236,-46.06,-235,-46.06,-234,-46.06,-233,-46.06,-232,-46.06,-231,-46.06,-230,-46.06,-229,-46.06,-228,-46.06,-227,-46.06,-226,-46.06,-225,-46.06,-224,-46.06,-223,-46.06,-222,-46.06,-221,-46.06,-220,-46.06,-219,-46.06,-218,-46.06,-217,-46.06,-216,-46.06,-215,-46.06,-214,-46.06,-213,-46.06,-212,-46.06,-211,-46.06,-210,-46.06,-209,-46.06,-208,-46.06,-207,-46.06,-206,-46.06,-205,-46.06,-204,-46.06,-203,-46.06,-202,-46.06,-201,-46.06,-200,-46.06,-165,-46.06,-164,-46.06,-163,-46.06,-299,-45.06,-298,-45.06,-271,-45.06,-248,-45.06,-241,-45.06,-240,-45.06,-239,-45.06,-238,-45.06,-237,-45.06,-236,-45.06,-235,-45.06,-234,-45.06,-233,-45.06,-232,-45.06,-231,-45.06,-230,-45.06,-229,-45.06,-228,-45.06,-227,-45.06,-226,-45.06,-225,-45.06,-224,-45.06,-223,-45.06,-222,-45.06,-221,-45.06,-220,-45.06,-219,-45.06,-218,-45.06,-217,-45.06,-216,-45.06,-215,-45.06,-214,-45.06,-213,-45.06,-212,-45.06,-211,-45.06,-210,-45.06,-209,-45.06,-208,-45.06,-207,-45.06,-206,-45.06,-205,-45.06,-204,-45.06,-203,-45.06,-202,-45.06,-201,-45.06,-79,-45.06,-78,-45.06,-77,-45.06,-76,-45.06,-75,-45.06,-74,-45.06,-296,-44.06,-295,-44.06,-294,-44.06,-293,-44.06,-290,-44.06,-289,-44.06,-280,-44.06,-279,-44.06,-272,-44.06,-271,-44.06,-270,-44.06,-238,-44.06,-237,-44.06,-236,-44.06,-235,-44.06,-234,-44.06,-233,-44.06,-232,-44.06,-231,-44.06,-230,-44.06,-229,-44.06,-228,-44.06,-227,-44.06,-226,-44.06,-225,-44.06,-224,-44.06,-223,-44.06,-222,-44.06,-221,-44.06,-220,-44.06,-219,-44.06,-218,-44.06,-217,-44.06,-216,-44.06,-215,-44.06,-214,-44.06,-213,-44.06,-212,-44.06,-211,-44.06,-210,-44.06,-209,-44.06,-208,-44.06,-207,-44.06,-206,-44.06,-205,-44.06,-204,-44.06,-203,-44.06,-202,-44.06,-201,-44.06,-87,-44.06,-86,-44.06,-85,-44.06,-84,-44.06,-83,-44.06,-82,-44.06,-81,-44.06,-80,-44.06,-79,-44.06,-78,-44.06,-77,-44.06,-76,-44.06,-75,-44.06,-74,-44.06,-73,-44.06,-72,-44.06,-71,-44.06,-70,-44.06,-69,-44.06,-68,-44.06,-44,-44.06,-43,-44.06,-42,-44.06,-41,-44.06,-40,-44.06,-39,-44.06,-38,-44.06,-36,-44.06,-35,-44.06,-34,-44.06,-237,-43.06,-236,-43.06,-235,-43.06,-234,-43.06,-233,-43.06,-232,-43.06,-231,-43.06,-230,-43.06,-229,-43.06,-228,-43.06,-227,-43.06,-226,-43.06,-225,-43.06,-224,-43.06,-223,-43.06,-222,-43.06,-221,-43.06,-220,-43.06,-219,-43.06,-218,-43.06,-217,-43.06,-216,-43.06,-215,-43.06,-214,-43.06,-213,-43.06,-212,-43.06,-211,-43.06,-210,-43.06,-209,-43.06,-208,-43.06,-207,-43.06,-206,-43.06,-205,-43.06,-204,-43.06,-203,-43.06,-202,-43.06,-201,-43.06,-153,-43.06,-152,-43.06,-151,-43.06,-124,-43.06,-123,-43.06,-94,-43.06,-93,-43.06,-92,-43.06,-91,-43.06,-90,-43.06,-89,-43.06,-88,-43.06,-87,-43.06,-86,-43.06,-85,-43.06,-84,-43.06,-83,-43.06,-82,-43.06,-81,-43.06,-80,-43.06,-79,-43.06,-78,-43.06,-77,-43.06,-76,-43.06,-75,-43.06,-74,-43.06,-73,-43.06,-72,-43.06,-71,-43.06,-70,-43.06,-69,-43.06,-68,-43.06,-44,-43.06,-43,-43.06,-42,-43.06,-41,-43.06,-40,-43.06,-39,-43.06,-38,-43.06,-37,-43.06,-36,-43.06,-35,-43.06,-34,-43.06,-33,-43.06,-32,-43.06,-31,-43.06,-30,-43.06,-29,-43.06,-28,-43.06,-3,-43.06,-2,-43.06,-1,-43.06,-304,-42.06,-303,-42.06,-302,-42.06,-301,-42.06,-300,-42.06,-299,-42.06,-298,-42.06,-297,-42.06,-280,-42.06,-279,-42.06,-278,-42.06,-275,-42.06,-274,-42.06,-273,-42.06,-267,-42.06,-236,-42.06,-235,-42.06,-234,-42.06,-233,-42.06,-232,-42.06,-231,-42.06,-230,-42.06,-229,-42.06,-228,-42.06,-227,-42.06,-226,-42.06,-225,-42.06,-224,-42.06,-223,-42.06,-222,-42.06,-221,-42.06,-220,-42.06,-219,-42.06,-218,-42.06,-217,-42.06,-216,-42.06,-215,-42.06,-214,-42.06,-213,-42.06,-212,-42.06,-211,-42.06,-210,-42.06,-209,-42.06,-208,-42.06,-207,-42.06,-206,-42.06,-205,-42.06,-204,-42.06,-203,-42.06,-125,-42.06,-98,-42.06,-96,-42.06,-95,-42.06,-94,-42.06,-93,-42.06,-92,-42.06,-91,-42.06,-90,-42.06,-89,-42.06,-88,-42.06,-87,-42.06,-86,-42.06,-85,-42.06,-84,-42.06,-83,-42.06,-82,-42.06,-81,-42.06,-80,-42.06,-79,-42.06,-78,-42.06,-77,-42.06,-76,-42.06,-75,-42.06,-74,-42.06,-73,-42.06,-72,-42.06,-71,-42.06,-70,-42.06,-69,-42.06,-68,-42.06,-56,-42.06,-55,-42.06,-54,-42.06,-43,-42.06,-42,-42.06,-41,-42.06,-40,-42.06,-39,-42.06,-38,-42.06,-37,-42.06,-36,-42.06,-35,-42.06,-34,-42.06,-33,-42.06,-32,-42.06,-31,-42.06,-5,-42.06,-4,-42.06,-305,-41.06,-304,-41.06,-303,-41.06,-302,-41.06,-301,-41.06,-299,-41.06,-298,-41.06,-297,-41.06,-296,-41.06,-295,-41.06,-294,-41.06,-293,-41.06,-291,-41.06,-290,-41.06,-288,-41.06,-287,-41.06,-286,-41.06,-281,-41.06,-280,-41.06,-279,-41.06,-278,-41.06,-275,-41.06,-270,-41.06,-269,-41.06,-268,-41.06,-267,-41.06,-266,-41.06,-265,-41.06,-264,-41.06,-263,-41.06,-262,-41.06,-261,-41.06,-260,-41.06,-259,-41.06,-258,-41.06,-257,-41.06,-236,-41.06,-235,-41.06,-234,-41.06,-233,-41.06,-232,-41.06,-231,-41.06,-230,-41.06,-229,-41.06,-228,-41.06,-227,-41.06,-226,-41.06,-225,-41.06,-224,-41.06,-223,-41.06,-222,-41.06,-221,-41.06,-220,-41.06,-219,-41.06,-218,-41.06,-217,-41.06,-216,-41.06,-215,-41.06,-214,-41.06,-213,-41.06,-212,-41.06,-211,-41.06,-210,-41.06,-209,-41.06,-208,-41.06,-207,-41.06,-206,-41.06,-205,-41.06,-204,-41.06,-127,-41.06,-126,-41.06,-110,-41.06,-109,-41.06,-104,-41.06,-103,-41.06,-102,-41.06,-101,-41.06,-100,-41.06,-99,-41.06,-98,-41.06,-97,-41.06,-96,-41.06,-95,-41.06,-94,-41.06,-93,-41.06,-92,-41.06,-91,-41.06,-90,-41.06,-89,-41.06,-88,-41.06,-87,-41.06,-86,-41.06,-85,-41.06,-84,-41.06,-83,-41.06,-82,-41.06,-81,-41.06,-80,-41.06,-79,-41.06,-78,-41.06,-77,-41.06,-76,-41.06,-75,-41.06,-74,-41.06,-73,-41.06,-72,-41.06,-71,-41.06,-70,-41.06,-69,-41.06,-68,-41.06,-67,-41.06,-66,-41.06,-65,-41.06,-64,-41.06,-63,-41.06,-62,-41.06,-61,-41.06,-60,-41.06,-59,-41.06,-58,-41.06,-57,-41.06,-56,-41.06,-55,-41.06,-54,-41.06,-53,-41.06,-52,-41.06,-51,-41.06,-43,-41.06,-42,-41.06,-41,-41.06,-40,-41.06,-39,-41.06,-38,-41.06,-37,-41.06,-36,-41.06,-35,-41.06,-34,-41.06,-33,-41.06,-32,-41.06,-31,-41.06,-30,-41.06,-11,-41.06,-10,-41.06,-7,-41.06,-6,-41.06,-5,-41.06,-303,-40.06,-298,-40.06,-297,-40.06,-296,-40.06,-295,-40.06,-294,-40.06,-293,-40.06,-292,-40.06,-291,-40.06,-290,-40.06,-289,-40.06,-288,-40.06,-287,-40.06,-286,-40.06,-275,-40.06,-270,-40.06,-269,-40.06,-268,-40.06,-267,-40.06,-266,-40.06,-265,-40.06,-264,-40.06,-263,-40.06,-262,-40.06,-261,-40.06,-260,-40.06,-259,-40.06,-258,-40.06,-257,-40.06,-256,-40.06,-255,-40.06,-233,-40.06,-232,-40.06,-231,-40.06,-230,-40.06,-229,-40.06,-228,-40.06,-227,-40.06,-226,-40.06,-225,-40.06,-224,-40.06,-223,-40.06,-222,-40.06,-221,-40.06,-220,-40.06,-219,-40.06,-218,-40.06,-217,-40.06,-216,-40.06,-215,-40.06,-214,-40.06,-213,-40.06,-212,-40.06,-211,-40.06,-210,-40.06,-209,-40.06,-208,-40.06,-207,-40.06,-206,-40.06,-205,-40.06,-204,-40.06,-128,-40.06,-127,-40.06,-126,-40.06,-125,-40.06,-111,-40.06,-110,-40.06,-109,-40.06,-106,-40.06,-105,-40.06,-104,-40.06,-103,-40.06,-102,-40.06,-101,-40.06,-100,-40.06,-99,-40.06,-98,-40.06,-97,-40.06,-96,-40.06,-95,-40.06,-94,-40.06,-93,-40.06,-92,-40.06,-91,-40.06,-90,-40.06,-89,-40.06,-88,-40.06,-87,-40.06,-86,-40.06,-85,-40.06,-84,-40.06,-83,-40.06,-82,-40.06,-81,-40.06,-80,-40.06,-79,-40.06,-78,-40.06,-77,-40.06,-76,-40.06,-75,-40.06,-74,-40.06,-73,-40.06,-72,-40.06,-71,-40.06,-70,-40.06,-69,-40.06,-68,-40.06,-67,-40.06,-66,-40.06,-65,-40.06,-64,-40.06,-63,-40.06,-62,-40.06,-61,-40.06,-60,-40.06,-59,-40.06,-58,-40.06,-57,-40.06,-56,-40.06,-55,-40.06,-54,-40.06,-53,-40.06,-52,-40.06,-48,-40.06,-47,-40.06,-45,-40.06,-44,-40.06,-43,-40.06,-42,-40.06,-41,-40.06,-40,-40.06,-39,-40.06,-38,-40.06,-37,-40.06,-36,-40.06,-35,-40.06,-34,-40.06,-33,-40.06,-32,-40.06,-31,-40.06,-30,-40.06,-29,-40.06,-28,-40.06,-27,-40.06,-26,-40.06,-25,-40.06,-338,-39.06,-337,-39.06,-336,-39.06,-335,-39.06,-334,-39.06,-333,-39.06,-332,-39.06,-297,-39.06,-296,-39.06,-295,-39.06,-294,-39.06,-293,-39.06,-292,-39.06,-291,-39.06,-290,-39.06,-289,-39.06,-288,-39.06,-287,-39.06,-286,-39.06,-285,-39.06,-276,-39.06,-275,-39.06,-274,-39.06,-268,-39.06,-267,-39.06,-266,-39.06,-265,-39.06,-264,-39.06,-263,-39.06,-262,-39.06,-261,-39.06,-260,-39.06,-259,-39.06,-258,-39.06,-257,-39.06,-256,-39.06,-255,-39.06,-254,-39.06,-253,-39.06,-252,-39.06,-251,-39.06,-234,-39.06,-233,-39.06,-232,-39.06,-231,-39.06,-230,-39.06,-229,-39.06,-228,-39.06,-227,-39.06,-226,-39.06,-225,-39.06,-224,-39.06,-223,-39.06,-222,-39.06,-221,-39.06,-220,-39.06,-219,-39.06,-218,-39.06,-217,-39.06,-216,-39.06,-215,-39.06,-214,-39.06,-213,-39.06,-212,-39.06,-211,-39.06,-210,-39.06,-209,-39.06,-208,-39.06,-207,-39.06,-206,-39.06,-205,-39.06,-204,-39.06,-203,-39.06,-156,-39.06,-155,-39.06,-154,-39.06,-153,-39.06,-152,-39.06,-113,-39.06,-112,-39.06,-111,-39.06,-110,-39.06,-109,-39.06,-108,-39.06,-107,-39.06,-106,-39.06,-105,-39.06,-104,-39.06,-103,-39.06,-102,-39.06,-101,-39.06,-100,-39.06,-99,-39.06,-98,-39.06,-97,-39.06,-96,-39.06,-95,-39.06,-94,-39.06,-93,-39.06,-92,-39.06,-91,-39.06,-90,-39.06,-89,-39.06,-88,-39.06,-87,-39.06,-86,-39.06,-85,-39.06,-84,-39.06,-83,-39.06,-82,-39.06,-81,-39.06,-80,-39.06,-79,-39.06,-78,-39.06,-77,-39.06,-76,-39.06,-75,-39.06,-74,-39.06,-73,-39.06,-72,-39.06,-71,-39.06,-70,-39.06,-69,-39.06,-68,-39.06,-67,-39.06,-66,-39.06,-65,-39.06,-64,-39.06,-63,-39.06,-62,-39.06,-61,-39.06,-60,-39.06,-59,-39.06,-58,-39.06,-57,-39.06,-56,-39.06,-55,-39.06,-54,-39.06,-53,-39.06,-52,-39.06,-51,-39.06,-50,-39.06,-49,-39.06,-48,-39.06,-47,-39.06,-46,-39.06,-45,-39.06,-44,-39.06,-43,-39.06,-42,-39.06,-41,-39.06,-40,-39.06,-39,-39.06,-38,-39.06,-37,-39.06,-36,-39.06,-35,-39.06,-34,-39.06,-33,-39.06,-32,-39.06,-31,-39.06,-30,-39.06,-29,-39.06,-28,-39.06,-27,-39.06,-26,-39.06,-25,-39.06,-24,-39.06,-23,-39.06,-22,-39.06,-21,-39.06,-20,-39.06,-19,-39.06,-18,-39.06,-342,-38.06,-341,-38.06,-340,-38.06,-339,-38.06,-338,-38.06,-337,-38.06,-336,-38.06,-335,-38.06,-334,-38.06,-333,-38.06,-332,-38.06,-331,-38.06,-330,-38.06,-329,-38.06,-328,-38.06,-327,-38.06,-326,-38.06,-325,-38.06,-324,-38.06,-323,-38.06,-318,-38.06,-317,-38.06,-316,-38.06,-315,-38.06,-314,-38.06,-313,-38.06,-312,-38.06,-311,-38.06,-310,-38.06,-309,-38.06,-308,-38.06,-305,-38.06,-296,-38.06,-294,-38.06,-293,-38.06,-292,-38.06,-291,-38.06,-290,-38.06,-289,-38.06,-288,-38.06,-286,-38.06,-285,-38.06,-284,-38.06,-283,-38.06,-276,-38.06,-275,-38.06,-274,-38.06,-273,-38.06,-272,-38.06,-265,-38.06,-264,-38.06,-263,-38.06,-262,-38.06,-259,-38.06,-258,-38.06,-257,-38.06,-256,-38.06,-255,-38.06,-254,-38.06,-253,-38.06,-252,-38.06,-251,-38.06,-250,-38.06,-249,-38.06,-231,-38.06,-230,-38.06,-229,-38.06,-228,-38.06,-227,-38.06,-226,-38.06,-225,-38.06,-224,-38.06,-223,-38.06,-222,-38.06,-221,-38.06,-220,-38.06,-219,-38.06,-218,-38.06,-217,-38.06,-216,-38.06,-215,-38.06,-214,-38.06,-213,-38.06,-212,-38.06,-211,-38.06,-210,-38.06,-209,-38.06,-208,-38.06,-207,-38.06,-206,-38.06,-161,-38.06,-160,-38.06,-159,-38.06,-158,-38.06,-157,-38.06,-156,-38.06,-155,-38.06,-154,-38.06,-153,-38.06,-152,-38.06,-151,-38.06,-150,-38.06,-111,-38.06,-110,-38.06,-109,-38.06,-108,-38.06,-107,-38.06,-106,-38.06,-105,-38.06,-104,-38.06,-103,-38.06,-102,-38.06,-101,-38.06,-100,-38.06,-99,-38.06,-98,-38.06,-97,-38.06,-96,-38.06,-95,-38.06,-94,-38.06,-93,-38.06,-92,-38.06,-91,-38.06,-90,-38.06,-89,-38.06,-88,-38.06,-87,-38.06,-86,-38.06,-85,-38.06,-84,-38.06,-83,-38.06,-82,-38.06,-81,-38.06,-80,-38.06,-79,-38.06,-78,-38.06,-77,-38.06,-76,-38.06,-75,-38.06,-74,-38.06,-73,-38.06,-72,-38.06,-71,-38.06,-70,-38.06,-69,-38.06,-68,-38.06,-67,-38.06,-66,-38.06,-65,-38.06,-64,-38.06,-63,-38.06,-62,-38.06,-61,-38.06,-60,-38.06,-59,-38.06,-58,-38.06,-57,-38.06,-56,-38.06,-55,-38.06,-54,-38.06,-53,-38.06,-52,-38.06,-51,-38.06,-50,-38.06,-49,-38.06,-48,-38.06,-47,-38.06,-46,-38.06,-45,-38.06,-44,-38.06,-43,-38.06,-42,-38.06,-41,-38.06,-40,-38.06,-39,-38.06,-38,-38.06,-37,-38.06,-36,-38.06,-35,-38.06,-34,-38.06,-33,-38.06,-32,-38.06,-31,-38.06,-30,-38.06,-29,-38.06,-28,-38.06,-27,-38.06,-26,-38.06,-25,-38.06,-24,-38.06,-23,-38.06,-22,-38.06,-21,-38.06,-20,-38.06,-19,-38.06,-18,-38.06,-17,-38.06,-16,-38.06,-15,-38.06,-14,-38.06,-13,-38.06,-12,-38.06,-11,-38.06,-10,-38.06,-9,-38.06,-8,-38.06,-344,-37.06,-343,-37.06,-342,-37.06,-341,-37.06,-340,-37.06,-339,-37.06,-338,-37.06,-337,-37.06,-336,-37.06,-335,-37.06,-334,-37.06,-333,-37.06,-332,-37.06,-331,-37.06,-330,-37.06,-329,-37.06,-328,-37.06,-327,-37.06,-326,-37.06,-325,-37.06,-324,-37.06,-323,-37.06,-322,-37.06,-321,-37.06,-320,-37.06,-319,-37.06,-318,-37.06,-317,-37.06,-316,-37.06,-315,-37.06,-314,-37.06,-313,-37.06,-312,-37.06,-311,-37.06,-310,-37.06,-309,-37.06,-308,-37.06,-307,-37.06,-306,-37.06,-305,-37.06,-304,-37.06,-303,-37.06,-302,-37.06,-301,-37.06,-300,-37.06,-299,-37.06,-298,-37.06,-286,-37.06,-279,-37.06,-278,-37.06,-277,-37.06,-276,-37.06,-275,-37.06,-274,-37.06,-273,-37.06,-272,-37.06,-271,-37.06,-270,-37.06,-265,-37.06,-264,-37.06,-263,-37.06,-258,-37.06,-257,-37.06,-256,-37.06,-255,-37.06,-254,-37.06,-253,-37.06,-252,-37.06,-251,-37.06,-250,-37.06,-249,-37.06,-231,-37.06,-230,-37.06,-229,-37.06,-228,-37.06,-227,-37.06,-226,-37.06,-225,-37.06,-224,-37.06,-223,-37.06,-222,-37.06,-221,-37.06,-220,-37.06,-219,-37.06,-218,-37.06,-217,-37.06,-216,-37.06,-215,-37.06,-214,-37.06,-213,-37.06,-164,-37.06,-163,-37.06,-162,-37.06,-161,-37.06,-160,-37.06,-159,-37.06,-158,-37.06,-157,-37.06,-156,-37.06,-155,-37.06,-154,-37.06,-153,-37.06,-152,-37.06,-151,-37.06,-150,-37.06,-149,-37.06,-148,-37.06,-147,-37.06,-146,-37.06,-145,-37.06,-144,-37.06,-119,-37.06,-118,-37.06,-117,-37.06,-116,-37.06,-115,-37.06,-111,-37.06,-110,-37.06,-109,-37.06,-108,-37.06,-107,-37.06,-106,-37.06,-105,-37.06,-104,-37.06,-103,-37.06,-102,-37.06,-101,-37.06,-100,-37.06,-99,-37.06,-98,-37.06,-97,-37.06,-96,-37.06,-95,-37.06,-94,-37.06,-93,-37.06,-92,-37.06,-91,-37.06,-90,-37.06,-89,-37.06,-88,-37.06,-87,-37.06,-86,-37.06,-85,-37.06,-84,-37.06,-83,-37.06,-82,-37.06,-81,-37.06,-80,-37.06,-79,-37.06,-78,-37.06,-77,-37.06,-76,-37.06,-75,-37.06,-74,-37.06,-73,-37.06,-72,-37.06,-71,-37.06,-70,-37.06,-69,-37.06,-68,-37.06,-67,-37.06,-66,-37.06,-65,-37.06,-64,-37.06,-63,-37.06,-62,-37.06,-61,-37.06,-60,-37.06,-59,-37.06,-58,-37.06,-57,-37.06,-56,-37.06,-55,-37.06,-54,-37.06,-53,-37.06,-52,-37.06,-51,-37.06,-50,-37.06,-49,-37.06,-48,-37.06,-47,-37.06,-46,-37.06,-45,-37.06,-44,-37.06,-43,-37.06,-42,-37.06,-41,-37.06,-40,-37.06,-39,-37.06,-38,-37.06,-37,-37.06,-36,-37.06,-35,-37.06,-34,-37.06,-33,-37.06,-32,-37.06,-31,-37.06,-30,-37.06,-29,-37.06,-28,-37.06,-27,-37.06,-26,-37.06,-25,-37.06,-24,-37.06,-23,-37.06,-22,-37.06,-21,-37.06,-20,-37.06,-19,-37.06,-18,-37.06,-17,-37.06,-16,-37.06,-15,-37.06,-14,-37.06,-13,-37.06,-12,-37.06,-11,-37.06,-10,-37.06,-9,-37.06,-8,-37.06,-7,-37.06,-6,-37.06,-5,-37.06,-4,-37.06,-3,-37.06,-2,-37.06,-1,-37.06,-360,-36.06,-359,-36.06,-358,-36.06,-343,-36.06,-342,-36.06,-341,-36.06,-340,-36.06,-339,-36.06,-338,-36.06,-337,-36.06,-336,-36.06,-335,-36.06,-334,-36.06,-333,-36.06,-332,-36.06,-331,-36.06,-330,-36.06,-329,-36.06,-328,-36.06,-327,-36.06,-326,-36.06,-325,-36.06,-324,-36.06,-323,-36.06,-322,-36.06,-321,-36.06,-320,-36.06,-319,-36.06,-318,-36.06,-317,-36.06,-316,-36.06,-315,-36.06,-314,-36.06,-313,-36.06,-312,-36.06,-311,-36.06,-310,-36.06,-309,-36.06,-308,-36.06,-307,-36.06,-306,-36.06,-305,-36.06,-304,-36.06,-303,-36.06,-302,-36.06,-301,-36.06,-300,-36.06,-299,-36.06,-298,-36.06,-297,-36.06,-296,-36.06,-288,-36.06,-287,-36.06,-286,-36.06,-285,-36.06,-280,-36.06,-279,-36.06,-278,-36.06,-277,-36.06,-276,-36.06,-275,-36.06,-274,-36.06,-273,-36.06,-272,-36.06,-271,-36.06,-270,-36.06,-269,-36.06,-266,-36.06,-265,-36.06,-264,-36.06,-263,-36.06,-253,-36.06,-252,-36.06,-251,-36.06,-250,-36.06,-249,-36.06,-248,-36.06,-247,-36.06,-246,-36.06,-233,-36.06,-232,-36.06,-231,-36.06,-230,-36.06,-229,-36.06,-228,-36.06,-227,-36.06,-226,-36.06,-225,-36.06,-224,-36.06,-223,-36.06,-222,-36.06,-221,-36.06,-220,-36.06,-219,-36.06,-218,-36.06,-217,-36.06,-216,-36.06,-215,-36.06,-165,-36.06,-164,-36.06,-163,-36.06,-162,-36.06,-161,-36.06,-160,-36.06,-159,-36.06,-158,-36.06,-157,-36.06,-156,-36.06,-155,-36.06,-154,-36.06,-153,-36.06,-152,-36.06,-151,-36.06,-150,-36.06,-149,-36.06,-148,-36.06,-147,-36.06,-146,-36.06,-145,-36.06,-144,-36.06,-143,-36.06,-142,-36.06,-141,-36.06,-136,-36.06,-130,-36.06,-129,-36.06,-128,-36.06,-127,-36.06,-126,-36.06,-125,-36.06,-124,-36.06,-123,-36.06,-122,-36.06,-121,-36.06,-120,-36.06,-119,-36.06,-118,-36.06,-117,-36.06,-116,-36.06,-115,-36.06,-114,-36.06,-113,-36.06,-112,-36.06,-111,-36.06,-110,-36.06,-109,-36.06,-108,-36.06,-107,-36.06,-106,-36.06,-105,-36.06,-104,-36.06,-103,-36.06,-102,-36.06,-101,-36.06,-100,-36.06,-99,-36.06,-98,-36.06,-97,-36.06,-96,-36.06,-95,-36.06,-94,-36.06,-93,-36.06,-92,-36.06,-91,-36.06,-90,-36.06,-89,-36.06,-88,-36.06,-87,-36.06,-86,-36.06,-85,-36.06,-84,-36.06,-83,-36.06,-82,-36.06,-81,-36.06,-80,-36.06,-79,-36.06,-78,-36.06,-77,-36.06,-76,-36.06,-75,-36.06,-74,-36.06,-73,-36.06,-72,-36.06,-71,-36.06,-70,-36.06,-69,-36.06,-68,-36.06,-67,-36.06,-66,-36.06,-65,-36.06,-64,-36.06,-63,-36.06,-62,-36.06,-61,-36.06,-60,-36.06,-59,-36.06,-58,-36.06,-57,-36.06,-56,-36.06,-55,-36.06,-54,-36.06,-53,-36.06,-52,-36.06,-51,-36.06,-50,-36.06,-49,-36.06,-48,-36.06,-47,-36.06,-46,-36.06,-45,-36.06,-44,-36.06,-43,-36.06,-42,-36.06,-41,-36.06,-40,-36.06,-39,-36.06,-38,-36.06,-37,-36.06,-36,-36.06,-35,-36.06,-34,-36.06,-33,-36.06,-32,-36.06,-31,-36.06,-30,-36.06,-29,-36.06,-28,-36.06,-27,-36.06,-26,-36.06,-25,-36.06,-24,-36.06,-23,-36.06,-22,-36.06,-21,-36.06,-20,-36.06,-19,-36.06,-18,-36.06,-17,-36.06,-16,-36.06,-15,-36.06,-14,-36.06,-13,-36.06,-12,-36.06,-11,-36.06,-10,-36.06,-9,-36.06,-8,-36.06,-7,-36.06,-6,-36.06,-5,-36.06,-4,-36.06,-3,-36.06,-2,-36.06,-1,-36.06,-360,-35.06,-359,-35.06,-358,-35.06,-357,-35.06,-356,-35.06,-355,-35.06,-354,-35.06,-353,-35.06,-341,-35.06,-340,-35.06,-339,-35.06,-338,-35.06,-337,-35.06,-336,-35.06,-335,-35.06,-334,-35.06,-333,-35.06,-332,-35.06,-331,-35.06,-330,-35.06,-329,-35.06,-328,-35.06,-327,-35.06,-326,-35.06,-325,-35.06,-324,-35.06,-323,-35.06,-322,-35.06,-321,-35.06,-320,-35.06,-319,-35.06,-318,-35.06,-317,-35.06,-316,-35.06,-315,-35.06,-314,-35.06,-313,-35.06,-312,-35.06,-311,-35.06,-310,-35.06,-309,-35.06,-308,-35.06,-307,-35.06,-306,-35.06,-305,-35.06,-298,-35.06,-297,-35.06,-296,-35.06,-295,-35.06,-294,-35.06,-293,-35.06,-292,-35.06,-291,-35.06,-290,-35.06,-289,-35.06,-288,-35.06,-287,-35.06,-286,-35.06,-285,-35.06,-284,-35.06,-283,-35.06,-282,-35.06,-281,-35.06,-280,-35.06,-279,-35.06,-278,-35.06,-277,-35.06,-276,-35.06,-275,-35.06,-274,-35.06,-273,-35.06,-272,-35.06,-271,-35.06,-270,-35.06,-269,-35.06,-268,-35.06,-267,-35.06,-266,-35.06,-265,-35.06,-253,-35.06,-252,-35.06,-251,-35.06,-250,-35.06,-249,-35.06,-248,-35.06,-246,-35.06,-245,-35.06,-244,-35.06,-243,-35.06,-233,-35.06,-232,-35.06,-231,-35.06,-230,-35.06,-229,-35.06,-228,-35.06,-227,-35.06,-226,-35.06,-225,-35.06,-224,-35.06,-223,-35.06,-222,-35.06,-221,-35.06,-220,-35.06,-219,-35.06,-218,-35.06,-217,-35.06,-166,-35.06,-165,-35.06,-164,-35.06,-163,-35.06,-162,-35.06,-161,-35.06,-160,-35.06,-159,-35.06,-158,-35.06,-157,-35.06,-156,-35.06,-155,-35.06,-154,-35.06,-153,-35.06,-152,-35.06,-151,-35.06,-150,-35.06,-149,-35.06,-136,-35.06,-135,-35.06,-133,-35.06,-132,-35.06,-131,-35.06,-130,-35.06,-129,-35.06,-128,-35.06,-127,-35.06,-126,-35.06,-125,-35.06,-124,-35.06,-123,-35.06,-122,-35.06,-121,-35.06,-120,-35.06,-119,-35.06,-118,-35.06,-117,-35.06,-116,-35.06,-115,-35.06,-114,-35.06,-113,-35.06,-112,-35.06,-111,-35.06,-110,-35.06,-109,-35.06,-108,-35.06,-107,-35.06,-106,-35.06,-105,-35.06,-104,-35.06,-103,-35.06,-102,-35.06,-101,-35.06,-100,-35.06,-99,-35.06,-98,-35.06,-97,-35.06,-96,-35.06,-95,-35.06,-94,-35.06,-93,-35.06,-92,-35.06,-91,-35.06,-90,-35.06,-89,-35.06,-88,-35.06,-87,-35.06,-86,-35.06,-85,-35.06,-84,-35.06,-83,-35.06,-82,-35.06,-81,-35.06,-80,-35.06,-79,-35.06,-78,-35.06,-77,-35.06,-76,-35.06,-75,-35.06,-74,-35.06,-73,-35.06,-72,-35.06,-71,-35.06,-70,-35.06,-69,-35.06,-68,-35.06,-67,-35.06,-66,-35.06,-65,-35.06,-64,-35.06,-63,-35.06,-62,-35.06,-61,-35.06,-60,-35.06,-59,-35.06,-58,-35.06,-57,-35.06,-56,-35.06,-55,-35.06,-54,-35.06,-53,-35.06,-52,-35.06,-51,-35.06,-50,-35.06,-49,-35.06,-48,-35.06,-47,-35.06,-46,-35.06,-45,-35.06,-44,-35.06,-43,-35.06,-42,-35.06,-41,-35.06,-40,-35.06,-39,-35.06,-38,-35.06,-37,-35.06,-36,-35.06,-35,-35.06,-34,-35.06,-33,-35.06,-32,-35.06,-31,-35.06,-30,-35.06,-29,-35.06,-28,-35.06,-27,-35.06,-26,-35.06,-25,-35.06,-24,-35.06,-23,-35.06,-22,-35.06,-21,-35.06,-20,-35.06,-19,-35.06,-18,-35.06,-17,-35.06,-16,-35.06,-15,-35.06,-14,-35.06,-13,-35.06,-12,-35.06,-11,-35.06,-10,-35.06,-9,-35.06,-8,-35.06,-7,-35.06,-6,-35.06,-5,-35.06,-4,-35.06,-3,-35.06,-2,-35.06,-1,-35.06,-356,-34.06,-355,-34.06,-354,-34.06,-353,-34.06,-346,-34.06,-345,-34.06,-344,-34.06,-341,-34.06,-340,-34.06,-339,-34.06,-338,-34.06,-337,-34.06,-336,-34.06,-335,-34.06,-334,-34.06,-333,-34.06,-332,-34.06,-331,-34.06,-330,-34.06,-329,-34.06,-328,-34.06,-327,-34.06,-326,-34.06,-325,-34.06,-324,-34.06,-323,-34.06,-322,-34.06,-321,-34.06,-320,-34.06,-319,-34.06,-318,-34.06,-317,-34.06,-316,-34.06,-315,-34.06,-314,-34.06,-313,-34.06,-312,-34.06,-311,-34.06,-310,-34.06,-309,-34.06,-308,-34.06,-307,-34.06,-306,-34.06,-305,-34.06,-298,-34.06,-297,-34.06,-296,-34.06,-295,-34.06,-294,-34.06,-293,-34.06,-292,-34.06,-291,-34.06,-290,-34.06,-289,-34.06,-288,-34.06,-287,-34.06,-286,-34.06,-285,-34.06,-284,-34.06,-283,-34.06,-282,-34.06,-281,-34.06,-280,-34.06,-279,-34.06,-278,-34.06,-277,-34.06,-276,-34.06,-275,-34.06,-274,-34.06,-273,-34.06,-272,-34.06,-271,-34.06,-270,-34.06,-269,-34.06,-268,-34.06,-266,-34.06,-265,-34.06,-255,-34.06,-254,-34.06,-253,-34.06,-252,-34.06,-251,-34.06,-250,-34.06,-249,-34.06,-248,-34.06,-232,-34.06,-231,-34.06,-230,-34.06,-229,-34.06,-228,-34.06,-227,-34.06,-226,-34.06,-225,-34.06,-224,-34.06,-223,-34.06,-222,-34.06,-221,-34.06,-200,-34.06,-199,-34.06,-198,-34.06,-197,-34.06,-196,-34.06,-168,-34.06,-167,-34.06,-166,-34.06,-165,-34.06,-164,-34.06,-163,-34.06,-162,-34.06,-161,-34.06,-160,-34.06,-154,-34.06,-153,-34.06,-152,-34.06,-151,-34.06,-150,-34.06,-149,-34.06,-148,-34.06,-147,-34.06,-139,-34.06,-138,-34.06,-137,-34.06,-136,-34.06,-135,-34.06,-134,-34.06,-133,-34.06,-132,-34.06,-131,-34.06,-130,-34.06,-129,-34.06,-128,-34.06,-127,-34.06,-126,-34.06,-125,-34.06,-124,-34.06,-123,-34.06,-122,-34.06,-121,-34.06,-120,-34.06,-119,-34.06,-118,-34.06,-117,-34.06,-116,-34.06,-115,-34.06,-114,-34.06,-113,-34.06,-112,-34.06,-111,-34.06,-110,-34.06,-109,-34.06,-108,-34.06,-107,-34.06,-106,-34.06,-105,-34.06,-104,-34.06,-103,-34.06,-102,-34.06,-101,-34.06,-100,-34.06,-99,-34.06,-98,-34.06,-97,-34.06,-96,-34.06,-95,-34.06,-94,-34.06,-93,-34.06,-92,-34.06,-91,-34.06,-90,-34.06,-89,-34.06,-88,-34.06,-87,-34.06,-86,-34.06,-85,-34.06,-84,-34.06,-83,-34.06,-82,-34.06,-81,-34.06,-80,-34.06,-79,-34.06,-78,-34.06,-77,-34.06,-76,-34.06,-75,-34.06,-74,-34.06,-73,-34.06,-72,-34.06,-71,-34.06,-70,-34.06,-69,-34.06,-68,-34.06,-67,-34.06,-66,-34.06,-65,-34.06,-64,-34.06,-63,-34.06,-62,-34.06,-61,-34.06,-60,-34.06,-59,-34.06,-58,-34.06,-57,-34.06,-56,-34.06,-55,-34.06,-54,-34.06,-53,-34.06,-52,-34.06,-51,-34.06,-50,-34.06,-49,-34.06,-48,-34.06,-47,-34.06,-46,-34.06,-45,-34.06,-44,-34.06,-43,-34.06,-42,-34.06,-41,-34.06,-40,-34.06,-39,-34.06,-38,-34.06,-37,-34.06,-36,-34.06,-35,-34.06,-34,-34.06,-33,-34.06,-32,-34.06,-31,-34.06,-30,-34.06,-29,-34.06,-28,-34.06,-27,-34.06,-26,-34.06,-25,-34.06,-24,-34.06,-23,-34.06,-22,-34.06,-21,-34.06,-20,-34.06,-19,-34.06,-18,-34.06,-17,-34.06,-16,-34.06,-15,-34.06,-14,-34.06,-13,-34.06,-12,-34.06,-11,-34.06,-10,-34.06,-9,-34.06,-8,-34.06,-7,-34.06,-6,-34.06,-5,-34.06,-4,-34.06,-3,-34.06,-2,-34.06,-1,-34.06,-340,-33.06,-339,-33.06,-338,-33.06,-337,-33.06,-336,-33.06,-335,-33.06,-334,-33.06,-333,-33.06,-332,-33.06,-331,-33.06,-330,-33.06,-329,-33.06,-328,-33.06,-327,-33.06,-326,-33.06,-325,-33.06,-324,-33.06,-323,-33.06,-322,-33.06,-321,-33.06,-320,-33.06,-319,-33.06,-318,-33.06,-317,-33.06,-316,-33.06,-315,-33.06,-314,-33.06,-313,-33.06,-312,-33.06,-311,-33.06,-310,-33.06,-309,-33.06,-308,-33.06,-307,-33.06,-306,-33.06,-305,-33.06,-304,-33.06,-303,-33.06,-302,-33.06,-301,-33.06,-300,-33.06,-299,-33.06,-298,-33.06,-297,-33.06,-296,-33.06,-295,-33.06,-294,-33.06,-293,-33.06,-292,-33.06,-291,-33.06,-290,-33.06,-289,-33.06,-288,-33.06,-287,-33.06,-286,-33.06,-285,-33.06,-284,-33.06,-283,-33.06,-282,-33.06,-281,-33.06,-280,-33.06,-279,-33.06,-278,-33.06,-277,-33.06,-276,-33.06,-275,-33.06,-274,-33.06,-273,-33.06,-272,-33.06,-271,-33.06,-270,-33.06,-269,-33.06,-266,-33.06,-265,-33.06,-264,-33.06,-253,-33.06,-252,-33.06,-251,-33.06,-250,-33.06,-249,-33.06,-248,-33.06,-247,-33.06,-232,-33.06,-231,-33.06,-230,-33.06,-229,-33.06,-228,-33.06,-227,-33.06,-226,-33.06,-225,-33.06,-224,-33.06,-223,-33.06,-222,-33.06,-202,-33.06,-201,-33.06,-200,-33.06,-199,-33.06,-198,-33.06,-197,-33.06,-168,-33.06,-167,-33.06,-166,-33.06,-165,-33.06,-164,-33.06,-163,-33.06,-162,-33.06,-161,-33.06,-160,-33.06,-155,-33.06,-154,-33.06,-153,-33.06,-152,-33.06,-151,-33.06,-150,-33.06,-149,-33.06,-148,-33.06,-147,-33.06,-140,-33.06,-139,-33.06,-138,-33.06,-137,-33.06,-136,-33.06,-135,-33.06,-134,-33.06,-133,-33.06,-132,-33.06,-131,-33.06,-130,-33.06,-129,-33.06,-128,-33.06,-127,-33.06,-126,-33.06,-125,-33.06,-124,-33.06,-123,-33.06,-122,-33.06,-121,-33.06,-120,-33.06,-119,-33.06,-118,-33.06,-117,-33.06,-116,-33.06,-115,-33.06,-114,-33.06,-113,-33.06,-112,-33.06,-111,-33.06,-110,-33.06,-109,-33.06,-108,-33.06,-107,-33.06,-106,-33.06,-105,-33.06,-104,-33.06,-103,-33.06,-102,-33.06,-101,-33.06,-100,-33.06,-99,-33.06,-98,-33.06,-97,-33.06,-96,-33.06,-95,-33.06,-94,-33.06,-93,-33.06,-92,-33.06,-91,-33.06,-90,-33.06,-89,-33.06,-88,-33.06,-87,-33.06,-86,-33.06,-85,-33.06,-84,-33.06,-83,-33.06,-82,-33.06,-81,-33.06,-80,-33.06,-79,-33.06,-78,-33.06,-77,-33.06,-76,-33.06,-75,-33.06,-74,-33.06,-73,-33.06,-72,-33.06,-71,-33.06,-70,-33.06,-69,-33.06,-68,-33.06,-67,-33.06,-66,-33.06,-65,-33.06,-64,-33.06,-63,-33.06,-62,-33.06,-61,-33.06,-60,-33.06,-59,-33.06,-58,-33.06,-57,-33.06,-56,-33.06,-55,-33.06,-54,-33.06,-53,-33.06,-52,-33.06,-51,-33.06,-50,-33.06,-49,-33.06,-48,-33.06,-47,-33.06,-46,-33.06,-45,-33.06,-44,-33.06,-43,-33.06,-42,-33.06,-41,-33.06,-40,-33.06,-39,-33.06,-38,-33.06,-37,-33.06,-36,-33.06,-35,-33.06,-34,-33.06,-33,-33.06,-32,-33.06,-31,-33.06,-30,-33.06,-29,-33.06,-28,-33.06,-27,-33.06,-26,-33.06,-25,-33.06,-24,-33.06,-23,-33.06,-22,-33.06,-21,-33.06,-20,-33.06,-19,-33.06,-18,-33.06,-17,-33.06,-16,-33.06,-15,-33.06,-14,-33.06,-13,-33.06,-12,-33.06,-11,-33.06,-10,-33.06,-9,-33.06,-8,-33.06,-7,-33.06,-6,-33.06,-5,-33.06,-4,-33.06,-3,-33.06,-2,-33.06,-1,-33.06,-341,-32.06,-340,-32.06,-339,-32.06,-338,-32.06,-337,-32.06,-336,-32.06,-335,-32.06,-334,-32.06,-333,-32.06,-332,-32.06,-331,-32.06,-330,-32.06,-329,-32.06,-328,-32.06,-327,-32.06,-326,-32.06,-325,-32.06,-324,-32.06,-323,-32.06,-322,-32.06,-321,-32.06,-320,-32.06,-319,-32.06,-318,-32.06,-317,-32.06,-316,-32.06,-315,-32.06,-314,-32.06,-313,-32.06,-312,-32.06,-311,-32.06,-310,-32.06,-309,-32.06,-308,-32.06,-307,-32.06,-306,-32.06,-305,-32.06,-304,-32.06,-303,-32.06,-302,-32.06,-301,-32.06,-300,-32.06,-299,-32.06,-298,-32.06,-297,-32.06,-296,-32.06,-295,-32.06,-294,-32.06,-293,-32.06,-292,-32.06,-291,-32.06,-290,-32.06,-289,-32.06,-288,-32.06,-287,-32.06,-286,-32.06,-285,-32.06,-284,-32.06,-283,-32.06,-282,-32.06,-281,-32.06,-280,-32.06,-279,-32.06,-278,-32.06,-277,-32.06,-276,-32.06,-275,-32.06,-274,-32.06,-273,-32.06,-272,-32.06,-252,-32.06,-251,-32.06,-250,-32.06,-249,-32.06,-248,-32.06,-247,-32.06,-246,-32.06,-231,-32.06,-230,-32.06,-229,-32.06,-228,-32.06,-227,-32.06,-226,-32.06,-225,-32.06,-224,-32.06,-223,-32.06,-222,-32.06,-170,-32.06,-169,-32.06,-168,-32.06,-167,-32.06,-166,-32.06,-165,-32.06,-164,-32.06,-163,-32.06,-157,-32.06,-156,-32.06,-155,-32.06,-154,-32.06,-153,-32.06,-152,-32.06,-151,-32.06,-150,-32.06,-149,-32.06,-148,-32.06,-147,-32.06,-146,-32.06,-145,-32.06,-144,-32.06,-142,-32.06,-141,-32.06,-140,-32.06,-139,-32.06,-138,-32.06,-137,-32.06,-136,-32.06,-135,-32.06,-134,-32.06,-133,-32.06,-132,-32.06,-131,-32.06,-130,-32.06,-129,-32.06,-128,-32.06,-127,-32.06,-126,-32.06,-125,-32.06,-124,-32.06,-123,-32.06,-122,-32.06,-121,-32.06,-120,-32.06,-119,-32.06,-118,-32.06,-117,-32.06,-116,-32.06,-115,-32.06,-114,-32.06,-113,-32.06,-112,-32.06,-111,-32.06,-110,-32.06,-109,-32.06,-108,-32.06,-107,-32.06,-106,-32.06,-105,-32.06,-104,-32.06,-103,-32.06,-102,-32.06,-101,-32.06,-100,-32.06,-99,-32.06,-98,-32.06,-97,-32.06,-96,-32.06,-95,-32.06,-94,-32.06,-93,-32.06,-92,-32.06,-91,-32.06,-90,-32.06,-89,-32.06,-88,-32.06,-87,-32.06,-86,-32.06,-85,-32.06,-84,-32.06,-83,-32.06,-82,-32.06,-81,-32.06,-80,-32.06,-79,-32.06,-78,-32.06,-77,-32.06,-76,-32.06,-75,-32.06,-74,-32.06,-73,-32.06,-72,-32.06,-71,-32.06,-70,-32.06,-69,-32.06,-68,-32.06,-67,-32.06,-66,-32.06,-65,-32.06,-64,-32.06,-63,-32.06,-62,-32.06,-61,-32.06,-60,-32.06,-59,-32.06,-58,-32.06,-57,-32.06,-56,-32.06,-55,-32.06,-54,-32.06,-53,-32.06,-52,-32.06,-51,-32.06,-50,-32.06,-49,-32.06,-48,-32.06,-47,-32.06,-46,-32.06,-45,-32.06,-44,-32.06,-43,-32.06,-42,-32.06,-41,-32.06,-40,-32.06,-39,-32.06,-38,-32.06,-37,-32.06,-36,-32.06,-35,-32.06,-34,-32.06,-33,-32.06,-32,-32.06,-31,-32.06,-30,-32.06,-29,-32.06,-28,-32.06,-27,-32.06,-26,-32.06,-25,-32.06,-24,-32.06,-23,-32.06,-22,-32.06,-21,-32.06,-20,-32.06,-19,-32.06,-18,-32.06,-17,-32.06,-16,-32.06,-15,-32.06,-14,-32.06,-13,-32.06,-12,-32.06,-11,-32.06,-10,-32.06,-9,-32.06,-8,-32.06,-7,-32.06,-6,-32.06,-5,-32.06,-4,-32.06,-3,-32.06,-2,-32.06,-1,-32.06,-345,-31.06,-344,-31.06,-343,-31.06,-342,-31.06,-341,-31.06,-340,-31.06,-339,-31.06,-338,-31.06,-337,-31.06,-336,-31.06,-335,-31.06,-334,-31.06,-333,-31.06,-332,-31.06,-331,-31.06,-330,-31.06,-329,-31.06,-328,-31.06,-327,-31.06,-326,-31.06,-325,-31.06,-324,-31.06,-323,-31.06,-322,-31.06,-321,-31.06,-320,-31.06,-319,-31.06,-318,-31.06,-317,-31.06,-316,-31.06,-315,-31.06,-314,-31.06,-313,-31.06,-312,-31.06,-311,-31.06,-310,-31.06,-309,-31.06,-308,-31.06,-307,-31.06,-306,-31.06,-305,-31.06,-304,-31.06,-303,-31.06,-302,-31.06,-301,-31.06,-300,-31.06,-299,-31.06,-298,-31.06,-297,-31.06,-296,-31.06,-295,-31.06,-294,-31.06,-293,-31.06,-292,-31.06,-291,-31.06,-290,-31.06,-289,-31.06,-288,-31.06,-287,-31.06,-286,-31.06,-285,-31.06,-284,-31.06,-283,-31.06,-282,-31.06,-281,-31.06,-280,-31.06,-279,-31.06,-278,-31.06,-277,-31.06,-276,-31.06,-275,-31.06,-274,-31.06,-248,-31.06,-247,-31.06,-246,-31.06,-230,-31.06,-229,-31.06,-228,-31.06,-227,-31.06,-226,-31.06,-225,-31.06,-224,-31.06,-223,-31.06,-172,-31.06,-171,-31.06,-170,-31.06,-169,-31.06,-168,-31.06,-167,-31.06,-166,-31.06,-165,-31.06,-164,-31.06,-158,-31.06,-157,-31.06,-156,-31.06,-155,-31.06,-154,-31.06,-153,-31.06,-152,-31.06,-151,-31.06,-150,-31.06,-149,-31.06,-148,-31.06,-147,-31.06,-146,-31.06,-145,-31.06,-144,-31.06,-143,-31.06,-142,-31.06,-141,-31.06,-140,-31.06,-139,-31.06,-138,-31.06,-137,-31.06,-136,-31.06,-135,-31.06,-134,-31.06,-133,-31.06,-132,-31.06,-131,-31.06,-130,-31.06,-129,-31.06,-128,-31.06,-127,-31.06,-126,-31.06,-125,-31.06,-124,-31.06,-123,-31.06,-122,-31.06,-121,-31.06,-120,-31.06,-119,-31.06,-118,-31.06,-117,-31.06,-116,-31.06,-115,-31.06,-114,-31.06,-113,-31.06,-112,-31.06,-111,-31.06,-110,-31.06,-109,-31.06,-108,-31.06,-107,-31.06,-106,-31.06,-105,-31.06,-104,-31.06,-103,-31.06,-102,-31.06,-101,-31.06,-100,-31.06,-99,-31.06,-98,-31.06,-97,-31.06,-96,-31.06,-95,-31.06,-94,-31.06,-93,-31.06,-92,-31.06,-91,-31.06,-90,-31.06,-89,-31.06,-88,-31.06,-87,-31.06,-86,-31.06,-85,-31.06,-84,-31.06,-83,-31.06,-82,-31.06,-81,-31.06,-80,-31.06,-79,-31.06,-78,-31.06,-77,-31.06,-76,-31.06,-75,-31.06,-74,-31.06,-73,-31.06,-72,-31.06,-71,-31.06,-70,-31.06,-69,-31.06,-68,-31.06,-67,-31.06,-66,-31.06,-65,-31.06,-64,-31.06,-63,-31.06,-62,-31.06,-61,-31.06,-60,-31.06,-59,-31.06,-58,-31.06,-57,-31.06,-56,-31.06,-55,-31.06,-54,-31.06,-53,-31.06,-52,-31.06,-51,-31.06,-50,-31.06,-49,-31.06,-48,-31.06,-47,-31.06,-46,-31.06,-45,-31.06,-44,-31.06,-43,-31.06,-42,-31.06,-41,-31.06,-40,-31.06,-39,-31.06,-38,-31.06,-37,-31.06,-36,-31.06,-35,-31.06,-34,-31.06,-33,-31.06,-32,-31.06,-31,-31.06,-30,-31.06,-29,-31.06,-28,-31.06,-27,-31.06,-26,-31.06,-25,-31.06,-24,-31.06,-23,-31.06,-22,-31.06,-21,-31.06,-20,-31.06,-19,-31.06,-18,-31.06,-17,-31.06,-16,-31.06,-15,-31.06,-14,-31.06,-13,-31.06,-12,-31.06,-11,-31.06,-10,-31.06,-9,-31.06,-8,-31.06,-7,-31.06,-6,-31.06,-5,-31.06,-345,-30.06,-344,-30.06,-343,-30.06,-342,-30.06,-341,-30.06,-340,-30.06,-339,-30.06,-338,-30.06,-337,-30.06,-336,-30.06,-335,-30.06,-334,-30.06,-333,-30.06,-332,-30.06,-331,-30.06,-330,-30.06,-329,-30.06,-328,-30.06,-327,-30.06,-326,-30.06,-325,-30.06,-324,-30.06,-323,-30.06,-322,-30.06,-321,-30.06,-320,-30.06,-319,-30.06,-318,-30.06,-317,-30.06,-316,-30.06,-315,-30.06,-314,-30.06,-313,-30.06,-312,-30.06,-311,-30.06,-310,-30.06,-309,-30.06,-308,-30.06,-307,-30.06,-306,-30.06,-305,-30.06,-304,-30.06,-303,-30.06,-302,-30.06,-301,-30.06,-300,-30.06,-299,-30.06,-298,-30.06,-297,-30.06,-296,-30.06,-295,-30.06,-294,-30.06,-293,-30.06,-292,-30.06,-291,-30.06,-290,-30.06,-289,-30.06,-288,-30.06,-287,-30.06,-286,-30.06,-285,-30.06,-284,-30.06,-283,-30.06,-282,-30.06,-281,-30.06,-280,-30.06,-279,-30.06,-278,-30.06,-277,-30.06,-276,-30.06,-275,-30.06,-258,-30.06,-257,-30.06,-256,-30.06,-255,-30.06,-254,-30.06,-253,-30.06,-228,-30.06,-227,-30.06,-226,-30.06,-225,-30.06,-224,-30.06,-174,-30.06,-173,-30.06,-172,-30.06,-171,-30.06,-170,-30.06,-169,-30.06,-168,-30.06,-167,-30.06,-166,-30.06,-165,-30.06,-164,-30.06,-158,-30.06,-157,-30.06,-156,-30.06,-155,-30.06,-154,-30.06,-153,-30.06,-152,-30.06,-151,-30.06,-147,-30.06,-146,-30.06,-145,-30.06,-144,-30.06,-143,-30.06,-142,-30.06,-141,-30.06,-140,-30.06,-139,-30.06,-138,-30.06,-137,-30.06,-136,-30.06,-135,-30.06,-134,-30.06,-133,-30.06,-132,-30.06,-131,-30.06,-130,-30.06,-129,-30.06,-128,-30.06,-127,-30.06,-126,-30.06,-125,-30.06,-124,-30.06,-123,-30.06,-122,-30.06,-121,-30.06,-120,-30.06,-119,-30.06,-118,-30.06,-117,-30.06,-116,-30.06,-115,-30.06,-114,-30.06,-113,-30.06,-112,-30.06,-111,-30.06,-110,-30.06,-109,-30.06,-108,-30.06,-107,-30.06,-106,-30.06,-105,-30.06,-104,-30.06,-103,-30.06,-102,-30.06,-101,-30.06,-100,-30.06,-99,-30.06,-98,-30.06,-97,-30.06,-96,-30.06,-95,-30.06,-94,-30.06,-93,-30.06,-92,-30.06,-91,-30.06,-90,-30.06,-89,-30.06,-88,-30.06,-87,-30.06,-86,-30.06,-85,-30.06,-84,-30.06,-83,-30.06,-82,-30.06,-81,-30.06,-80,-30.06,-79,-30.06,-78,-30.06,-77,-30.06,-76,-30.06,-75,-30.06,-74,-30.06,-73,-30.06,-72,-30.06,-71,-30.06,-70,-30.06,-69,-30.06,-68,-30.06,-67,-30.06,-66,-30.06,-65,-30.06,-64,-30.06,-63,-30.06,-62,-30.06,-61,-30.06,-60,-30.06,-59,-30.06,-58,-30.06,-57,-30.06,-56,-30.06,-55,-30.06,-54,-30.06,-53,-30.06,-52,-30.06,-51,-30.06,-50,-30.06,-49,-30.06,-48,-30.06,-47,-30.06,-46,-30.06,-45,-30.06,-44,-30.06,-43,-30.06,-42,-30.06,-41,-30.06,-40,-30.06,-39,-30.06,-38,-30.06,-37,-30.06,-36,-30.06,-35,-30.06,-34,-30.06,-33,-30.06,-32,-30.06,-31,-30.06,-30,-30.06,-29,-30.06,-28,-30.06,-27,-30.06,-26,-30.06,-25,-30.06,-24,-30.06,-20,-30.06,-19,-30.06,-18,-30.06,-17,-30.06,-16,-30.06,-15,-30.06,-14,-30.06,-13,-30.06,-12,-30.06,-11,-30.06,-10,-30.06,-9,-30.06,-8,-30.06,-344,-29.06,-343,-29.06,-342,-29.06,-341,-29.06,-340,-29.06,-339,-29.06,-338,-29.06,-337,-29.06,-336,-29.06,-335,-29.06,-334,-29.06,-333,-29.06,-332,-29.06,-331,-29.06,-330,-29.06,-329,-29.06,-328,-29.06,-325,-29.06,-324,-29.06,-323,-29.06,-322,-29.06,-321,-29.06,-320,-29.06,-319,-29.06,-318,-29.06,-317,-29.06,-316,-29.06,-315,-29.06,-314,-29.06,-313,-29.06,-312,-29.06,-311,-29.06,-310,-29.06,-309,-29.06,-308,-29.06,-307,-29.06,-306,-29.06,-305,-29.06,-304,-29.06,-303,-29.06,-302,-29.06,-301,-29.06,-300,-29.06,-299,-29.06,-298,-29.06,-297,-29.06,-296,-29.06,-295,-29.06,-294,-29.06,-293,-29.06,-292,-29.06,-291,-29.06,-290,-29.06,-289,-29.06,-288,-29.06,-287,-29.06,-286,-29.06,-285,-29.06,-284,-29.06,-283,-29.06,-282,-29.06,-281,-29.06,-280,-29.06,-279,-29.06,-278,-29.06,-277,-29.06,-276,-29.06,-258,-29.06,-257,-29.06,-256,-29.06,-255,-29.06,-254,-29.06,-253,-29.06,-252,-29.06,-251,-29.06,-225,-29.06,-174,-29.06,-173,-29.06,-172,-29.06,-171,-29.06,-170,-29.06,-169,-29.06,-168,-29.06,-167,-29.06,-166,-29.06,-165,-29.06,-164,-29.06,-157,-29.06,-147,-29.06,-146,-29.06,-145,-29.06,-144,-29.06,-143,-29.06,-142,-29.06,-141,-29.06,-140,-29.06,-139,-29.06,-138,-29.06,-137,-29.06,-136,-29.06,-135,-29.06,-134,-29.06,-133,-29.06,-132,-29.06,-131,-29.06,-130,-29.06,-129,-29.06,-128,-29.06,-127,-29.06,-126,-29.06,-125,-29.06,-124,-29.06,-123,-29.06,-122,-29.06,-121,-29.06,-120,-29.06,-119,-29.06,-118,-29.06,-117,-29.06,-116,-29.06,-115,-29.06,-114,-29.06,-113,-29.06,-112,-29.06,-111,-29.06,-110,-29.06,-109,-29.06,-108,-29.06,-107,-29.06,-106,-29.06,-105,-29.06,-104,-29.06,-103,-29.06,-102,-29.06,-101,-29.06,-100,-29.06,-99,-29.06,-98,-29.06,-97,-29.06,-96,-29.06,-95,-29.06,-94,-29.06,-93,-29.06,-92,-29.06,-91,-29.06,-90,-29.06,-89,-29.06,-88,-29.06,-87,-29.06,-86,-29.06,-85,-29.06,-84,-29.06,-83,-29.06,-82,-29.06,-81,-29.06,-80,-29.06,-79,-29.06,-78,-29.06,-77,-29.06,-76,-29.06,-75,-29.06,-74,-29.06,-73,-29.06,-72,-29.06,-71,-29.06,-70,-29.06,-69,-29.06,-68,-29.06,-67,-29.06,-66,-29.06,-65,-29.06,-64,-29.06,-63,-29.06,-62,-29.06,-61,-29.06,-60,-29.06,-59,-29.06,-58,-29.06,-57,-29.06,-56,-29.06,-55,-29.06,-54,-29.06,-53,-29.06,-52,-29.06,-51,-29.06,-50,-29.06,-49,-29.06,-48,-29.06,-47,-29.06,-46,-29.06,-45,-29.06,-44,-29.06,-43,-29.06,-42,-29.06,-41,-29.06,-40,-29.06,-39,-29.06,-38,-29.06,-37,-29.06,-36,-29.06,-35,-29.06,-34,-29.06,-33,-29.06,-32,-29.06,-31,-29.06,-30,-29.06,-29,-29.06,-28,-29.06,-27,-29.06,-26,-29.06,-18,-29.06,-17,-29.06,-16,-29.06,-15,-29.06,-14,-29.06,-342,-28.06,-341,-28.06,-340,-28.06,-339,-28.06,-338,-28.06,-337,-28.06,-336,-28.06,-335,-28.06,-334,-28.06,-333,-28.06,-331,-28.06,-329,-28.06,-318,-28.06,-317,-28.06,-316,-28.06,-315,-28.06,-314,-28.06,-313,-28.06,-312,-28.06,-311,-28.06,-310,-28.06,-309,-28.06,-308,-28.06,-307,-28.06,-306,-28.06,-305,-28.06,-304,-28.06,-303,-28.06,-302,-28.06,-301,-28.06,-300,-28.06,-299,-28.06,-298,-28.06,-297,-28.06,-296,-28.06,-295,-28.06,-294,-28.06,-293,-28.06,-292,-28.06,-291,-28.06,-290,-28.06,-289,-28.06,-288,-28.06,-287,-28.06,-286,-28.06,-285,-28.06,-284,-28.06,-283,-28.06,-282,-28.06,-281,-28.06,-280,-28.06,-279,-28.06,-278,-28.06,-277,-28.06,-276,-28.06,-258,-28.06,-257,-28.06,-256,-28.06,-255,-28.06,-254,-28.06,-253,-28.06,-252,-28.06,-251,-28.06,-245,-28.06,-174,-28.06,-173,-28.06,-172,-28.06,-171,-28.06,-169,-28.06,-168,-28.06,-167,-28.06,-166,-28.06,-165,-28.06,-164,-28.06,-163,-28.06,-150,-28.06,-149,-28.06,-148,-28.06,-147,-28.06,-146,-28.06,-145,-28.06,-144,-28.06,-143,-28.06,-142,-28.06,-141,-28.06,-140,-28.06,-139,-28.06,-138,-28.06,-137,-28.06,-136,-28.06,-135,-28.06,-134,-28.06,-133,-28.06,-132,-28.06,-131,-28.06,-130,-28.06,-129,-28.06,-128,-28.06,-127,-28.06,-126,-28.06,-125,-28.06,-124,-28.06,-123,-28.06,-122,-28.06,-121,-28.06,-120,-28.06,-119,-28.06,-118,-28.06,-117,-28.06,-116,-28.06,-115,-28.06,-114,-28.06,-113,-28.06,-112,-28.06,-111,-28.06,-110,-28.06,-109,-28.06,-108,-28.06,-107,-28.06,-106,-28.06,-105,-28.06,-104,-28.06,-103,-28.06,-102,-28.06,-101,-28.06,-100,-28.06,-99,-28.06,-98,-28.06,-97,-28.06,-96,-28.06,-95,-28.06,-94,-28.06,-93,-28.06,-92,-28.06,-91,-28.06,-90,-28.06,-89,-28.06,-88,-28.06,-87,-28.06,-86,-28.06,-85,-28.06,-84,-28.06,-83,-28.06,-82,-28.06,-81,-28.06,-80,-28.06,-79,-28.06,-78,-28.06,-77,-28.06,-76,-28.06,-75,-28.06,-74,-28.06,-73,-28.06,-72,-28.06,-71,-28.06,-70,-28.06,-69,-28.06,-68,-28.06,-67,-28.06,-66,-28.06,-65,-28.06,-64,-28.06,-63,-28.06,-62,-28.06,-61,-28.06,-60,-28.06,-59,-28.06,-58,-28.06,-57,-28.06,-56,-28.06,-55,-28.06,-54,-28.06,-53,-28.06,-52,-28.06,-51,-28.06,-50,-28.06,-49,-28.06,-48,-28.06,-47,-28.06,-46,-28.06,-45,-28.06,-44,-28.06,-43,-28.06,-42,-28.06,-41,-28.06,-40,-28.06,-39,-28.06,-38,-28.06,-28,-28.06,-19,-28.06,-18,-28.06,-337,-27.06,-336,-27.06,-335,-27.06,-334,-27.06,-317,-27.06,-316,-27.06,-315,-27.06,-314,-27.06,-313,-27.06,-312,-27.06,-311,-27.06,-310,-27.06,-309,-27.06,-308,-27.06,-307,-27.06,-306,-27.06,-305,-27.06,-304,-27.06,-303,-27.06,-302,-27.06,-301,-27.06,-300,-27.06,-299,-27.06,-298,-27.06,-297,-27.06,-296,-27.06,-295,-27.06,-294,-27.06,-293,-27.06,-292,-27.06,-291,-27.06,-290,-27.06,-289,-27.06,-288,-27.06,-287,-27.06,-286,-27.06,-285,-27.06,-284,-27.06,-283,-27.06,-282,-27.06,-281,-27.06,-280,-27.06,-279,-27.06,-278,-27.06,-277,-27.06,-276,-27.06,-275,-27.06,-257,-27.06,-256,-27.06,-255,-27.06,-254,-27.06,-253,-27.06,-252,-27.06,-251,-27.06,-250,-27.06,-246,-27.06,-245,-27.06,-244,-27.06,-168,-27.06,-167,-27.06,-166,-27.06,-165,-27.06,-155,-27.06,-154,-27.06,-153,-27.06,-152,-27.06,-151,-27.06,-150,-27.06,-149,-27.06,-148,-27.06,-147,-27.06,-146,-27.06,-145,-27.06,-144,-27.06,-143,-27.06,-142,-27.06,-141,-27.06,-140,-27.06,-139,-27.06,-138,-27.06,-137,-27.06,-136,-27.06,-135,-27.06,-134,-27.06,-133,-27.06,-132,-27.06,-131,-27.06,-130,-27.06,-129,-27.06,-128,-27.06,-127,-27.06,-126,-27.06,-125,-27.06,-124,-27.06,-123,-27.06,-122,-27.06,-121,-27.06,-120,-27.06,-119,-27.06,-118,-27.06,-117,-27.06,-116,-27.06,-115,-27.06,-114,-27.06,-113,-27.06,-112,-27.06,-111,-27.06,-110,-27.06,-109,-27.06,-108,-27.06,-107,-27.06,-106,-27.06,-105,-27.06,-104,-27.06,-103,-27.06,-102,-27.06,-101,-27.06,-100,-27.06,-99,-27.06,-98,-27.06,-97,-27.06,-96,-27.06,-95,-27.06,-94,-27.06,-93,-27.06,-92,-27.06,-91,-27.06,-90,-27.06,-89,-27.06,-88,-27.06,-87,-27.06,-86,-27.06,-85,-27.06,-84,-27.06,-83,-27.06,-82,-27.06,-81,-27.06,-80,-27.06,-79,-27.06,-78,-27.06,-77,-27.06,-76,-27.06,-75,-27.06,-74,-27.06,-73,-27.06,-72,-27.06,-71,-27.06,-70,-27.06,-69,-27.06,-68,-27.06,-67,-27.06,-66,-27.06,-65,-27.06,-64,-27.06,-63,-27.06,-62,-27.06,-61,-27.06,-60,-27.06,-59,-27.06,-58,-27.06,-57,-27.06,-56,-27.06,-55,-27.06,-54,-27.06,-53,-27.06,-52,-27.06,-51,-27.06,-50,-27.06,-49,-27.06,-48,-27.06,-47,-27.06,-46,-27.06,-45,-27.06,-44,-27.06,-43,-27.06,-42,-27.06,-41,-27.06,-40,-27.06,-20,-27.06,-19,-27.06,-18,-27.06,-335,-26.06,-334,-26.06,-316,-26.06,-315,-26.06,-314,-26.06,-313,-26.06,-312,-26.06,-311,-26.06,-310,-26.06,-309,-26.06,-308,-26.06,-307,-26.06,-306,-26.06,-305,-26.06,-304,-26.06,-303,-26.06,-302,-26.06,-301,-26.06,-300,-26.06,-299,-26.06,-298,-26.06,-297,-26.06,-296,-26.06,-295,-26.06,-294,-26.06,-293,-26.06,-292,-26.06,-291,-26.06,-290,-26.06,-289,-26.06,-288,-26.06,-287,-26.06,-286,-26.06,-285,-26.06,-284,-26.06,-283,-26.06,-282,-26.06,-281,-26.06,-280,-26.06,-279,-26.06,-278,-26.06,-277,-26.06,-276,-26.06,-275,-26.06,-274,-26.06,-256,-26.06,-255,-26.06,-254,-26.06,-253,-26.06,-252,-26.06,-251,-26.06,-250,-26.06,-249,-26.06,-248,-26.06,-247,-26.06,-246,-26.06,-245,-26.06,-244,-26.06,-243,-26.06,-185,-26.06,-167,-26.06,-166,-26.06,-165,-26.06,-155,-26.06,-154,-26.06,-153,-26.06,-152,-26.06,-151,-26.06,-150,-26.06,-149,-26.06,-148,-26.06,-147,-26.06,-146,-26.06,-145,-26.06,-144,-26.06,-143,-26.06,-142,-26.06,-141,-26.06,-140,-26.06,-139,-26.06,-138,-26.06,-137,-26.06,-136,-26.06,-135,-26.06,-134,-26.06,-133,-26.06,-132,-26.06,-131,-26.06,-130,-26.06,-129,-26.06,-128,-26.06,-127,-26.06,-126,-26.06,-125,-26.06,-124,-26.06,-123,-26.06,-122,-26.06,-121,-26.06,-120,-26.06,-119,-26.06,-118,-26.06,-117,-26.06,-116,-26.06,-115,-26.06,-114,-26.06,-113,-26.06,-112,-26.06,-111,-26.06,-110,-26.06,-109,-26.06,-108,-26.06,-107,-26.06,-106,-26.06,-105,-26.06,-104,-26.06,-103,-26.06,-102,-26.06,-101,-26.06,-100,-26.06,-99,-26.06,-98,-26.06,-97,-26.06,-96,-26.06,-95,-26.06,-94,-26.06,-93,-26.06,-92,-26.06,-91,-26.06,-90,-26.06,-89,-26.06,-88,-26.06,-87,-26.06,-86,-26.06,-85,-26.06,-84,-26.06,-83,-26.06,-82,-26.06,-81,-26.06,-80,-26.06,-79,-26.06,-78,-26.06,-77,-26.06,-76,-26.06,-75,-26.06,-74,-26.06,-73,-26.06,-72,-26.06,-71,-26.06,-70,-26.06,-69,-26.06,-68,-26.06,-67,-26.06,-66,-26.06,-65,-26.06,-64,-26.06,-63,-26.06,-62,-26.06,-61,-26.06,-60,-26.06,-59,-26.06,-58,-26.06,-57,-26.06,-56,-26.06,-55,-26.06,-54,-26.06,-53,-26.06,-52,-26.06,-51,-26.06,-50,-26.06,-49,-26.06,-48,-26.06,-47,-26.06,-46,-26.06,-45,-26.06,-44,-26.06,-43,-26.06,-42,-26.06,-22,-26.06,-21,-26.06,-20,-26.06,-19,-26.06,-18,-26.06,-315,-25.06,-314,-25.06,-313,-25.06,-312,-25.06,-311,-25.06,-310,-25.06,-309,-25.06,-308,-25.06,-307,-25.06,-306,-25.06,-305,-25.06,-304,-25.06,-303,-25.06,-302,-25.06,-301,-25.06,-300,-25.06,-299,-25.06,-298,-25.06,-297,-25.06,-296,-25.06,-295,-25.06,-294,-25.06,-293,-25.06,-292,-25.06,-291,-25.06,-290,-25.06,-289,-25.06,-288,-25.06,-287,-25.06,-286,-25.06,-285,-25.06,-284,-25.06,-283,-25.06,-282,-25.06,-281,-25.06,-280,-25.06,-279,-25.06,-278,-25.06,-277,-25.06,-276,-25.06,-275,-25.06,-274,-25.06,-273,-25.06,-272,-25.06,-271,-25.06,-270,-25.06,-269,-25.06,-256,-25.06,-255,-25.06,-254,-25.06,-253,-25.06,-252,-25.06,-251,-25.06,-250,-25.06,-249,-25.06,-248,-25.06,-247,-25.06,-246,-25.06,-245,-25.06,-244,-25.06,-243,-25.06,-242,-25.06,-185,-25.06,-184,-25.06,-171,-25.06,-167,-25.06,-166,-25.06,-158,-25.06,-157,-25.06,-156,-25.06,-155,-25.06,-154,-25.06,-153,-25.06,-152,-25.06,-151,-25.06,-150,-25.06,-149,-25.06,-148,-25.06,-147,-25.06,-146,-25.06,-145,-25.06,-144,-25.06,-143,-25.06,-142,-25.06,-141,-25.06,-140,-25.06,-139,-25.06,-138,-25.06,-137,-25.06,-136,-25.06,-135,-25.06,-134,-25.06,-133,-25.06,-132,-25.06,-131,-25.06,-130,-25.06,-129,-25.06,-128,-25.06,-127,-25.06,-126,-25.06,-125,-25.06,-124,-25.06,-123,-25.06,-122,-25.06,-121,-25.06,-120,-25.06,-119,-25.06,-118,-25.06,-117,-25.06,-116,-25.06,-115,-25.06,-114,-25.06,-113,-25.06,-112,-25.06,-111,-25.06,-110,-25.06,-109,-25.06,-108,-25.06,-107,-25.06,-106,-25.06,-105,-25.06,-104,-25.06,-103,-25.06,-102,-25.06,-101,-25.06,-100,-25.06,-99,-25.06,-98,-25.06,-97,-25.06,-96,-25.06,-95,-25.06,-94,-25.06,-93,-25.06,-92,-25.06,-91,-25.06,-90,-25.06,-89,-25.06,-88,-25.06,-87,-25.06,-86,-25.06,-85,-25.06,-84,-25.06,-83,-25.06,-82,-25.06,-81,-25.06,-80,-25.06,-79,-25.06,-78,-25.06,-77,-25.06,-76,-25.06,-75,-25.06,-74,-25.06,-73,-25.06,-72,-25.06,-71,-25.06,-70,-25.06,-69,-25.06,-68,-25.06,-67,-25.06,-66,-25.06,-65,-25.06,-64,-25.06,-63,-25.06,-62,-25.06,-61,-25.06,-60,-25.06,-59,-25.06,-58,-25.06,-57,-25.06,-56,-25.06,-55,-25.06,-54,-25.06,-53,-25.06,-52,-25.06,-51,-25.06,-50,-25.06,-49,-25.06,-48,-25.06,-47,-25.06,-46,-25.06,-45,-25.06,-44,-25.06,-43,-25.06,-24,-25.06,-23,-25.06,-22,-25.06,-21,-25.06,-20,-25.06,-19,-25.06,-340,-24.06,-314,-24.06,-313,-24.06,-312,-24.06,-311,-24.06,-310,-24.06,-309,-24.06,-308,-24.06,-307,-24.06,-306,-24.06,-305,-24.06,-304,-24.06,-303,-24.06,-302,-24.06,-301,-24.06,-300,-24.06,-299,-24.06,-298,-24.06,-297,-24.06,-296,-24.06,-295,-24.06,-294,-24.06,-293,-24.06,-292,-24.06,-291,-24.06,-290,-24.06,-289,-24.06,-288,-24.06,-287,-24.06,-286,-24.06,-285,-24.06,-284,-24.06,-283,-24.06,-282,-24.06,-281,-24.06,-280,-24.06,-279,-24.06,-278,-24.06,-277,-24.06,-276,-24.06,-275,-24.06,-274,-24.06,-273,-24.06,-272,-24.06,-271,-24.06,-270,-24.06,-269,-24.06,-268,-24.06,-267,-24.06,-257,-24.06,-256,-24.06,-255,-24.06,-254,-24.06,-253,-24.06,-252,-24.06,-251,-24.06,-250,-24.06,-249,-24.06,-248,-24.06,-247,-24.06,-246,-24.06,-245,-24.06,-244,-24.06,-243,-24.06,-242,-24.06,-184,-24.06,-183,-24.06,-172,-24.06,-171,-24.06,-158,-24.06,-157,-24.06,-156,-24.06,-155,-24.06,-154,-24.06,-153,-24.06,-152,-24.06,-151,-24.06,-150,-24.06,-149,-24.06,-148,-24.06,-147,-24.06,-146,-24.06,-145,-24.06,-144,-24.06,-143,-24.06,-142,-24.06,-141,-24.06,-140,-24.06,-139,-24.06,-138,-24.06,-137,-24.06,-136,-24.06,-135,-24.06,-134,-24.06,-133,-24.06,-132,-24.06,-131,-24.06,-130,-24.06,-129,-24.06,-128,-24.06,-127,-24.06,-126,-24.06,-125,-24.06,-124,-24.06,-123,-24.06,-122,-24.06,-121,-24.06,-120,-24.06,-119,-24.06,-118,-24.06,-117,-24.06,-116,-24.06,-115,-24.06,-114,-24.06,-113,-24.06,-112,-24.06,-111,-24.06,-110,-24.06,-109,-24.06,-108,-24.06,-107,-24.06,-106,-24.06,-105,-24.06,-104,-24.06,-103,-24.06,-102,-24.06,-101,-24.06,-100,-24.06,-99,-24.06,-98,-24.06,-97,-24.06,-96,-24.06,-95,-24.06,-94,-24.06,-93,-24.06,-92,-24.06,-91,-24.06,-90,-24.06,-89,-24.06,-88,-24.06,-87,-24.06,-86,-24.06,-85,-24.06,-84,-24.06,-83,-24.06,-82,-24.06,-81,-24.06,-80,-24.06,-79,-24.06,-78,-24.06,-77,-24.06,-76,-24.06,-75,-24.06,-74,-24.06,-73,-24.06,-72,-24.06,-71,-24.06,-70,-24.06,-69,-24.06,-68,-24.06,-67,-24.06,-66,-24.06,-65,-24.06,-64,-24.06,-63,-24.06,-62,-24.06,-61,-24.06,-60,-24.06,-59,-24.06,-58,-24.06,-57,-24.06,-56,-24.06,-55,-24.06,-54,-24.06,-53,-24.06,-52,-24.06,-51,-24.06,-50,-24.06,-49,-24.06,-48,-24.06,-47,-24.06,-46,-24.06,-45,-24.06,-44,-24.06,-24,-24.06,-23,-24.06,-22,-24.06,-21,-24.06,-20,-24.06,-19,-24.06,-344,-23.06,-313,-23.06,-312,-23.06,-311,-23.06,-310,-23.06,-309,-23.06,-308,-23.06,-307,-23.06,-306,-23.06,-305,-23.06,-304,-23.06,-303,-23.06,-302,-23.06,-301,-23.06,-300,-23.06,-299,-23.06,-298,-23.06,-297,-23.06,-296,-23.06,-295,-23.06,-294,-23.06,-293,-23.06,-292,-23.06,-291,-23.06,-290,-23.06,-289,-23.06,-288,-23.06,-287,-23.06,-286,-23.06,-285,-23.06,-284,-23.06,-283,-23.06,-282,-23.06,-281,-23.06,-280,-23.06,-279,-23.06,-278,-23.06,-277,-23.06,-276,-23.06,-275,-23.06,-274,-23.06,-273,-23.06,-272,-23.06,-271,-23.06,-270,-23.06,-269,-23.06,-268,-23.06,-267,-23.06,-266,-23.06,-265,-23.06,-264,-23.06,-263,-23.06,-259,-23.06,-258,-23.06,-257,-23.06,-256,-23.06,-255,-23.06,-254,-23.06,-253,-23.06,-252,-23.06,-251,-23.06,-250,-23.06,-249,-23.06,-248,-23.06,-247,-23.06,-246,-23.06,-245,-23.06,-244,-23.06,-243,-23.06,-242,-23.06,-241,-23.06,-240,-23.06,-239,-23.06,-188,-23.06,-187,-23.06,-183,-23.06,-182,-23.06,-171,-23.06,-170,-23.06,-160,-23.06,-159,-23.06,-158,-23.06,-157,-23.06,-156,-23.06,-155,-23.06,-154,-23.06,-153,-23.06,-152,-23.06,-151,-23.06,-150,-23.06,-149,-23.06,-148,-23.06,-147,-23.06,-146,-23.06,-145,-23.06,-144,-23.06,-143,-23.06,-142,-23.06,-141,-23.06,-140,-23.06,-139,-23.06,-138,-23.06,-137,-23.06,-136,-23.06,-135,-23.06,-134,-23.06,-133,-23.06,-132,-23.06,-131,-23.06,-130,-23.06,-129,-23.06,-128,-23.06,-127,-23.06,-126,-23.06,-125,-23.06,-124,-23.06,-123,-23.06,-122,-23.06,-121,-23.06,-120,-23.06,-119,-23.06,-118,-23.06,-117,-23.06,-116,-23.06,-115,-23.06,-114,-23.06,-113,-23.06,-112,-23.06,-111,-23.06,-110,-23.06,-109,-23.06,-108,-23.06,-107,-23.06,-106,-23.06,-105,-23.06,-104,-23.06,-103,-23.06,-102,-23.06,-101,-23.06,-100,-23.06,-99,-23.06,-98,-23.06,-97,-23.06,-96,-23.06,-95,-23.06,-94,-23.06,-93,-23.06,-92,-23.06,-91,-23.06,-90,-23.06,-89,-23.06,-88,-23.06,-87,-23.06,-86,-23.06,-85,-23.06,-84,-23.06,-83,-23.06,-82,-23.06,-81,-23.06,-80,-23.06,-79,-23.06,-78,-23.06,-77,-23.06,-76,-23.06,-75,-23.06,-74,-23.06,-73,-23.06,-72,-23.06,-71,-23.06,-70,-23.06,-69,-23.06,-68,-23.06,-67,-23.06,-66,-23.06,-65,-23.06,-64,-23.06,-63,-23.06,-62,-23.06,-61,-23.06,-60,-23.06,-59,-23.06,-58,-23.06,-57,-23.06,-56,-23.06,-55,-23.06,-54,-23.06,-53,-23.06,-52,-23.06,-51,-23.06,-50,-23.06,-49,-23.06,-48,-23.06,-47,-23.06,-46,-23.06,-45,-23.06,-44,-23.06,-43,-23.06,-24,-23.06,-23,-23.06,-22,-23.06,-21,-23.06,-312,-22.06,-311,-22.06,-310,-22.06,-309,-22.06,-308,-22.06,-307,-22.06,-306,-22.06,-305,-22.06,-304,-22.06,-303,-22.06,-302,-22.06,-301,-22.06,-300,-22.06,-299,-22.06,-298,-22.06,-297,-22.06,-296,-22.06,-295,-22.06,-294,-22.06,-293,-22.06,-292,-22.06,-291,-22.06,-290,-22.06,-289,-22.06,-288,-22.06,-287,-22.06,-286,-22.06,-285,-22.06,-284,-22.06,-283,-22.06,-282,-22.06,-281,-22.06,-280,-22.06,-279,-22.06,-278,-22.06,-277,-22.06,-276,-22.06,-275,-22.06,-274,-22.06,-273,-22.06,-272,-22.06,-271,-22.06,-270,-22.06,-269,-22.06,-268,-22.06,-267,-22.06,-266,-22.06,-265,-22.06,-264,-22.06,-263,-22.06,-259,-22.06,-258,-22.06,-257,-22.06,-256,-22.06,-255,-22.06,-254,-22.06,-253,-22.06,-252,-22.06,-251,-22.06,-250,-22.06,-249,-22.06,-248,-22.06,-247,-22.06,-246,-22.06,-245,-22.06,-244,-22.06,-243,-22.06,-242,-22.06,-241,-22.06,-240,-22.06,-239,-22.06,-238,-22.06,-189,-22.06,-188,-22.06,-183,-22.06,-182,-22.06,-181,-22.06,-172,-22.06,-171,-22.06,-170,-22.06,-169,-22.06,-168,-22.06,-167,-22.06,-166,-22.06,-165,-22.06,-164,-22.06,-163,-22.06,-162,-22.06,-161,-22.06,-160,-22.06,-159,-22.06,-158,-22.06,-157,-22.06,-156,-22.06,-155,-22.06,-154,-22.06,-153,-22.06,-152,-22.06,-151,-22.06,-150,-22.06,-149,-22.06,-148,-22.06,-147,-22.06,-146,-22.06,-145,-22.06,-144,-22.06,-143,-22.06,-142,-22.06,-141,-22.06,-140,-22.06,-139,-22.06,-138,-22.06,-137,-22.06,-136,-22.06,-135,-22.06,-134,-22.06,-133,-22.06,-132,-22.06,-131,-22.06,-130,-22.06,-129,-22.06,-128,-22.06,-127,-22.06,-126,-22.06,-125,-22.06,-124,-22.06,-123,-22.06,-122,-22.06,-121,-22.06,-120,-22.06,-119,-22.06,-118,-22.06,-117,-22.06,-116,-22.06,-115,-22.06,-114,-22.06,-113,-22.06,-112,-22.06,-111,-22.06,-110,-22.06,-109,-22.06,-108,-22.06,-107,-22.06,-106,-22.06,-105,-22.06,-104,-22.06,-103,-22.06,-102,-22.06,-101,-22.06,-100,-22.06,-99,-22.06,-98,-22.06,-97,-22.06,-96,-22.06,-95,-22.06,-94,-22.06,-93,-22.06,-92,-22.06,-91,-22.06,-90,-22.06,-89,-22.06,-88,-22.06,-87,-22.06,-86,-22.06,-85,-22.06,-84,-22.06,-83,-22.06,-82,-22.06,-81,-22.06,-80,-22.06,-79,-22.06,-78,-22.06,-77,-22.06,-76,-22.06,-75,-22.06,-74,-22.06,-73,-22.06,-72,-22.06,-71,-22.06,-70,-22.06,-69,-22.06,-68,-22.06,-67,-22.06,-66,-22.06,-65,-22.06,-64,-22.06,-63,-22.06,-62,-22.06,-61,-22.06,-60,-22.06,-59,-22.06,-58,-22.06,-57,-22.06,-56,-22.06,-55,-22.06,-54,-22.06,-53,-22.06,-52,-22.06,-51,-22.06,-50,-22.06,-49,-22.06,-48,-22.06,-47,-22.06,-46,-22.06,-45,-22.06,-44,-22.06,-43,-22.06,-42,-22.06,-41,-22.06,-40,-22.06,-39,-22.06,-38,-22.06,-24,-22.06,-23,-22.06,-22,-22.06,-311,-21.06,-310,-21.06,-309,-21.06,-308,-21.06,-307,-21.06,-306,-21.06,-305,-21.06,-304,-21.06,-303,-21.06,-302,-21.06,-301,-21.06,-300,-21.06,-299,-21.06,-298,-21.06,-297,-21.06,-296,-21.06,-295,-21.06,-294,-21.06,-293,-21.06,-292,-21.06,-291,-21.06,-290,-21.06,-289,-21.06,-288,-21.06,-287,-21.06,-286,-21.06,-285,-21.06,-284,-21.06,-283,-21.06,-282,-21.06,-281,-21.06,-280,-21.06,-279,-21.06,-278,-21.06,-277,-21.06,-276,-21.06,-275,-21.06,-274,-21.06,-273,-21.06,-272,-21.06,-271,-21.06,-270,-21.06,-269,-21.06,-268,-21.06,-267,-21.06,-266,-21.06,-265,-21.06,-264,-21.06,-263,-21.06,-262,-21.06,-261,-21.06,-259,-21.06,-258,-21.06,-257,-21.06,-256,-21.06,-255,-21.06,-254,-21.06,-253,-21.06,-252,-21.06,-251,-21.06,-250,-21.06,-249,-21.06,-248,-21.06,-247,-21.06,-246,-21.06,-245,-21.06,-244,-21.06,-243,-21.06,-242,-21.06,-241,-21.06,-240,-21.06,-239,-21.06,-238,-21.06,-237,-21.06,-189,-21.06,-188,-21.06,-184,-21.06,-183,-21.06,-182,-21.06,-181,-21.06,-180,-21.06,-175,-21.06,-174,-21.06,-173,-21.06,-172,-21.06,-171,-21.06,-170,-21.06,-169,-21.06,-168,-21.06,-167,-21.06,-166,-21.06,-165,-21.06,-164,-21.06,-163,-21.06,-162,-21.06,-161,-21.06,-160,-21.06,-159,-21.06,-158,-21.06,-157,-21.06,-156,-21.06,-155,-21.06,-154,-21.06,-153,-21.06,-152,-21.06,-151,-21.06,-150,-21.06,-149,-21.06,-148,-21.06,-147,-21.06,-146,-21.06,-145,-21.06,-144,-21.06,-143,-21.06,-142,-21.06,-141,-21.06,-140,-21.06,-139,-21.06,-138,-21.06,-137,-21.06,-136,-21.06,-135,-21.06,-134,-21.06,-133,-21.06,-132,-21.06,-131,-21.06,-130,-21.06,-129,-21.06,-128,-21.06,-127,-21.06,-126,-21.06,-125,-21.06,-124,-21.06,-123,-21.06,-122,-21.06,-121,-21.06,-120,-21.06,-119,-21.06,-118,-21.06,-117,-21.06,-116,-21.06,-115,-21.06,-114,-21.06,-113,-21.06,-112,-21.06,-111,-21.06,-110,-21.06,-109,-21.06,-108,-21.06,-107,-21.06,-106,-21.06,-105,-21.06,-104,-21.06,-103,-21.06,-102,-21.06,-101,-21.06,-100,-21.06,-99,-21.06,-98,-21.06,-97,-21.06,-96,-21.06,-95,-21.06,-94,-21.06,-93,-21.06,-92,-21.06,-91,-21.06,-90,-21.06,-89,-21.06,-88,-21.06,-87,-21.06,-86,-21.06,-85,-21.06,-84,-21.06,-83,-21.06,-82,-21.06,-81,-21.06,-80,-21.06,-79,-21.06,-78,-21.06,-77,-21.06,-76,-21.06,-75,-21.06,-74,-21.06,-73,-21.06,-72,-21.06,-71,-21.06,-70,-21.06,-69,-21.06,-68,-21.06,-67,-21.06,-66,-21.06,-65,-21.06,-64,-21.06,-63,-21.06,-62,-21.06,-61,-21.06,-60,-21.06,-59,-21.06,-58,-21.06,-57,-21.06,-56,-21.06,-55,-21.06,-54,-21.06,-53,-21.06,-52,-21.06,-51,-21.06,-50,-21.06,-49,-21.06,-48,-21.06,-47,-21.06,-46,-21.06,-45,-21.06,-44,-21.06,-43,-21.06,-42,-21.06,-41,-21.06,-40,-21.06,-39,-21.06,-38,-21.06,-23,-21.06,-309,-20.06,-308,-20.06,-307,-20.06,-306,-20.06,-305,-20.06,-304,-20.06,-303,-20.06,-302,-20.06,-301,-20.06,-300,-20.06,-299,-20.06,-298,-20.06,-297,-20.06,-296,-20.06,-295,-20.06,-294,-20.06,-293,-20.06,-292,-20.06,-291,-20.06,-290,-20.06,-289,-20.06,-288,-20.06,-287,-20.06,-286,-20.06,-285,-20.06,-284,-20.06,-283,-20.06,-282,-20.06,-281,-20.06,-280,-20.06,-279,-20.06,-278,-20.06,-277,-20.06,-276,-20.06,-275,-20.06,-274,-20.06,-273,-20.06,-272,-20.06,-271,-20.06,-270,-20.06,-269,-20.06,-268,-20.06,-267,-20.06,-266,-20.06,-265,-20.06,-264,-20.06,-263,-20.06,-262,-20.06,-261,-20.06,-260,-20.06,-259,-20.06,-258,-20.06,-257,-20.06,-256,-20.06,-255,-20.06,-254,-20.06,-253,-20.06,-252,-20.06,-251,-20.06,-250,-20.06,-249,-20.06,-248,-20.06,-247,-20.06,-246,-20.06,-245,-20.06,-244,-20.06,-243,-20.06,-242,-20.06,-241,-20.06,-240,-20.06,-183,-20.06,-182,-20.06,-181,-20.06,-180,-20.06,-176,-20.06,-175,-20.06,-174,-20.06,-173,-20.06,-172,-20.06,-171,-20.06,-170,-20.06,-169,-20.06,-168,-20.06,-167,-20.06,-166,-20.06,-165,-20.06,-164,-20.06,-163,-20.06,-162,-20.06,-161,-20.06,-160,-20.06,-159,-20.06,-158,-20.06,-157,-20.06,-156,-20.06,-155,-20.06,-154,-20.06,-153,-20.06,-152,-20.06,-151,-20.06,-150,-20.06,-149,-20.06,-148,-20.06,-147,-20.06,-146,-20.06,-145,-20.06,-144,-20.06,-143,-20.06,-142,-20.06,-141,-20.06,-140,-20.06,-139,-20.06,-138,-20.06,-137,-20.06,-136,-20.06,-135,-20.06,-134,-20.06,-133,-20.06,-132,-20.06,-131,-20.06,-130,-20.06,-129,-20.06,-128,-20.06,-127,-20.06,-126,-20.06,-125,-20.06,-124,-20.06,-123,-20.06,-122,-20.06,-121,-20.06,-120,-20.06,-119,-20.06,-118,-20.06,-117,-20.06,-116,-20.06,-115,-20.06,-114,-20.06,-113,-20.06,-112,-20.06,-111,-20.06,-110,-20.06,-109,-20.06,-108,-20.06,-107,-20.06,-106,-20.06,-105,-20.06,-104,-20.06,-103,-20.06,-102,-20.06,-101,-20.06,-100,-20.06,-99,-20.06,-98,-20.06,-97,-20.06,-96,-20.06,-95,-20.06,-94,-20.06,-93,-20.06,-92,-20.06,-91,-20.06,-90,-20.06,-89,-20.06,-88,-20.06,-87,-20.06,-86,-20.06,-85,-20.06,-84,-20.06,-83,-20.06,-82,-20.06,-81,-20.06,-80,-20.06,-79,-20.06,-78,-20.06,-77,-20.06,-76,-20.06,-75,-20.06,-74,-20.06,-73,-20.06,-72,-20.06,-71,-20.06,-70,-20.06,-69,-20.06,-68,-20.06,-67,-20.06,-66,-20.06,-65,-20.06,-64,-20.06,-63,-20.06,-62,-20.06,-61,-20.06,-60,-20.06,-59,-20.06,-58,-20.06,-57,-20.06,-56,-20.06,-55,-20.06,-54,-20.06,-53,-20.06,-52,-20.06,-51,-20.06,-50,-20.06,-49,-20.06,-48,-20.06,-47,-20.06,-46,-20.06,-45,-20.06,-44,-20.06,-43,-20.06,-42,-20.06,-41,-20.06,-40,-20.06,-38,-20.06,-307,-19.06,-306,-19.06,-305,-19.06,-304,-19.06,-303,-19.06,-302,-19.06,-301,-19.06,-300,-19.06,-299,-19.06,-298,-19.06,-297,-19.06,-296,-19.06,-295,-19.06,-294,-19.06,-293,-19.06,-292,-19.06,-291,-19.06,-290,-19.06,-289,-19.06,-288,-19.06,-287,-19.06,-286,-19.06,-285,-19.06,-284,-19.06,-283,-19.06,-282,-19.06,-281,-19.06,-280,-19.06,-279,-19.06,-278,-19.06,-277,-19.06,-276,-19.06,-275,-19.06,-274,-19.06,-273,-19.06,-272,-19.06,-271,-19.06,-270,-19.06,-269,-19.06,-268,-19.06,-267,-19.06,-266,-19.06,-265,-19.06,-264,-19.06,-263,-19.06,-262,-19.06,-261,-19.06,-260,-19.06,-259,-19.06,-258,-19.06,-257,-19.06,-256,-19.06,-255,-19.06,-254,-19.06,-253,-19.06,-252,-19.06,-251,-19.06,-250,-19.06,-249,-19.06,-248,-19.06,-178,-19.06,-177,-19.06,-176,-19.06,-175,-19.06,-174,-19.06,-173,-19.06,-172,-19.06,-171,-19.06,-170,-19.06,-169,-19.06,-168,-19.06,-167,-19.06,-166,-19.06,-165,-19.06,-164,-19.06,-163,-19.06,-162,-19.06,-161,-19.06,-160,-19.06,-159,-19.06,-158,-19.06,-157,-19.06,-156,-19.06,-155,-19.06,-154,-19.06,-153,-19.06,-152,-19.06,-151,-19.06,-150,-19.06,-149,-19.06,-148,-19.06,-147,-19.06,-146,-19.06,-145,-19.06,-144,-19.06,-143,-19.06,-142,-19.06,-141,-19.06,-140,-19.06,-139,-19.06,-138,-19.06,-137,-19.06,-136,-19.06,-135,-19.06,-134,-19.06,-133,-19.06,-132,-19.06,-131,-19.06,-130,-19.06,-129,-19.06,-128,-19.06,-127,-19.06,-126,-19.06,-125,-19.06,-124,-19.06,-123,-19.06,-122,-19.06,-121,-19.06,-120,-19.06,-119,-19.06,-118,-19.06,-117,-19.06,-116,-19.06,-115,-19.06,-114,-19.06,-113,-19.06,-112,-19.06,-111,-19.06,-110,-19.06,-109,-19.06,-108,-19.06,-107,-19.06,-106,-19.06,-105,-19.06,-104,-19.06,-103,-19.06,-102,-19.06,-101,-19.06,-100,-19.06,-99,-19.06,-98,-19.06,-97,-19.06,-96,-19.06,-95,-19.06,-94,-19.06,-93,-19.06,-92,-19.06,-91,-19.06,-90,-19.06,-89,-19.06,-88,-19.06,-87,-19.06,-86,-19.06,-85,-19.06,-84,-19.06,-83,-19.06,-82,-19.06,-81,-19.06,-80,-19.06,-79,-19.06,-78,-19.06,-77,-19.06,-76,-19.06,-75,-19.06,-74,-19.06,-73,-19.06,-72,-19.06,-71,-19.06,-70,-19.06,-69,-19.06,-68,-19.06,-67,-19.06,-66,-19.06,-65,-19.06,-64,-19.06,-63,-19.06,-62,-19.06,-61,-19.06,-60,-19.06,-59,-19.06,-58,-19.06,-57,-19.06,-56,-19.06,-55,-19.06,-54,-19.06,-53,-19.06,-52,-19.06,-51,-19.06,-50,-19.06,-49,-19.06,-48,-19.06,-47,-19.06,-46,-19.06,-45,-19.06,-44,-19.06,-43,-19.06,-42,-19.06,-41,-19.06,-38,-19.06,-37,-19.06,-306,-18.06,-305,-18.06,-304,-18.06,-303,-18.06,-302,-18.06,-301,-18.06,-300,-18.06,-299,-18.06,-298,-18.06,-297,-18.06,-296,-18.06,-295,-18.06,-294,-18.06,-293,-18.06,-292,-18.06,-291,-18.06,-290,-18.06,-289,-18.06,-288,-18.06,-287,-18.06,-286,-18.06,-285,-18.06,-284,-18.06,-283,-18.06,-282,-18.06,-281,-18.06,-280,-18.06,-279,-18.06,-278,-18.06,-277,-18.06,-276,-18.06,-275,-18.06,-274,-18.06,-273,-18.06,-272,-18.06,-271,-18.06,-270,-18.06,-269,-18.06,-268,-18.06,-267,-18.06,-266,-18.06,-265,-18.06,-264,-18.06,-263,-18.06,-262,-18.06,-261,-18.06,-260,-18.06,-259,-18.06,-258,-18.06,-257,-18.06,-256,-18.06,-255,-18.06,-254,-18.06,-253,-18.06,-252,-18.06,-251,-18.06,-250,-18.06,-237,-18.06,-179,-18.06,-178,-18.06,-177,-18.06,-176,-18.06,-175,-18.06,-174,-18.06,-173,-18.06,-172,-18.06,-171,-18.06,-170,-18.06,-169,-18.06,-168,-18.06,-167,-18.06,-166,-18.06,-165,-18.06,-164,-18.06,-163,-18.06,-162,-18.06,-161,-18.06,-160,-18.06,-159,-18.06,-158,-18.06,-157,-18.06,-156,-18.06,-155,-18.06,-154,-18.06,-153,-18.06,-152,-18.06,-151,-18.06,-150,-18.06,-149,-18.06,-148,-18.06,-147,-18.06,-146,-18.06,-145,-18.06,-144,-18.06,-143,-18.06,-142,-18.06,-141,-18.06,-140,-18.06,-139,-18.06,-138,-18.06,-137,-18.06,-136,-18.06,-135,-18.06,-134,-18.06,-133,-18.06,-132,-18.06,-131,-18.06,-130,-18.06,-129,-18.06,-128,-18.06,-127,-18.06,-126,-18.06,-125,-18.06,-124,-18.06,-123,-18.06,-122,-18.06,-121,-18.06,-120,-18.06,-119,-18.06,-118,-18.06,-117,-18.06,-116,-18.06,-115,-18.06,-114,-18.06,-113,-18.06,-112,-18.06,-111,-18.06,-110,-18.06,-109,-18.06,-108,-18.06,-107,-18.06,-106,-18.06,-105,-18.06,-104,-18.06,-103,-18.06,-102,-18.06,-101,-18.06,-100,-18.06,-99,-18.06,-98,-18.06,-97,-18.06,-96,-18.06,-95,-18.06,-94,-18.06,-93,-18.06,-92,-18.06,-91,-18.06,-90,-18.06,-89,-18.06,-88,-18.06,-87,-18.06,-86,-18.06,-85,-18.06,-84,-18.06,-83,-18.06,-82,-18.06,-81,-18.06,-80,-18.06,-79,-18.06,-78,-18.06,-77,-18.06,-76,-18.06,-75,-18.06,-74,-18.06,-73,-18.06,-72,-18.06,-71,-18.06,-70,-18.06,-69,-18.06,-68,-18.06,-67,-18.06,-66,-18.06,-65,-18.06,-64,-18.06,-63,-18.06,-62,-18.06,-61,-18.06,-60,-18.06,-59,-18.06,-58,-18.06,-57,-18.06,-56,-18.06,-55,-18.06,-54,-18.06,-53,-18.06,-52,-18.06,-51,-18.06,-50,-18.06,-49,-18.06,-48,-18.06,-47,-18.06,-46,-18.06,-45,-18.06,-44,-18.06,-43,-18.06,-42,-18.06,-41,-18.06,-38,-18.06,-37,-18.06,-305,-17.06,-304,-17.06,-303,-17.06,-302,-17.06,-301,-17.06,-300,-17.06,-299,-17.06,-298,-17.06,-297,-17.06,-296,-17.06,-295,-17.06,-294,-17.06,-293,-17.06,-292,-17.06,-291,-17.06,-290,-17.06,-289,-17.06,-288,-17.06,-287,-17.06,-286,-17.06,-285,-17.06,-284,-17.06,-283,-17.06,-282,-17.06,-281,-17.06,-280,-17.06,-279,-17.06,-278,-17.06,-277,-17.06,-276,-17.06,-275,-17.06,-274,-17.06,-273,-17.06,-272,-17.06,-271,-17.06,-265,-17.06,-264,-17.06,-263,-17.06,-262,-17.06,-261,-17.06,-260,-17.06,-259,-17.06,-258,-17.06,-257,-17.06,-256,-17.06,-255,-17.06,-254,-17.06,-253,-17.06,-252,-17.06,-251,-17.06,-238,-17.06,-237,-17.06,-236,-17.06,-235,-17.06,-234,-17.06,-182,-17.06,-181,-17.06,-180,-17.06,-179,-17.06,-178,-17.06,-177,-17.06,-176,-17.06,-175,-17.06,-174,-17.06,-173,-17.06,-172,-17.06,-171,-17.06,-170,-17.06,-169,-17.06,-168,-17.06,-167,-17.06,-166,-17.06,-165,-17.06,-164,-17.06,-163,-17.06,-162,-17.06,-161,-17.06,-160,-17.06,-159,-17.06,-158,-17.06,-157,-17.06,-156,-17.06,-155,-17.06,-154,-17.06,-153,-17.06,-152,-17.06,-151,-17.06,-150,-17.06,-149,-17.06,-148,-17.06,-147,-17.06,-146,-17.06,-145,-17.06,-144,-17.06,-143,-17.06,-142,-17.06,-141,-17.06,-140,-17.06,-139,-17.06,-138,-17.06,-137,-17.06,-136,-17.06,-135,-17.06,-134,-17.06,-133,-17.06,-132,-17.06,-131,-17.06,-130,-17.06,-129,-17.06,-128,-17.06,-127,-17.06,-126,-17.06,-125,-17.06,-124,-17.06,-123,-17.06,-122,-17.06,-121,-17.06,-120,-17.06,-119,-17.06,-118,-17.06,-117,-17.06,-116,-17.06,-115,-17.06,-114,-17.06,-113,-17.06,-112,-17.06,-111,-17.06,-110,-17.06,-109,-17.06,-108,-17.06,-107,-17.06,-106,-17.06,-105,-17.06,-104,-17.06,-103,-17.06,-102,-17.06,-101,-17.06,-100,-17.06,-99,-17.06,-98,-17.06,-97,-17.06,-96,-17.06,-95,-17.06,-94,-17.06,-93,-17.06,-92,-17.06,-91,-17.06,-90,-17.06,-89,-17.06,-88,-17.06,-87,-17.06,-86,-17.06,-85,-17.06,-84,-17.06,-83,-17.06,-82,-17.06,-81,-17.06,-80,-17.06,-79,-17.06,-78,-17.06,-77,-17.06,-76,-17.06,-75,-17.06,-74,-17.06,-73,-17.06,-72,-17.06,-71,-17.06,-70,-17.06,-69,-17.06,-68,-17.06,-67,-17.06,-66,-17.06,-65,-17.06,-64,-17.06,-63,-17.06,-62,-17.06,-61,-17.06,-60,-17.06,-59,-17.06,-58,-17.06,-57,-17.06,-56,-17.06,-55,-17.06,-54,-17.06,-53,-17.06,-52,-17.06,-51,-17.06,-50,-17.06,-49,-17.06,-48,-17.06,-47,-17.06,-46,-17.06,-45,-17.06,-44,-17.06,-43,-17.06,-42,-17.06,-41,-17.06,-38,-17.06,-304,-16.06,-303,-16.06,-302,-16.06,-301,-16.06,-300,-16.06,-299,-16.06,-298,-16.06,-297,-16.06,-296,-16.06,-295,-16.06,-294,-16.06,-293,-16.06,-292,-16.06,-291,-16.06,-290,-16.06,-289,-16.06,-288,-16.06,-287,-16.06,-286,-16.06,-285,-16.06,-284,-16.06,-283,-16.06,-282,-16.06,-281,-16.06,-280,-16.06,-279,-16.06,-278,-16.06,-277,-16.06,-276,-16.06,-275,-16.06,-274,-16.06,-273,-16.06,-264,-16.06,-263,-16.06,-262,-16.06,-261,-16.06,-260,-16.06,-259,-16.06,-258,-16.06,-257,-16.06,-256,-16.06,-255,-16.06,-254,-16.06,-253,-16.06,-252,-16.06,-251,-16.06,-250,-16.06,-249,-16.06,-248,-16.06,-247,-16.06,-234,-16.06,-182,-16.06,-181,-16.06,-180,-16.06,-179,-16.06,-178,-16.06,-177,-16.06,-176,-16.06,-175,-16.06,-174,-16.06,-173,-16.06,-172,-16.06,-171,-16.06,-170,-16.06,-169,-16.06,-168,-16.06,-167,-16.06,-166,-16.06,-165,-16.06,-164,-16.06,-163,-16.06,-162,-16.06,-161,-16.06,-160,-16.06,-159,-16.06,-158,-16.06,-157,-16.06,-156,-16.06,-155,-16.06,-154,-16.06,-153,-16.06,-152,-16.06,-151,-16.06,-150,-16.06,-149,-16.06,-148,-16.06,-147,-16.06,-146,-16.06,-145,-16.06,-144,-16.06,-143,-16.06,-142,-16.06,-141,-16.06,-140,-16.06,-139,-16.06,-138,-16.06,-137,-16.06,-136,-16.06,-135,-16.06,-134,-16.06,-133,-16.06,-132,-16.06,-131,-16.06,-130,-16.06,-129,-16.06,-128,-16.06,-127,-16.06,-126,-16.06,-125,-16.06,-124,-16.06,-123,-16.06,-122,-16.06,-121,-16.06,-120,-16.06,-119,-16.06,-118,-16.06,-117,-16.06,-116,-16.06,-115,-16.06,-114,-16.06,-113,-16.06,-112,-16.06,-111,-16.06,-110,-16.06,-109,-16.06,-108,-16.06,-107,-16.06,-106,-16.06,-105,-16.06,-104,-16.06,-103,-16.06,-102,-16.06,-101,-16.06,-100,-16.06,-99,-16.06,-98,-16.06,-97,-16.06,-96,-16.06,-95,-16.06,-94,-16.06,-93,-16.06,-92,-16.06,-91,-16.06,-90,-16.06,-89,-16.06,-88,-16.06,-87,-16.06,-86,-16.06,-85,-16.06,-84,-16.06,-83,-16.06,-82,-16.06,-81,-16.06,-80,-16.06,-79,-16.06,-78,-16.06,-77,-16.06,-76,-16.06,-75,-16.06,-74,-16.06,-73,-16.06,-72,-16.06,-71,-16.06,-70,-16.06,-69,-16.06,-68,-16.06,-67,-16.06,-66,-16.06,-65,-16.06,-64,-16.06,-63,-16.06,-62,-16.06,-61,-16.06,-60,-16.06,-59,-16.06,-58,-16.06,-57,-16.06,-56,-16.06,-55,-16.06,-54,-16.06,-53,-16.06,-52,-16.06,-51,-16.06,-50,-16.06,-49,-16.06,-48,-16.06,-47,-16.06,-46,-16.06,-45,-16.06,-44,-16.06,-43,-16.06,-42,-16.06,-38,-16.06,-304,-15.06,-303,-15.06,-302,-15.06,-301,-15.06,-300,-15.06,-299,-15.06,-298,-15.06,-297,-15.06,-296,-15.06,-295,-15.06,-294,-15.06,-293,-15.06,-292,-15.06,-291,-15.06,-290,-15.06,-289,-15.06,-288,-15.06,-287,-15.06,-286,-15.06,-285,-15.06,-284,-15.06,-283,-15.06,-282,-15.06,-281,-15.06,-280,-15.06,-279,-15.06,-278,-15.06,-277,-15.06,-276,-15.06,-275,-15.06,-274,-15.06,-273,-15.06,-272,-15.06,-269,-15.06,-264,-15.06,-263,-15.06,-262,-15.06,-261,-15.06,-260,-15.06,-259,-15.06,-258,-15.06,-257,-15.06,-256,-15.06,-255,-15.06,-254,-15.06,-253,-15.06,-252,-15.06,-251,-15.06,-250,-15.06,-249,-15.06,-248,-15.06,-247,-15.06,-246,-15.06,-181,-15.06,-180,-15.06,-179,-15.06,-178,-15.06,-177,-15.06,-176,-15.06,-175,-15.06,-174,-15.06,-173,-15.06,-172,-15.06,-171,-15.06,-170,-15.06,-169,-15.06,-168,-15.06,-167,-15.06,-166,-15.06,-165,-15.06,-164,-15.06,-163,-15.06,-162,-15.06,-161,-15.06,-160,-15.06,-159,-15.06,-158,-15.06,-157,-15.06,-156,-15.06,-155,-15.06,-154,-15.06,-153,-15.06,-152,-15.06,-151,-15.06,-147,-15.06,-146,-15.06,-145,-15.06,-144,-15.06,-143,-15.06,-142,-15.06,-141,-15.06,-140,-15.06,-139,-15.06,-138,-15.06,-137,-15.06,-136,-15.06,-135,-15.06,-134,-15.06,-133,-15.06,-132,-15.06,-131,-15.06,-130,-15.06,-129,-15.06,-128,-15.06,-127,-15.06,-126,-15.06,-125,-15.06,-124,-15.06,-123,-15.06,-122,-15.06,-121,-15.06,-120,-15.06,-119,-15.06,-118,-15.06,-117,-15.06,-116,-15.06,-115,-15.06,-114,-15.06,-113,-15.06,-112,-15.06,-111,-15.06,-110,-15.06,-109,-15.06,-108,-15.06,-107,-15.06,-106,-15.06,-105,-15.06,-104,-15.06,-103,-15.06,-102,-15.06,-101,-15.06,-100,-15.06,-99,-15.06,-98,-15.06,-97,-15.06,-96,-15.06,-95,-15.06,-94,-15.06,-93,-15.06,-92,-15.06,-91,-15.06,-90,-15.06,-89,-15.06,-88,-15.06,-87,-15.06,-86,-15.06,-85,-15.06,-84,-15.06,-83,-15.06,-82,-15.06,-81,-15.06,-80,-15.06,-79,-15.06,-78,-15.06,-77,-15.06,-76,-15.06,-75,-15.06,-74,-15.06,-73,-15.06,-72,-15.06,-71,-15.06,-70,-15.06,-69,-15.06,-68,-15.06,-67,-15.06,-66,-15.06,-65,-15.06,-64,-15.06,-63,-15.06,-62,-15.06,-61,-15.06,-60,-15.06,-59,-15.06,-58,-15.06,-57,-15.06,-56,-15.06,-55,-15.06,-54,-15.06,-53,-15.06,-52,-15.06,-51,-15.06,-50,-15.06,-49,-15.06,-48,-15.06,-47,-15.06,-46,-15.06,-45,-15.06,-44,-15.06,-43,-15.06,-304,-14.06,-303,-14.06,-302,-14.06,-301,-14.06,-300,-14.06,-299,-14.06,-298,-14.06,-297,-14.06,-296,-14.06,-295,-14.06,-294,-14.06,-293,-14.06,-292,-14.06,-291,-14.06,-290,-14.06,-289,-14.06,-288,-14.06,-287,-14.06,-286,-14.06,-285,-14.06,-284,-14.06,-283,-14.06,-282,-14.06,-281,-14.06,-280,-14.06,-279,-14.06,-278,-14.06,-277,-14.06,-276,-14.06,-275,-14.06,-274,-14.06,-273,-14.06,-272,-14.06,-271,-14.06,-270,-14.06,-269,-14.06,-260,-14.06,-259,-14.06,-258,-14.06,-257,-14.06,-256,-14.06,-255,-14.06,-254,-14.06,-253,-14.06,-252,-14.06,-251,-14.06,-250,-14.06,-249,-14.06,-248,-14.06,-247,-14.06,-246,-14.06,-245,-14.06,-244,-14.06,-181,-14.06,-180,-14.06,-179,-14.06,-178,-14.06,-177,-14.06,-176,-14.06,-175,-14.06,-174,-14.06,-173,-14.06,-172,-14.06,-171,-14.06,-170,-14.06,-169,-14.06,-168,-14.06,-167,-14.06,-166,-14.06,-165,-14.06,-164,-14.06,-163,-14.06,-162,-14.06,-161,-14.06,-160,-14.06,-159,-14.06,-158,-14.06,-157,-14.06,-156,-14.06,-155,-14.06,-154,-14.06,-153,-14.06,-152,-14.06,-146,-14.06,-145,-14.06,-144,-14.06,-143,-14.06,-142,-14.06,-141,-14.06,-140,-14.06,-139,-14.06,-138,-14.06,-137,-14.06,-136,-14.06,-135,-14.06,-134,-14.06,-133,-14.06,-130,-14.06,-129,-14.06,-128,-14.06,-127,-14.06,-126,-14.06,-125,-14.06,-124,-14.06,-123,-14.06,-122,-14.06,-121,-14.06,-120,-14.06,-119,-14.06,-118,-14.06,-117,-14.06,-116,-14.06,-115,-14.06,-114,-14.06,-113,-14.06,-112,-14.06,-111,-14.06,-110,-14.06,-109,-14.06,-108,-14.06,-107,-14.06,-106,-14.06,-105,-14.06,-104,-14.06,-103,-14.06,-102,-14.06,-101,-14.06,-100,-14.06,-99,-14.06,-98,-14.06,-97,-14.06,-96,-14.06,-95,-14.06,-94,-14.06,-93,-14.06,-92,-14.06,-91,-14.06,-90,-14.06,-89,-14.06,-88,-14.06,-87,-14.06,-86,-14.06,-85,-14.06,-84,-14.06,-83,-14.06,-82,-14.06,-81,-14.06,-80,-14.06,-79,-14.06,-78,-14.06,-77,-14.06,-76,-14.06,-75,-14.06,-74,-14.06,-73,-14.06,-72,-14.06,-71,-14.06,-70,-14.06,-69,-14.06,-68,-14.06,-67,-14.06,-66,-14.06,-65,-14.06,-64,-14.06,-63,-14.06,-62,-14.06,-61,-14.06,-60,-14.06,-59,-14.06,-58,-14.06,-57,-14.06,-56,-14.06,-55,-14.06,-54,-14.06,-53,-14.06,-52,-14.06,-51,-14.06,-50,-14.06,-49,-14.06,-48,-14.06,-47,-14.06,-46,-14.06,-45,-14.06,-44,-14.06,-304,-13.06,-303,-13.06,-302,-13.06,-301,-13.06,-300,-13.06,-299,-13.06,-298,-13.06,-297,-13.06,-296,-13.06,-295,-13.06,-294,-13.06,-293,-13.06,-292,-13.06,-291,-13.06,-290,-13.06,-289,-13.06,-288,-13.06,-287,-13.06,-286,-13.06,-285,-13.06,-284,-13.06,-283,-13.06,-282,-13.06,-281,-13.06,-280,-13.06,-279,-13.06,-278,-13.06,-277,-13.06,-276,-13.06,-275,-13.06,-274,-13.06,-273,-13.06,-272,-13.06,-271,-13.06,-270,-13.06,-269,-13.06,-265,-13.06,-260,-13.06,-259,-13.06,-258,-13.06,-257,-13.06,-256,-13.06,-255,-13.06,-254,-13.06,-253,-13.06,-252,-13.06,-251,-13.06,-250,-13.06,-181,-13.06,-180,-13.06,-179,-13.06,-178,-13.06,-177,-13.06,-176,-13.06,-175,-13.06,-174,-13.06,-173,-13.06,-170,-13.06,-169,-13.06,-165,-13.06,-164,-13.06,-163,-13.06,-162,-13.06,-161,-13.06,-160,-13.06,-159,-13.06,-158,-13.06,-157,-13.06,-156,-13.06,-155,-13.06,-154,-13.06,-153,-13.06,-152,-13.06,-141,-13.06,-140,-13.06,-139,-13.06,-138,-13.06,-137,-13.06,-136,-13.06,-135,-13.06,-134,-13.06,-129,-13.06,-128,-13.06,-127,-13.06,-126,-13.06,-125,-13.06,-124,-13.06,-123,-13.06,-122,-13.06,-121,-13.06,-120,-13.06,-119,-13.06,-118,-13.06,-117,-13.06,-116,-13.06,-115,-13.06,-114,-13.06,-113,-13.06,-112,-13.06,-111,-13.06,-110,-13.06,-109,-13.06,-108,-13.06,-107,-13.06,-106,-13.06,-105,-13.06,-104,-13.06,-103,-13.06,-102,-13.06,-101,-13.06,-100,-13.06,-99,-13.06,-98,-13.06,-97,-13.06,-96,-13.06,-95,-13.06,-94,-13.06,-93,-13.06,-92,-13.06,-91,-13.06,-90,-13.06,-89,-13.06,-88,-13.06,-87,-13.06,-86,-13.06,-85,-13.06,-84,-13.06,-83,-13.06,-82,-13.06,-81,-13.06,-80,-13.06,-79,-13.06,-78,-13.06,-77,-13.06,-76,-13.06,-75,-13.06,-74,-13.06,-73,-13.06,-72,-13.06,-71,-13.06,-70,-13.06,-69,-13.06,-68,-13.06,-67,-13.06,-66,-13.06,-65,-13.06,-64,-13.06,-63,-13.06,-62,-13.06,-61,-13.06,-60,-13.06,-59,-13.06,-58,-13.06,-57,-13.06,-56,-13.06,-55,-13.06,-54,-13.06,-53,-13.06,-52,-13.06,-51,-13.06,-50,-13.06,-49,-13.06,-48,-13.06,-47,-13.06,-46,-13.06,-45,-13.06,-38,-13.06,-37,-13.06,-304,-12.06,-303,-12.06,-302,-12.06,-301,-12.06,-300,-12.06,-299,-12.06,-298,-12.06,-297,-12.06,-296,-12.06,-295,-12.06,-294,-12.06,-293,-12.06,-292,-12.06,-291,-12.06,-290,-12.06,-289,-12.06,-288,-12.06,-287,-12.06,-286,-12.06,-285,-12.06,-284,-12.06,-283,-12.06,-282,-12.06,-281,-12.06,-280,-12.06,-279,-12.06,-278,-12.06,-277,-12.06,-276,-12.06,-275,-12.06,-274,-12.06,-273,-12.06,-272,-12.06,-271,-12.06,-270,-12.06,-269,-12.06,-266,-12.06,-265,-12.06,-264,-12.06,-261,-12.06,-256,-12.06,-255,-12.06,-254,-12.06,-253,-12.06,-252,-12.06,-181,-12.06,-180,-12.06,-179,-12.06,-178,-12.06,-177,-12.06,-175,-12.06,-169,-12.06,-168,-12.06,-164,-12.06,-163,-12.06,-162,-12.06,-161,-12.06,-160,-12.06,-159,-12.06,-158,-12.06,-157,-12.06,-156,-12.06,-155,-12.06,-154,-12.06,-153,-12.06,-140,-12.06,-139,-12.06,-138,-12.06,-137,-12.06,-136,-12.06,-135,-12.06,-134,-12.06,-128,-12.06,-127,-12.06,-126,-12.06,-125,-12.06,-124,-12.06,-123,-12.06,-122,-12.06,-121,-12.06,-120,-12.06,-119,-12.06,-118,-12.06,-117,-12.06,-116,-12.06,-115,-12.06,-114,-12.06,-113,-12.06,-112,-12.06,-111,-12.06,-110,-12.06,-109,-12.06,-108,-12.06,-107,-12.06,-106,-12.06,-105,-12.06,-104,-12.06,-103,-12.06,-102,-12.06,-101,-12.06,-100,-12.06,-99,-12.06,-98,-12.06,-97,-12.06,-96,-12.06,-95,-12.06,-94,-12.06,-93,-12.06,-92,-12.06,-91,-12.06,-90,-12.06,-89,-12.06,-88,-12.06,-87,-12.06,-86,-12.06,-85,-12.06,-84,-12.06,-83,-12.06,-82,-12.06,-81,-12.06,-80,-12.06,-79,-12.06,-78,-12.06,-77,-12.06,-76,-12.06,-75,-12.06,-74,-12.06,-73,-12.06,-72,-12.06,-71,-12.06,-70,-12.06,-69,-12.06,-68,-12.06,-67,-12.06,-66,-12.06,-65,-12.06,-64,-12.06,-63,-12.06,-62,-12.06,-61,-12.06,-60,-12.06,-59,-12.06,-58,-12.06,-57,-12.06,-56,-12.06,-55,-12.06,-54,-12.06,-53,-12.06,-52,-12.06,-51,-12.06,-50,-12.06,-49,-12.06,-48,-12.06,-47,-12.06,-46,-12.06,-38,-12.06,-37,-12.06,-36,-12.06,-304,-11.06,-303,-11.06,-302,-11.06,-301,-11.06,-300,-11.06,-299,-11.06,-298,-11.06,-297,-11.06,-296,-11.06,-295,-11.06,-294,-11.06,-293,-11.06,-292,-11.06,-291,-11.06,-290,-11.06,-289,-11.06,-288,-11.06,-287,-11.06,-286,-11.06,-285,-11.06,-284,-11.06,-283,-11.06,-282,-11.06,-281,-11.06,-280,-11.06,-279,-11.06,-278,-11.06,-277,-11.06,-276,-11.06,-275,-11.06,-274,-11.06,-273,-11.06,-272,-11.06,-271,-11.06,-270,-11.06,-269,-11.06,-266,-11.06,-265,-11.06,-264,-11.06,-260,-11.06,-259,-11.06,-258,-11.06,-257,-11.06,-256,-11.06,-255,-11.06,-254,-11.06,-253,-11.06,-252,-11.06,-189,-11.06,-188,-11.06,-187,-11.06,-186,-11.06,-185,-11.06,-184,-11.06,-183,-11.06,-182,-11.06,-181,-11.06,-180,-11.06,-179,-11.06,-178,-11.06,-168,-11.06,-167,-11.06,-161,-11.06,-160,-11.06,-159,-11.06,-158,-11.06,-157,-11.06,-156,-11.06,-155,-11.06,-154,-11.06,-138,-11.06,-137,-11.06,-136,-11.06,-135,-11.06,-134,-11.06,-127,-11.06,-126,-11.06,-125,-11.06,-124,-11.06,-123,-11.06,-122,-11.06,-121,-11.06,-120,-11.06,-119,-11.06,-118,-11.06,-117,-11.06,-116,-11.06,-115,-11.06,-114,-11.06,-113,-11.06,-112,-11.06,-111,-11.06,-110,-11.06,-109,-11.06,-108,-11.06,-107,-11.06,-106,-11.06,-105,-11.06,-104,-11.06,-103,-11.06,-102,-11.06,-101,-11.06,-100,-11.06,-99,-11.06,-98,-11.06,-97,-11.06,-96,-11.06,-95,-11.06,-94,-11.06,-93,-11.06,-92,-11.06,-91,-11.06,-90,-11.06,-89,-11.06,-88,-11.06,-87,-11.06,-86,-11.06,-85,-11.06,-84,-11.06,-83,-11.06,-82,-11.06,-81,-11.06,-80,-11.06,-79,-11.06,-78,-11.06,-77,-11.06,-76,-11.06,-75,-11.06,-74,-11.06,-73,-11.06,-72,-11.06,-71,-11.06,-70,-11.06,-69,-11.06,-68,-11.06,-67,-11.06,-66,-11.06,-65,-11.06,-64,-11.06,-63,-11.06,-62,-11.06,-61,-11.06,-60,-11.06,-59,-11.06,-58,-11.06,-57,-11.06,-56,-11.06,-55,-11.06,-54,-11.06,-53,-11.06,-52,-11.06,-51,-11.06,-38,-11.06,-304,-10.06,-303,-10.06,-302,-10.06,-301,-10.06,-300,-10.06,-299,-10.06,-298,-10.06,-297,-10.06,-296,-10.06,-295,-10.06,-294,-10.06,-293,-10.06,-292,-10.06,-291,-10.06,-290,-10.06,-289,-10.06,-288,-10.06,-287,-10.06,-286,-10.06,-285,-10.06,-284,-10.06,-283,-10.06,-282,-10.06,-281,-10.06,-280,-10.06,-279,-10.06,-278,-10.06,-277,-10.06,-276,-10.06,-275,-10.06,-274,-10.06,-273,-10.06,-272,-10.06,-271,-10.06,-270,-10.06,-269,-10.06,-266,-10.06,-265,-10.06,-264,-10.06,-260,-10.06,-259,-10.06,-258,-10.06,-257,-10.06,-256,-10.06,-255,-10.06,-254,-10.06,-189,-10.06,-188,-10.06,-187,-10.06,-186,-10.06,-185,-10.06,-184,-10.06,-183,-10.06,-182,-10.06,-181,-10.06,-180,-10.06,-179,-10.06,-166,-10.06,-165,-10.06,-160,-10.06,-159,-10.06,-158,-10.06,-157,-10.06,-156,-10.06,-155,-10.06,-154,-10.06,-153,-10.06,-146,-10.06,-138,-10.06,-137,-10.06,-136,-10.06,-135,-10.06,-134,-10.06,-133,-10.06,-127,-10.06,-126,-10.06,-125,-10.06,-124,-10.06,-123,-10.06,-122,-10.06,-121,-10.06,-120,-10.06,-119,-10.06,-118,-10.06,-117,-10.06,-116,-10.06,-115,-10.06,-114,-10.06,-113,-10.06,-112,-10.06,-111,-10.06,-110,-10.06,-109,-10.06,-108,-10.06,-107,-10.06,-106,-10.06,-105,-10.06,-104,-10.06,-103,-10.06,-102,-10.06,-101,-10.06,-100,-10.06,-99,-10.06,-98,-10.06,-97,-10.06,-96,-10.06,-95,-10.06,-94,-10.06,-93,-10.06,-92,-10.06,-91,-10.06,-90,-10.06,-89,-10.06,-88,-10.06,-87,-10.06,-86,-10.06,-85,-10.06,-84,-10.06,-83,-10.06,-82,-10.06,-81,-10.06,-80,-10.06,-79,-10.06,-78,-10.06,-77,-10.06,-76,-10.06,-75,-10.06,-74,-10.06,-73,-10.06,-72,-10.06,-71,-10.06,-70,-10.06,-69,-10.06,-68,-10.06,-67,-10.06,-66,-10.06,-65,-10.06,-64,-10.06,-63,-10.06,-62,-10.06,-61,-10.06,-60,-10.06,-59,-10.06,-58,-10.06,-57,-10.06,-56,-10.06,-55,-10.06,-54,-10.06,-53,-10.06,-52,-10.06,-304,-9.06,-303,-9.06,-302,-9.06,-301,-9.06,-300,-9.06,-299,-9.06,-298,-9.06,-297,-9.06,-296,-9.06,-295,-9.06,-294,-9.06,-293,-9.06,-292,-9.06,-291,-9.06,-290,-9.06,-289,-9.06,-288,-9.06,-287,-9.06,-286,-9.06,-285,-9.06,-284,-9.06,-283,-9.06,-282,-9.06,-281,-9.06,-280,-9.06,-279,-9.06,-278,-9.06,-277,-9.06,-276,-9.06,-275,-9.06,-274,-9.06,-273,-9.06,-272,-9.06,-271,-9.06,-270,-9.06,-269,-9.06,-268,-9.06,-267,-9.06,-266,-9.06,-265,-9.06,-264,-9.06,-263,-9.06,-262,-9.06,-261,-9.06,-260,-9.06,-259,-9.06,-258,-9.06,-257,-9.06,-256,-9.06,-255,-9.06,-189,-9.06,-188,-9.06,-187,-9.06,-186,-9.06,-185,-9.06,-184,-9.06,-183,-9.06,-182,-9.06,-181,-9.06,-165,-9.06,-164,-9.06,-160,-9.06,-159,-9.06,-158,-9.06,-154,-9.06,-153,-9.06,-152,-9.06,-151,-9.06,-150,-9.06,-149,-9.06,-148,-9.06,-147,-9.06,-146,-9.06,-145,-9.06,-144,-9.06,-143,-9.06,-141,-9.06,-140,-9.06,-139,-9.06,-138,-9.06,-137,-9.06,-136,-9.06,-135,-9.06,-134,-9.06,-133,-9.06,-132,-9.06,-127,-9.06,-126,-9.06,-125,-9.06,-124,-9.06,-123,-9.06,-122,-9.06,-121,-9.06,-120,-9.06,-119,-9.06,-118,-9.06,-117,-9.06,-116,-9.06,-115,-9.06,-114,-9.06,-113,-9.06,-112,-9.06,-111,-9.06,-110,-9.06,-109,-9.06,-108,-9.06,-107,-9.06,-106,-9.06,-105,-9.06,-104,-9.06,-103,-9.06,-102,-9.06,-101,-9.06,-100,-9.06,-99,-9.06,-98,-9.06,-97,-9.06,-96,-9.06,-95,-9.06,-94,-9.06,-93,-9.06,-92,-9.06,-91,-9.06,-90,-9.06,-89,-9.06,-88,-9.06,-87,-9.06,-86,-9.06,-85,-9.06,-84,-9.06,-83,-9.06,-82,-9.06,-81,-9.06,-80,-9.06,-79,-9.06,-78,-9.06,-77,-9.06,-76,-9.06,-75,-9.06,-74,-9.06,-73,-9.06,-72,-9.06,-71,-9.06,-70,-9.06,-69,-9.06,-68,-9.06,-67,-9.06,-66,-9.06,-65,-9.06,-64,-9.06,-63,-9.06,-62,-9.06,-61,-9.06,-60,-9.06,-59,-9.06,-58,-9.06,-57,-9.06,-56,-9.06,-55,-9.06,-54,-9.06,-53,-9.06,-52,-9.06,-303,-8.06,-302,-8.06,-301,-8.06,-300,-8.06,-299,-8.06,-298,-8.06,-297,-8.06,-296,-8.06,-295,-8.06,-294,-8.06,-293,-8.06,-292,-8.06,-291,-8.06,-290,-8.06,-289,-8.06,-288,-8.06,-287,-8.06,-286,-8.06,-285,-8.06,-284,-8.06,-283,-8.06,-282,-8.06,-281,-8.06,-280,-8.06,-279,-8.06,-278,-8.06,-277,-8.06,-276,-8.06,-275,-8.06,-274,-8.06,-273,-8.06,-272,-8.06,-271,-8.06,-270,-8.06,-269,-8.06,-268,-8.06,-267,-8.06,-266,-8.06,-265,-8.06,-264,-8.06,-263,-8.06,-262,-8.06,-261,-8.06,-260,-8.06,-259,-8.06,-258,-8.06,-257,-8.06,-256,-8.06,-189,-8.06,-188,-8.06,-187,-8.06,-186,-8.06,-185,-8.06,-184,-8.06,-183,-8.06,-182,-8.06,-181,-8.06,-159,-8.06,-158,-8.06,-154,-8.06,-153,-8.06,-152,-8.06,-151,-8.06,-150,-8.06,-149,-8.06,-148,-8.06,-147,-8.06,-146,-8.06,-145,-8.06,-144,-8.06,-143,-8.06,-142,-8.06,-141,-8.06,-140,-8.06,-139,-8.06,-138,-8.06,-137,-8.06,-136,-8.06,-135,-8.06,-134,-8.06,-133,-8.06,-132,-8.06,-127,-8.06,-126,-8.06,-125,-8.06,-124,-8.06,-123,-8.06,-122,-8.06,-121,-8.06,-120,-8.06,-119,-8.06,-118,-8.06,-117,-8.06,-116,-8.06,-115,-8.06,-114,-8.06,-113,-8.06,-112,-8.06,-111,-8.06,-110,-8.06,-109,-8.06,-108,-8.06,-107,-8.06,-106,-8.06,-105,-8.06,-104,-8.06,-103,-8.06,-102,-8.06,-101,-8.06,-100,-8.06,-99,-8.06,-98,-8.06,-97,-8.06,-96,-8.06,-95,-8.06,-94,-8.06,-93,-8.06,-92,-8.06,-91,-8.06,-90,-8.06,-89,-8.06,-88,-8.06,-87,-8.06,-86,-8.06,-85,-8.06,-84,-8.06,-83,-8.06,-82,-8.06,-81,-8.06,-80,-8.06,-79,-8.06,-78,-8.06,-77,-8.06,-76,-8.06,-75,-8.06,-74,-8.06,-73,-8.06,-72,-8.06,-71,-8.06,-70,-8.06,-69,-8.06,-68,-8.06,-67,-8.06,-66,-8.06,-65,-8.06,-64,-8.06,-63,-8.06,-62,-8.06,-61,-8.06,-60,-8.06,-55,-8.06,-54,-8.06,-53,-8.06,-40,-8.06,-39,-8.06,-303,-7.06,-302,-7.06,-301,-7.06,-300,-7.06,-299,-7.06,-298,-7.06,-297,-7.06,-296,-7.06,-295,-7.06,-294,-7.06,-293,-7.06,-292,-7.06,-291,-7.06,-290,-7.06,-289,-7.06,-288,-7.06,-287,-7.06,-286,-7.06,-285,-7.06,-284,-7.06,-283,-7.06,-282,-7.06,-281,-7.06,-280,-7.06,-279,-7.06,-278,-7.06,-277,-7.06,-276,-7.06,-275,-7.06,-274,-7.06,-273,-7.06,-272,-7.06,-271,-7.06,-270,-7.06,-269,-7.06,-268,-7.06,-267,-7.06,-266,-7.06,-265,-7.06,-264,-7.06,-263,-7.06,-262,-7.06,-261,-7.06,-260,-7.06,-259,-7.06,-258,-7.06,-257,-7.06,-189,-7.06,-188,-7.06,-187,-7.06,-186,-7.06,-185,-7.06,-184,-7.06,-183,-7.06,-182,-7.06,-181,-7.06,-159,-7.06,-158,-7.06,-153,-7.06,-152,-7.06,-151,-7.06,-150,-7.06,-149,-7.06,-148,-7.06,-147,-7.06,-146,-7.06,-145,-7.06,-144,-7.06,-143,-7.06,-142,-7.06,-141,-7.06,-140,-7.06,-139,-7.06,-138,-7.06,-137,-7.06,-136,-7.06,-135,-7.06,-134,-7.06,-133,-7.06,-126,-7.06,-125,-7.06,-124,-7.06,-123,-7.06,-122,-7.06,-121,-7.06,-120,-7.06,-119,-7.06,-118,-7.06,-117,-7.06,-116,-7.06,-115,-7.06,-114,-7.06,-113,-7.06,-112,-7.06,-111,-7.06,-110,-7.06,-109,-7.06,-108,-7.06,-107,-7.06,-106,-7.06,-105,-7.06,-104,-7.06,-103,-7.06,-102,-7.06,-101,-7.06,-100,-7.06,-99,-7.06,-98,-7.06,-97,-7.06,-96,-7.06,-95,-7.06,-94,-7.06,-93,-7.06,-92,-7.06,-91,-7.06,-90,-7.06,-89,-7.06,-88,-7.06,-87,-7.06,-86,-7.06,-85,-7.06,-84,-7.06,-83,-7.06,-82,-7.06,-81,-7.06,-80,-7.06,-79,-7.06,-78,-7.06,-77,-7.06,-76,-7.06,-75,-7.06,-74,-7.06,-73,-7.06,-72,-7.06,-71,-7.06,-70,-7.06,-69,-7.06,-68,-7.06,-67,-7.06,-66,-7.06,-65,-7.06,-64,-7.06,-63,-7.06,-62,-7.06,-61,-7.06,-55,-7.06,-54,-7.06,-53,-7.06,-40,-7.06,-302,-6.06,-301,-6.06,-300,-6.06,-299,-6.06,-298,-6.06,-297,-6.06,-296,-6.06,-295,-6.06,-294,-6.06,-293,-6.06,-292,-6.06,-291,-6.06,-290,-6.06,-289,-6.06,-288,-6.06,-287,-6.06,-286,-6.06,-285,-6.06,-284,-6.06,-283,-6.06,-282,-6.06,-281,-6.06,-280,-6.06,-279,-6.06,-278,-6.06,-277,-6.06,-276,-6.06,-275,-6.06,-274,-6.06,-273,-6.06,-272,-6.06,-271,-6.06,-270,-6.06,-269,-6.06,-268,-6.06,-267,-6.06,-266,-6.06,-265,-6.06,-264,-6.06,-263,-6.06,-262,-6.06,-261,-6.06,-260,-6.06,-259,-6.06,-258,-6.06,-257,-6.06,-189,-6.06,-188,-6.06,-187,-6.06,-186,-6.06,-185,-6.06,-184,-6.06,-183,-6.06,-166,-6.06,-158,-6.06,-153,-6.06,-152,-6.06,-151,-6.06,-150,-6.06,-149,-6.06,-148,-6.06,-147,-6.06,-146,-6.06,-145,-6.06,-144,-6.06,-143,-6.06,-142,-6.06,-141,-6.06,-140,-6.06,-139,-6.06,-138,-6.06,-137,-6.06,-136,-6.06,-135,-6.06,-134,-6.06,-133,-6.06,-132,-6.06,-126,-6.06,-125,-6.06,-124,-6.06,-123,-6.06,-122,-6.06,-121,-6.06,-120,-6.06,-119,-6.06,-118,-6.06,-117,-6.06,-116,-6.06,-115,-6.06,-114,-6.06,-113,-6.06,-112,-6.06,-111,-6.06,-110,-6.06,-109,-6.06,-108,-6.06,-107,-6.06,-106,-6.06,-105,-6.06,-104,-6.06,-103,-6.06,-102,-6.06,-101,-6.06,-100,-6.06,-99,-6.06,-98,-6.06,-97,-6.06,-96,-6.06,-95,-6.06,-94,-6.06,-93,-6.06,-92,-6.06,-91,-6.06,-90,-6.06,-89,-6.06,-88,-6.06,-87,-6.06,-86,-6.06,-85,-6.06,-84,-6.06,-83,-6.06,-82,-6.06,-81,-6.06,-80,-6.06,-79,-6.06,-78,-6.06,-77,-6.06,-76,-6.06,-75,-6.06,-74,-6.06,-73,-6.06,-72,-6.06,-71,-6.06,-70,-6.06,-69,-6.06,-68,-6.06,-67,-6.06,-66,-6.06,-65,-6.06,-64,-6.06,-63,-6.06,-62,-6.06,-61,-6.06,-60,-6.06,-53,-6.06,-52,-6.06,-41,-6.06,-40,-6.06,-301,-5.06,-300,-5.06,-299,-5.06,-298,-5.06,-297,-5.06,-296,-5.06,-295,-5.06,-294,-5.06,-293,-5.06,-292,-5.06,-291,-5.06,-290,-5.06,-289,-5.06,-288,-5.06,-287,-5.06,-286,-5.06,-285,-5.06,-284,-5.06,-283,-5.06,-282,-5.06,-281,-5.06,-280,-5.06,-279,-5.06,-278,-5.06,-277,-5.06,-276,-5.06,-275,-5.06,-274,-5.06,-273,-5.06,-272,-5.06,-271,-5.06,-270,-5.06,-269,-5.06,-268,-5.06,-267,-5.06,-266,-5.06,-265,-5.06,-264,-5.06,-263,-5.06,-262,-5.06,-261,-5.06,-260,-5.06,-259,-5.06,-258,-5.06,-257,-5.06,-177,-5.06,-176,-5.06,-175,-5.06,-174,-5.06,-173,-5.06,-172,-5.06,-171,-5.06,-144,-5.06,-143,-5.06,-142,-5.06,-141,-5.06,-140,-5.06,-139,-5.06,-138,-5.06,-137,-5.06,-136,-5.06,-135,-5.06,-134,-5.06,-133,-5.06,-132,-5.06,-131,-5.06,-130,-5.06,-127,-5.06,-126,-5.06,-125,-5.06,-124,-5.06,-123,-5.06,-122,-5.06,-121,-5.06,-120,-5.06,-119,-5.06,-118,-5.06,-117,-5.06,-116,-5.06,-115,-5.06,-114,-5.06,-113,-5.06,-112,-5.06,-111,-5.06,-110,-5.06,-109,-5.06,-108,-5.06,-107,-5.06,-106,-5.06,-105,-5.06,-104,-5.06,-103,-5.06,-102,-5.06,-101,-5.06,-100,-5.06,-99,-5.06,-98,-5.06,-97,-5.06,-96,-5.06,-95,-5.06,-94,-5.06,-93,-5.06,-92,-5.06,-91,-5.06,-90,-5.06,-89,-5.06,-88,-5.06,-87,-5.06,-86,-5.06,-85,-5.06,-84,-5.06,-83,-5.06,-82,-5.06,-81,-5.06,-80,-5.06,-79,-5.06,-78,-5.06,-77,-5.06,-76,-5.06,-75,-5.06,-74,-5.06,-73,-5.06,-72,-5.06,-71,-5.06,-70,-5.06,-69,-5.06,-68,-5.06,-67,-5.06,-66,-5.06,-65,-5.06,-64,-5.06,-63,-5.06,-62,-5.06,-61,-5.06,-60,-5.06,-53,-5.06,-52,-5.06,-43,-5.06,-42,-5.06,-41,-5.06,-40,-5.06,-301,-4.06,-300,-4.06,-299,-4.06,-298,-4.06,-297,-4.06,-296,-4.06,-295,-4.06,-294,-4.06,-293,-4.06,-292,-4.06,-291,-4.06,-290,-4.06,-289,-4.06,-288,-4.06,-287,-4.06,-286,-4.06,-285,-4.06,-284,-4.06,-283,-4.06,-282,-4.06,-281,-4.06,-280,-4.06,-279,-4.06,-278,-4.06,-277,-4.06,-276,-4.06,-275,-4.06,-274,-4.06,-273,-4.06,-272,-4.06,-271,-4.06,-270,-4.06,-269,-4.06,-268,-4.06,-267,-4.06,-266,-4.06,-265,-4.06,-264,-4.06,-263,-4.06,-262,-4.06,-261,-4.06,-260,-4.06,-259,-4.06,-258,-4.06,-257,-4.06,-181,-4.06,-180,-4.06,-179,-4.06,-178,-4.06,-177,-4.06,-176,-4.06,-175,-4.06,-174,-4.06,-173,-4.06,-172,-4.06,-171,-4.06,-170,-4.06,-144,-4.06,-143,-4.06,-142,-4.06,-141,-4.06,-140,-4.06,-139,-4.06,-138,-4.06,-137,-4.06,-136,-4.06,-135,-4.06,-134,-4.06,-133,-4.06,-132,-4.06,-131,-4.06,-130,-4.06,-129,-4.06,-128,-4.06,-127,-4.06,-126,-4.06,-125,-4.06,-124,-4.06,-123,-4.06,-122,-4.06,-121,-4.06,-120,-4.06,-119,-4.06,-118,-4.06,-117,-4.06,-116,-4.06,-115,-4.06,-114,-4.06,-113,-4.06,-112,-4.06,-111,-4.06,-110,-4.06,-109,-4.06,-108,-4.06,-107,-4.06,-106,-4.06,-105,-4.06,-104,-4.06,-103,-4.06,-102,-4.06,-101,-4.06,-100,-4.06,-99,-4.06,-98,-4.06,-97,-4.06,-96,-4.06,-95,-4.06,-94,-4.06,-93,-4.06,-92,-4.06,-91,-4.06,-90,-4.06,-89,-4.06,-88,-4.06,-87,-4.06,-86,-4.06,-85,-4.06,-84,-4.06,-83,-4.06,-82,-4.06,-81,-4.06,-80,-4.06,-79,-4.06,-78,-4.06,-77,-4.06,-76,-4.06,-75,-4.06,-74,-4.06,-73,-4.06,-72,-4.06,-71,-4.06,-70,-4.06,-69,-4.06,-68,-4.06,-67,-4.06,-66,-4.06,-65,-4.06,-64,-4.06,-63,-4.06,-62,-4.06,-53,-4.06,-52,-4.06,-44,-4.06,-43,-4.06,-42,-4.06,-41,-4.06,-300,-3.0642,-299,-3.0642,-298,-3.0642,-297,-3.0642,-296,-3.0642,-295,-3.0642,-294,-3.0642,-293,-3.0642,-292,-3.0642,-291,-3.0642,-290,-3.0642,-289,-3.0642,-288,-3.0642,-287,-3.0642,-286,-3.0642,-285,-3.0642,-284,-3.0642,-283,-3.0642,-282,-3.0642,-281,-3.0642,-280,-3.0642,-279,-3.0642,-278,-3.0642,-277,-3.0642,-276,-3.0642,-275,-3.0642,-274,-3.0642,-273,-3.0642,-272,-3.0642,-271,-3.0642,-270,-3.0642,-269,-3.0642,-268,-3.0642,-267,-3.0642,-266,-3.0642,-265,-3.0642,-264,-3.0642,-263,-3.0642,-262,-3.0642,-261,-3.0642,-260,-3.0642,-259,-3.0642,-186,-3.0642,-185,-3.0642,-184,-3.0642,-183,-3.0642,-182,-3.0642,-181,-3.0642,-180,-3.0642,-179,-3.0642,-178,-3.0642,-177,-3.0642,-176,-3.0642,-175,-3.0642,-174,-3.0642,-173,-3.0642,-172,-3.0642,-171,-3.0642,-144,-3.0642,-143,-3.0642,-142,-3.0642,-141,-3.0642,-140,-3.0642,-139,-3.0642,-138,-3.0642,-137,-3.0642,-136,-3.0642,-135,-3.0642,-134,-3.0642,-133,-3.0642,-132,-3.0642,-131,-3.0642,-130,-3.0642,-129,-3.0642,-128,-3.0642,-127,-3.0642,-126,-3.0642,-125,-3.0642,-124,-3.0642,-123,-3.0642,-122,-3.0642,-121,-3.0642,-120,-3.0642,-119,-3.0642,-118,-3.0642,-117,-3.0642,-116,-3.0642,-115,-3.0642,-114,-3.0642,-113,-3.0642,-112,-3.0642,-111,-3.0642,-110,-3.0642,-109,-3.0642,-108,-3.0642,-107,-3.0642,-106,-3.0642,-105,-3.0642,-104,-3.0642,-103,-3.0642,-102,-3.0642,-101,-3.0642,-100,-3.0642,-99,-3.0642,-98,-3.0642,-97,-3.0642,-96,-3.0642,-95,-3.0642,-94,-3.0642,-93,-3.0642,-92,-3.0642,-91,-3.0642,-90,-3.0642,-89,-3.0642,-88,-3.0642,-87,-3.0642,-86,-3.0642,-85,-3.0642,-84,-3.0642,-83,-3.0642,-82,-3.0642,-81,-3.0642,-80,-3.0642,-79,-3.0642,-78,-3.0642,-77,-3.0642,-76,-3.0642,-75,-3.0642,-74,-3.0642,-73,-3.0642,-72,-3.0642,-71,-3.0642,-70,-3.0642,-69,-3.0642,-68,-3.0642,-67,-3.0642,-66,-3.0642,-65,-3.0642,-64,-3.0642,-63,-3.0642,-62,-3.0642,-47,-3.0642,-44,-3.0642,-297,-2.0642,-296,-2.0642,-295,-2.0642,-294,-2.0642,-293,-2.0642,-292,-2.0642,-291,-2.0642,-290,-2.0642,-289,-2.0642,-288,-2.0642,-287,-2.0642,-286,-2.0642,-285,-2.0642,-284,-2.0642,-283,-2.0642,-282,-2.0642,-281,-2.0642,-280,-2.0642,-279,-2.0642,-278,-2.0642,-277,-2.0642,-276,-2.0642,-275,-2.0642,-274,-2.0642,-273,-2.0642,-272,-2.0642,-271,-2.0642,-270,-2.0642,-269,-2.0642,-268,-2.0642,-267,-2.0642,-266,-2.0642,-265,-2.0642,-264,-2.0642,-263,-2.0642,-262,-2.0642,-261,-2.0642,-187,-2.0642,-186,-2.0642,-185,-2.0642,-184,-2.0642,-183,-2.0642,-182,-2.0642,-181,-2.0642,-180,-2.0642,-179,-2.0642,-178,-2.0642,-177,-2.0642,-176,-2.0642,-175,-2.0642,-174,-2.0642,-173,-2.0642,-172,-2.0642,-171,-2.0642,-144,-2.0642,-143,-2.0642,-142,-2.0642,-141,-2.0642,-140,-2.0642,-139,-2.0642,-138,-2.0642,-137,-2.0642,-136,-2.0642,-135,-2.0642,-134,-2.0642,-133,-2.0642,-132,-2.0642,-131,-2.0642,-130,-2.0642,-129,-2.0642,-128,-2.0642,-127,-2.0642,-126,-2.0642,-125,-2.0642,-124,-2.0642,-123,-2.0642,-122,-2.0642,-121,-2.0642,-120,-2.0642,-119,-2.0642,-118,-2.0642,-117,-2.0642,-116,-2.0642,-115,-2.0642,-114,-2.0642,-113,-2.0642,-112,-2.0642,-111,-2.0642,-110,-2.0642,-109,-2.0642,-108,-2.0642,-107,-2.0642,-106,-2.0642,-105,-2.0642,-104,-2.0642,-103,-2.0642,-102,-2.0642,-101,-2.0642,-100,-2.0642,-99,-2.0642,-98,-2.0642,-97,-2.0642,-96,-2.0642,-95,-2.0642,-94,-2.0642,-93,-2.0642,-92,-2.0642,-91,-2.0642,-90,-2.0642,-89,-2.0642,-88,-2.0642,-87,-2.0642,-86,-2.0642,-85,-2.0642,-84,-2.0642,-83,-2.0642,-82,-2.0642,-81,-2.0642,-80,-2.0642,-79,-2.0642,-78,-2.0642,-77,-2.0642,-76,-2.0642,-75,-2.0642,-74,-2.0642,-73,-2.0642,-72,-2.0642,-71,-2.0642,-70,-2.0642,-69,-2.0642,-68,-2.0642,-67,-2.0642,-66,-2.0642,-65,-2.0642,-64,-2.0642,-63,-2.0642,-62,-2.0642,-61,-2.0642,-60,-2.0642,-59,-2.0642,-297,-1.0642,-296,-1.0642,-295,-1.0642,-294,-1.0642,-293,-1.0642,-292,-1.0642,-291,-1.0642,-290,-1.0642,-289,-1.0642,-288,-1.0642,-287,-1.0642,-286,-1.0642,-285,-1.0642,-284,-1.0642,-283,-1.0642,-282,-1.0642,-281,-1.0642,-280,-1.0642,-279,-1.0642,-278,-1.0642,-277,-1.0642,-276,-1.0642,-275,-1.0642,-274,-1.0642,-273,-1.0642,-272,-1.0642,-271,-1.0642,-270,-1.0642,-269,-1.0642,-268,-1.0642,-267,-1.0642,-266,-1.0642,-265,-1.0642,-264,-1.0642,-263,-1.0642,-262,-1.0642,-189,-1.0642,-188,-1.0642,-187,-1.0642,-186,-1.0642,-185,-1.0642,-184,-1.0642,-183,-1.0642,-182,-1.0642,-181,-1.0642,-180,-1.0642,-179,-1.0642,-178,-1.0642,-177,-1.0642,-176,-1.0642,-175,-1.0642,-174,-1.0642,-173,-1.0642,-172,-1.0642,-171,-1.0642,-170,-1.0642,-169,-1.0642,-145,-1.0642,-144,-1.0642,-143,-1.0642,-142,-1.0642,-141,-1.0642,-140,-1.0642,-139,-1.0642,-138,-1.0642,-137,-1.0642,-136,-1.0642,-135,-1.0642,-134,-1.0642,-133,-1.0642,-132,-1.0642,-131,-1.0642,-130,-1.0642,-129,-1.0642,-128,-1.0642,-127,-1.0642,-126,-1.0642,-125,-1.0642,-124,-1.0642,-123,-1.0642,-122,-1.0642,-121,-1.0642,-120,-1.0642,-119,-1.0642,-118,-1.0642,-117,-1.0642,-116,-1.0642,-115,-1.0642,-114,-1.0642,-113,-1.0642,-112,-1.0642,-111,-1.0642,-110,-1.0642,-109,-1.0642,-108,-1.0642,-107,-1.0642,-106,-1.0642,-105,-1.0642,-104,-1.0642,-103,-1.0642,-102,-1.0642,-101,-1.0642,-100,-1.0642,-99,-1.0642,-98,-1.0642,-97,-1.0642,-96,-1.0642,-95,-1.0642,-94,-1.0642,-93,-1.0642,-92,-1.0642,-91,-1.0642,-90,-1.0642,-89,-1.0642,-88,-1.0642,-87,-1.0642,-86,-1.0642,-85,-1.0642,-84,-1.0642,-83,-1.0642,-82,-1.0642,-81,-1.0642,-80,-1.0642,-79,-1.0642,-78,-1.0642,-77,-1.0642,-76,-1.0642,-75,-1.0642,-74,-1.0642,-73,-1.0642,-72,-1.0642,-71,-1.0642,-70,-1.0642,-69,-1.0642,-68,-1.0642,-67,-1.0642,-66,-1.0642,-65,-1.0642,-64,-1.0642,-63,-1.0642,-62,-1.0642,-61,-1.0642,-60,-1.0642,-59,-1.0642,-296,-.06,-293,-.06,-292,-.06,-291,-.06,-290,-.06,-289,-.06,-288,-.06,-287,-.06,-286,-.06,-285,-.06,-284,-.06,-283,-.06,-282,-.06,-281,-.06,-280,-.06,-279,-.06,-278,-.06,-277,-.06,-276,-.06,-275,-.06,-274,-.06,-273,-.06,-272,-.06,-271,-.06,-270,-.06,-269,-.06,-268,-.06,-267,-.06,-266,-.06,-265,-.06,-264,-.06,-263,-.06,-190,-.06,-189,-.06,-188,-.06,-187,-.06,-186,-.06,-185,-.06,-184,-.06,-183,-.06,-182,-.06,-181,-.06,-180,-.06,-179,-.06,-178,-.06,-177,-.06,-176,-.06,-175,-.06,-174,-.06,-173,-.06,-172,-.06,-171,-.06,-170,-.06,-169,-.06,-168,-.06,-167,-.06,-166,-.06,-160,-.06,-159,-.06,-158,-.06,-157,-.06,-156,-.06,-145,-.06,-144,-.06,-143,-.06,-142,-.06,-141,-.06,-140,-.06,-139,-.06,-138,-.06,-137,-.06,-136,-.06,-135,-.06,-134,-.06,-133,-.06,-132,-.06,-131,-.06,-130,-.06,-129,-.06,-128,-.06,-127,-.06,-126,-.06,-125,-.06,-124,-.06,-123,-.06,-122,-.06,-121,-.06,-120,-.06,-119,-.06,-118,-.06,-117,-.06,-116,-.06,-115,-.06,-114,-.06,-113,-.06,-112,-.06,-111,-.06,-110,-.06,-109,-.06,-108,-.06,-107,-.06,-106,-.06,-105,-.06,-104,-.06,-103,-.06,-102,-.06,-101,-.06,-100,-.06,-99,-.06,-98,-.06,-97,-.06,-96,-.06,-95,-.06,-94,-.06,-93,-.06,-92,-.06,-91,-.06,-90,-.06,-89,-.06,-88,-.06,-87,-.06,-86,-.06,-85,-.06,-84,-.06,-83,-.06,-82,-.06,-81,-.06,-80,-.06,-79,-.06,-78,-.06,-77,-.06,-76,-.06,-75,-.06,-74,-.06,-73,-.06,-72,-.06,-71,-.06,-70,-.06,-69,-.06,-68,-.06,-67,-.06,-66,-.06,-65,-.06,-64,-.06,-63,-.06,-62,-.06,-61,-.06,-60,-.06,-59,-.06,-296,.93,-292,.93,-291,.93,-290,.93,-289,.93,-288,.93,-287,.93,-286,.93,-285,.93,-284,.93,-283,.93,-282,.93,-281,.93,-280,.93,-279,.93,-278,.93,-277,.93,-276,.93,-275,.93,-274,.93,-273,.93,-272,.93,-271,.93,-270,.93,-265,.93,-264,.93,-263,.93,-190,.93,-189,.93,-188,.93,-187,.93,-186,.93,-185,.93,-184,.93,-183,.93,-182,.93,-181,.93,-180,.93,-179,.93,-178,.93,-177,.93,-176,.93,-175,.93,-174,.93,-173,.93,-172,.93,-171,.93,-170,.93,-169,.93,-168,.93,-167,.93,-166,.93,-165,.93,-164,.93,-163,.93,-160,.93,-159,.93,-158,.93,-157,.93,-156,.93,-155,.93,-154,.93,-153,.93,-152,.93,-151,.93,-150,.93,-149,.93,-148,.93,-147,.93,-146,.93,-145,.93,-144,.93,-143,.93,-142,.93,-141,.93,-140,.93,-139,.93,-138,.93,-137,.93,-136,.93,-135,.93,-134,.93,-133,.93,-132,.93,-131,.93,-130,.93,-129,.93,-128,.93,-127,.93,-126,.93,-125,.93,-124,.93,-123,.93,-122,.93,-121,.93,-120,.93,-119,.93,-118,.93,-117,.93,-116,.93,-115,.93,-114,.93,-113,.93,-112,.93,-111,.93,-110,.93,-109,.93,-108,.93,-107,.93,-106,.93,-105,.93,-104,.93,-103,.93,-102,.93,-101,.93,-100,.93,-99,.93,-98,.93,-97,.93,-96,.93,-95,.93,-94,.93,-93,.93,-92,.93,-91,.93,-90,.93,-89,.93,-88,.93,-87,.93,-86,.93,-85,.93,-84,.93,-83,.93,-82,.93,-81,.93,-80,.93,-79,.93,-78,.93,-77,.93,-76,.93,-75,.93,-74,.93,-73,.93,-72,.93,-71,.93,-70,.93,-69,.93,-68,.93,-67,.93,-66,.93,-65,.93,-64,.93,-63,.93,-62,.93,-61,.93,-60,.93,-59,.93,-292,1.93,-291,1.93,-290,1.93,-289,1.93,-288,1.93,-287,1.93,-286,1.93,-285,1.93,-284,1.93,-283,1.93,-282,1.93,-281,1.93,-280,1.93,-279,1.93,-278,1.93,-277,1.93,-276,1.93,-263,1.93,-190,1.93,-189,1.93,-188,1.93,-187,1.93,-186,1.93,-185,1.93,-184,1.93,-183,1.93,-182,1.93,-181,1.93,-180,1.93,-179,1.93,-178,1.93,-177,1.93,-176,1.93,-175,1.93,-174,1.93,-173,1.93,-172,1.93,-171,1.93,-170,1.93,-169,1.93,-168,1.93,-167,1.93,-166,1.93,-165,1.93,-164,1.93,-163,1.93,-162,1.93,-161,1.93,-160,1.93,-159,1.93,-158,1.93,-157,1.93,-156,1.93,-155,1.93,-154,1.93,-153,1.93,-152,1.93,-151,1.93,-150,1.93,-149,1.93,-148,1.93,-147,1.93,-146,1.93,-145,1.93,-144,1.93,-143,1.93,-142,1.93,-141,1.93,-140,1.93,-139,1.93,-138,1.93,-137,1.93,-136,1.93,-135,1.93,-134,1.93,-133,1.93,-129,1.93,-128,1.93,-127,1.93,-126,1.93,-125,1.93,-124,1.93,-123,1.93,-122,1.93,-121,1.93,-120,1.93,-119,1.93,-118,1.93,-117,1.93,-116,1.93,-115,1.93,-114,1.93,-113,1.93,-112,1.93,-111,1.93,-110,1.93,-109,1.93,-108,1.93,-107,1.93,-106,1.93,-105,1.93,-104,1.93,-103,1.93,-102,1.93,-101,1.93,-100,1.93,-99,1.93,-98,1.93,-97,1.93,-96,1.93,-95,1.93,-94,1.93,-93,1.93,-92,1.93,-91,1.93,-90,1.93,-89,1.93,-88,1.93,-87,1.93,-86,1.93,-85,1.93,-84,1.93,-83,1.93,-82,1.93,-81,1.93,-80,1.93,-79,1.93,-78,1.93,-77,1.93,-76,1.93,-75,1.93,-74,1.93,-73,1.93,-72,1.93,-71,1.93,-70,1.93,-69,1.93,-68,1.93,-67,1.93,-66,1.93,-65,1.93,-64,1.93,-63,1.93,-62,1.93,-61,1.93,-60,1.93,-59,1.93,-291,2.93,-290,2.93,-289,2.93,-288,2.93,-287,2.93,-286,2.93,-285,2.93,-284,2.93,-283,2.93,-282,2.93,-281,2.93,-280,2.93,-279,2.93,-278,2.93,-263,2.93,-262,2.93,-191,2.93,-190,2.93,-189,2.93,-188,2.93,-187,2.93,-186,2.93,-185,2.93,-184,2.93,-183,2.93,-182,2.93,-181,2.93,-180,2.93,-179,2.93,-178,2.93,-177,2.93,-176,2.93,-175,2.93,-174,2.93,-173,2.93,-172,2.93,-171,2.93,-170,2.93,-169,2.93,-168,2.93,-167,2.93,-166,2.93,-165,2.93,-164,2.93,-163,2.93,-162,2.93,-161,2.93,-160,2.93,-159,2.93,-158,2.93,-157,2.93,-156,2.93,-155,2.93,-154,2.93,-153,2.93,-152,2.93,-151,2.93,-150,2.93,-149,2.93,-148,2.93,-147,2.93,-146,2.93,-145,2.93,-144,2.93,-143,2.93,-142,2.93,-141,2.93,-140,2.93,-139,2.93,-138,2.93,-137,2.93,-136,2.93,-135,2.93,-134,2.93,-133,2.93,-129,2.93,-128,2.93,-127,2.93,-126,2.93,-125,2.93,-124,2.93,-123,2.93,-122,2.93,-121,2.93,-120,2.93,-119,2.93,-118,2.93,-117,2.93,-116,2.93,-115,2.93,-114,2.93,-113,2.93,-112,2.93,-111,2.93,-110,2.93,-109,2.93,-108,2.93,-107,2.93,-106,2.93,-105,2.93,-104,2.93,-103,2.93,-102,2.93,-101,2.93,-100,2.93,-99,2.93,-98,2.93,-97,2.93,-96,2.93,-95,2.93,-94,2.93,-93,2.93,-92,2.93,-91,2.93,-90,2.93,-89,2.93,-88,2.93,-87,2.93,-86,2.93,-85,2.93,-84,2.93,-83,2.93,-82,2.93,-81,2.93,-80,2.93,-79,2.93,-78,2.93,-77,2.93,-76,2.93,-75,2.93,-74,2.93,-73,2.93,-72,2.93,-71,2.93,-70,2.93,-69,2.93,-68,2.93,-67,2.93,-66,2.93,-65,2.93,-64,2.93,-63,2.93,-62,2.93,-61,2.93,-60,2.93,-294,3.93,-290,3.93,-289,3.93,-288,3.93,-287,3.93,-286,3.93,-285,3.93,-284,3.93,-283,3.93,-282,3.93,-281,3.93,-280,3.93,-279,3.93,-262,3.93,-193,3.93,-192,3.93,-191,3.93,-190,3.93,-189,3.93,-188,3.93,-187,3.93,-186,3.93,-185,3.93,-184,3.93,-183,3.93,-182,3.93,-181,3.93,-180,3.93,-179,3.93,-178,3.93,-177,3.93,-176,3.93,-175,3.93,-174,3.93,-173,3.93,-172,3.93,-171,3.93,-170,3.93,-169,3.93,-168,3.93,-167,3.93,-166,3.93,-165,3.93,-164,3.93,-163,3.93,-162,3.93,-161,3.93,-160,3.93,-159,3.93,-158,3.93,-157,3.93,-156,3.93,-155,3.93,-154,3.93,-153,3.93,-152,3.93,-151,3.93,-150,3.93,-149,3.93,-148,3.93,-147,3.93,-144,3.93,-143,3.93,-142,3.93,-141,3.93,-140,3.93,-139,3.93,-138,3.93,-137,3.93,-136,3.93,-135,3.93,-134,3.93,-133,3.93,-132,3.93,-127,3.93,-126,3.93,-125,3.93,-124,3.93,-123,3.93,-122,3.93,-121,3.93,-120,3.93,-119,3.93,-118,3.93,-117,3.93,-116,3.93,-115,3.93,-114,3.93,-113,3.93,-112,3.93,-111,3.93,-110,3.93,-109,3.93,-108,3.93,-107,3.93,-106,3.93,-105,3.93,-104,3.93,-103,3.93,-102,3.93,-101,3.93,-100,3.93,-99,3.93,-98,3.93,-97,3.93,-96,3.93,-95,3.93,-94,3.93,-93,3.93,-92,3.93,-91,3.93,-90,3.93,-89,3.93,-88,3.93,-87,3.93,-86,3.93,-85,3.93,-84,3.93,-83,3.93,-82,3.93,-81,3.93,-80,3.93,-79,3.93,-78,3.93,-77,3.93,-76,3.93,-75,3.93,-74,3.93,-73,3.93,-72,3.93,-71,3.93,-70,3.93,-69,3.93,-68,3.93,-67,3.93,-66,3.93,-65,3.93,-64,3.93,-63,3.93,-62,3.93,-61,3.93,-60,3.93,-289,4.93,-288,4.93,-287,4.93,-286,4.93,-285,4.93,-284,4.93,-283,4.93,-282,4.93,-281,4.93,-280,4.93,-279,4.93,-262,4.93,-261,4.93,-193,4.93,-192,4.93,-191,4.93,-190,4.93,-189,4.93,-188,4.93,-187,4.93,-186,4.93,-185,4.93,-184,4.93,-183,4.93,-182,4.93,-181,4.93,-180,4.93,-179,4.93,-178,4.93,-177,4.93,-176,4.93,-175,4.93,-174,4.93,-173,4.93,-172,4.93,-171,4.93,-170,4.93,-169,4.93,-168,4.93,-167,4.93,-166,4.93,-165,4.93,-164,4.93,-163,4.93,-162,4.93,-161,4.93,-160,4.93,-159,4.93,-158,4.93,-157,4.93,-156,4.93,-155,4.93,-154,4.93,-153,4.93,-152,4.93,-151,4.93,-150,4.93,-149,4.93,-148,4.93,-147,4.93,-144,4.93,-143,4.93,-142,4.93,-141,4.93,-140,4.93,-139,4.93,-138,4.93,-137,4.93,-136,4.93,-135,4.93,-134,4.93,-133,4.93,-132,4.93,-131,4.93,-122,4.93,-121,4.93,-120,4.93,-119,4.93,-118,4.93,-117,4.93,-116,4.93,-115,4.93,-114,4.93,-113,4.93,-112,4.93,-111,4.93,-110,4.93,-109,4.93,-108,4.93,-107,4.93,-106,4.93,-105,4.93,-104,4.93,-103,4.93,-102,4.93,-101,4.93,-100,4.93,-99,4.93,-98,4.93,-97,4.93,-96,4.93,-95,4.93,-94,4.93,-93,4.93,-92,4.93,-91,4.93,-90,4.93,-89,4.93,-88,4.93,-87,4.93,-86,4.93,-85,4.93,-84,4.93,-83,4.93,-82,4.93,-81,4.93,-80,4.93,-79,4.93,-78,4.93,-77,4.93,-76,4.93,-75,4.93,-74,4.93,-73,4.93,-72,4.93,-71,4.93,-70,4.93,-69,4.93,-68,4.93,-67,4.93,-66,4.93,-65,4.93,-64,4.93,-63,4.93,-62,4.93,-61,4.93,-289,5.93,-288,5.93,-287,5.93,-286,5.93,-285,5.93,-284,5.93,-283,5.93,-282,5.93,-281,5.93,-280,5.93,-279,5.93,-194,5.93,-193,5.93,-192,5.93,-191,5.93,-190,5.93,-189,5.93,-188,5.93,-187,5.93,-186,5.93,-185,5.93,-184,5.93,-183,5.93,-182,5.93,-181,5.93,-180,5.93,-179,5.93,-178,5.93,-177,5.93,-176,5.93,-175,5.93,-174,5.93,-173,5.93,-172,5.93,-171,5.93,-170,5.93,-169,5.93,-168,5.93,-167,5.93,-166,5.93,-165,5.93,-164,5.93,-163,5.93,-162,5.93,-161,5.93,-160,5.93,-159,5.93,-158,5.93,-157,5.93,-156,5.93,-155,5.93,-154,5.93,-153,5.93,-152,5.93,-151,5.93,-150,5.93,-149,5.93,-148,5.93,-147,5.93,-143,5.93,-142,5.93,-141,5.93,-140,5.93,-139,5.93,-138,5.93,-137,5.93,-136,5.93,-135,5.93,-134,5.93,-133,5.93,-132,5.93,-131,5.93,-130,5.93,-119,5.93,-113,5.93,-112,5.93,-111,5.93,-110,5.93,-109,5.93,-108,5.93,-107,5.93,-106,5.93,-105,5.93,-104,5.93,-103,5.93,-102,5.93,-101,5.93,-100,5.93,-99,5.93,-98,5.93,-97,5.93,-96,5.93,-95,5.93,-94,5.93,-93,5.93,-92,5.93,-91,5.93,-90,5.93,-89,5.93,-88,5.93,-87,5.93,-86,5.93,-85,5.93,-84,5.93,-83,5.93,-82,5.93,-81,5.93,-80,5.93,-79,5.93,-78,5.93,-77,5.93,-76,5.93,-75,5.93,-74,5.93,-73,5.93,-72,5.93,-71,5.93,-70,5.93,-69,5.93,-68,5.93,-67,5.93,-66,5.93,-65,5.93,-64,5.93,-63,5.93,-62,5.93,-61,5.93,-288,6.93,-287,6.93,-286,6.93,-285,6.93,-284,6.93,-283,6.93,-282,6.93,-281,6.93,-280,6.93,-279,6.93,-259,6.93,-195,6.93,-194,6.93,-193,6.93,-192,6.93,-191,6.93,-190,6.93,-189,6.93,-188,6.93,-187,6.93,-186,6.93,-185,6.93,-184,6.93,-183,6.93,-182,6.93,-181,6.93,-180,6.93,-179,6.93,-178,6.93,-177,6.93,-176,6.93,-175,6.93,-174,6.93,-173,6.93,-172,6.93,-171,6.93,-170,6.93,-169,6.93,-168,6.93,-167,6.93,-166,6.93,-165,6.93,-164,6.93,-163,6.93,-162,6.93,-161,6.93,-160,6.93,-159,6.93,-158,6.93,-157,6.93,-156,6.93,-155,6.93,-154,6.93,-153,6.93,-152,6.93,-151,6.93,-150,6.93,-149,6.93,-148,6.93,-147,6.93,-146,6.93,-142,6.93,-141,6.93,-140,6.93,-139,6.93,-138,6.93,-137,6.93,-136,6.93,-135,6.93,-134,6.93,-133,6.93,-132,6.93,-131,6.93,-130,6.93,-125,6.93,-112,6.93,-111,6.93,-110,6.93,-109,6.93,-108,6.93,-107,6.93,-106,6.93,-105,6.93,-104,6.93,-103,6.93,-102,6.93,-101,6.93,-100,6.93,-99,6.93,-98,6.93,-97,6.93,-96,6.93,-95,6.93,-94,6.93,-93,6.93,-92,6.93,-91,6.93,-90,6.93,-89,6.93,-88,6.93,-87,6.93,-86,6.93,-85,6.93,-84,6.93,-83,6.93,-82,6.93,-81,6.93,-80,6.93,-79,6.93,-78,6.93,-77,6.93,-76,6.93,-75,6.93,-74,6.93,-73,6.93,-72,6.93,-71,6.93,-70,6.93,-69,6.93,-68,6.93,-67,6.93,-66,6.93,-65,6.93,-64,6.93,-63,6.93,-62,6.93,-286,7.93,-285,7.93,-284,7.93,-283,7.93,-282,7.93,-281,7.93,-280,7.93,-279,7.93,-258,7.93,-195,7.93,-194,7.93,-193,7.93,-192,7.93,-191,7.93,-190,7.93,-189,7.93,-188,7.93,-187,7.93,-186,7.93,-185,7.93,-184,7.93,-183,7.93,-182,7.93,-181,7.93,-180,7.93,-179,7.93,-178,7.93,-177,7.93,-176,7.93,-175,7.93,-174,7.93,-173,7.93,-172,7.93,-171,7.93,-170,7.93,-169,7.93,-168,7.93,-167,7.93,-166,7.93,-165,7.93,-164,7.93,-163,7.93,-162,7.93,-161,7.93,-160,7.93,-159,7.93,-158,7.93,-157,7.93,-156,7.93,-155,7.93,-154,7.93,-153,7.93,-152,7.93,-151,7.93,-150,7.93,-149,7.93,-148,7.93,-147,7.93,-146,7.93,-145,7.93,-141,7.93,-140,7.93,-139,7.93,-138,7.93,-137,7.93,-136,7.93,-135,7.93,-134,7.93,-133,7.93,-132,7.93,-131,7.93,-130,7.93,-129,7.93,-128,7.93,-127,7.93,-126,7.93,-125,7.93,-124,7.93,-111,7.93,-110,7.93,-109,7.93,-108,7.93,-107,7.93,-106,7.93,-105,7.93,-104,7.93,-103,7.93,-102,7.93,-101,7.93,-100,7.93,-99,7.93,-98,7.93,-97,7.93,-96,7.93,-95,7.93,-94,7.93,-93,7.93,-92,7.93,-91,7.93,-90,7.93,-89,7.93,-88,7.93,-87,7.93,-86,7.93,-85,7.93,-84,7.93,-83,7.93,-82,7.93,-81,7.93,-80,7.93,-79,7.93,-78,7.93,-77,7.93,-76,7.93,-75,7.93,-74,7.93,-73,7.93,-72,7.93,-71,7.93,-70,7.93,-69,7.93,-68,7.93,-67,7.93,-66,7.93,-65,7.93,-64,7.93,-286,8.93,-285,8.93,-284,8.93,-283,8.93,-282,8.93,-281,8.93,-280,8.93,-279,8.93,-263,8.93,-259,8.93,-258,8.93,-196,8.93,-195,8.93,-194,8.93,-193,8.93,-192,8.93,-191,8.93,-190,8.93,-189,8.93,-188,8.93,-187,8.93,-186,8.93,-185,8.93,-184,8.93,-183,8.93,-182,8.93,-181,8.93,-180,8.93,-179,8.93,-178,8.93,-177,8.93,-176,8.93,-175,8.93,-174,8.93,-173,8.93,-172,8.93,-171,8.93,-170,8.93,-169,8.93,-168,8.93,-167,8.93,-166,8.93,-165,8.93,-164,8.93,-163,8.93,-162,8.93,-161,8.93,-160,8.93,-159,8.93,-158,8.93,-157,8.93,-156,8.93,-155,8.93,-154,8.93,-153,8.93,-152,8.93,-151,8.93,-150,8.93,-149,8.93,-148,8.93,-147,8.93,-146,8.93,-145,8.93,-141,8.93,-140,8.93,-139,8.93,-138,8.93,-137,8.93,-136,8.93,-135,8.93,-134,8.93,-133,8.93,-132,8.93,-131,8.93,-130,8.93,-129,8.93,-128,8.93,-127,8.93,-126,8.93,-125,8.93,-124,8.93,-123,8.93,-122,8.93,-111,8.93,-110,8.93,-109,8.93,-108,8.93,-107,8.93,-106,8.93,-105,8.93,-104,8.93,-103,8.93,-102,8.93,-101,8.93,-100,8.93,-99,8.93,-98,8.93,-97,8.93,-96,8.93,-95,8.93,-94,8.93,-93,8.93,-92,8.93,-91,8.93,-90,8.93,-89,8.93,-88,8.93,-87,8.93,-86,8.93,-85,8.93,-84,8.93,-83,8.93,-82,8.93,-81,8.93,-80,8.93,-79,8.93,-78,8.93,-77,8.93,-76,8.93,-75,8.93,-74,8.93,-73,8.93,-72,8.93,-71,8.93,-70,8.93,-69,8.93,-68,8.93,-67,8.93,-285,9.93,-284,9.93,-283,9.93,-282,9.93,-281,9.93,-280,9.93,-279,9.93,-258,9.93,-196,9.93,-195,9.93,-194,9.93,-193,9.93,-192,9.93,-191,9.93,-190,9.93,-189,9.93,-188,9.93,-187,9.93,-186,9.93,-185,9.93,-184,9.93,-183,9.93,-182,9.93,-181,9.93,-180,9.93,-179,9.93,-178,9.93,-177,9.93,-176,9.93,-175,9.93,-174,9.93,-173,9.93,-172,9.93,-171,9.93,-170,9.93,-169,9.93,-168,9.93,-167,9.93,-166,9.93,-165,9.93,-164,9.93,-163,9.93,-162,9.93,-161,9.93,-160,9.93,-159,9.93,-158,9.93,-157,9.93,-156,9.93,-155,9.93,-154,9.93,-153,9.93,-152,9.93,-151,9.93,-150,9.93,-149,9.93,-148,9.93,-147,9.93,-146,9.93,-145,9.93,-144,9.93,-140,9.93,-139,9.93,-138,9.93,-137,9.93,-136,9.93,-135,9.93,-134,9.93,-133,9.93,-132,9.93,-131,9.93,-130,9.93,-129,9.93,-128,9.93,-127,9.93,-126,9.93,-125,9.93,-124,9.93,-123,9.93,-122,9.93,-110,9.93,-109,9.93,-108,9.93,-107,9.93,-106,9.93,-105,9.93,-104,9.93,-103,9.93,-102,9.93,-101,9.93,-100,9.93,-99,9.93,-98,9.93,-97,9.93,-96,9.93,-95,9.93,-94,9.93,-88,9.93,-87,9.93,-86,9.93,-85,9.93,-84,9.93,-83,9.93,-82,9.93,-81,9.93,-80,9.93,-79,9.93,-78,9.93,-77,9.93,-76,9.93,-75,9.93,-74,9.93,-73,9.93,-71,9.93,-70,9.93,-285,10.93,-284,10.93,-283,10.93,-282,10.93,-281,10.93,-280,10.93,-279,10.93,-278,10.93,-270,10.93,-269,10.93,-257,10.93,-196,10.93,-195,10.93,-194,10.93,-193,10.93,-192,10.93,-191,10.93,-190,10.93,-189,10.93,-188,10.93,-187,10.93,-186,10.93,-185,10.93,-184,10.93,-183,10.93,-182,10.93,-181,10.93,-180,10.93,-179,10.93,-178,10.93,-177,10.93,-176,10.93,-175,10.93,-174,10.93,-173,10.93,-172,10.93,-171,10.93,-170,10.93,-169,10.93,-168,10.93,-167,10.93,-166,10.93,-165,10.93,-164,10.93,-163,10.93,-162,10.93,-161,10.93,-160,10.93,-159,10.93,-158,10.93,-157,10.93,-156,10.93,-155,10.93,-154,10.93,-153,10.93,-152,10.93,-151,10.93,-150,10.93,-149,10.93,-148,10.93,-147,10.93,-146,10.93,-145,10.93,-144,10.93,-140,10.93,-139,10.93,-138,10.93,-137,10.93,-136,10.93,-135,10.93,-134,10.93,-133,10.93,-132,10.93,-131,10.93,-130,10.93,-129,10.93,-128,10.93,-127,10.93,-126,10.93,-125,10.93,-124,10.93,-123,10.93,-107,10.93,-106,10.93,-105,10.93,-104,10.93,-103,10.93,-102,10.93,-101,10.93,-100,10.93,-99,10.93,-98,10.93,-97,10.93,-96,10.93,-95,10.93,-87,10.93,-86,10.93,-85,10.93,-84,10.93,-83,10.93,-82,10.93,-81,10.93,-80,10.93,-79,10.93,-78,10.93,-77,10.93,-76,10.93,-75,10.93,-74,10.93,-70,10.93,-284,11.93,-283,11.93,-282,11.93,-281,11.93,-280,11.93,-279,11.93,-278,11.93,-271,11.93,-270,11.93,-269,11.93,-252,11.93,-196,11.93,-195,11.93,-194,11.93,-193,11.93,-192,11.93,-191,11.93,-190,11.93,-189,11.93,-188,11.93,-187,11.93,-186,11.93,-185,11.93,-184,11.93,-183,11.93,-182,11.93,-181,11.93,-180,11.93,-179,11.93,-178,11.93,-177,11.93,-176,11.93,-175,11.93,-174,11.93,-173,11.93,-172,11.93,-171,11.93,-170,11.93,-169,11.93,-168,11.93,-167,11.93,-166,11.93,-165,11.93,-164,11.93,-163,11.93,-162,11.93,-161,11.93,-160,11.93,-159,11.93,-158,11.93,-157,11.93,-156,11.93,-155,11.93,-154,11.93,-153,11.93,-152,11.93,-151,11.93,-150,11.93,-149,11.93,-148,11.93,-147,11.93,-146,11.93,-145,11.93,-144,11.93,-139,11.93,-138,11.93,-137,11.93,-136,11.93,-135,11.93,-134,11.93,-133,11.93,-132,11.93,-131,11.93,-130,11.93,-129,11.93,-128,11.93,-127,11.93,-126,11.93,-125,11.93,-124,11.93,-107,11.93,-106,11.93,-105,11.93,-104,11.93,-103,11.93,-102,11.93,-101,11.93,-100,11.93,-99,11.93,-98,11.93,-97,11.93,-96,11.93,-86,11.93,-85,11.93,-84,11.93,-83,11.93,-82,11.93,-81,11.93,-80,11.93,-79,11.93,-78,11.93,-77,11.93,-76,11.93,-75,11.93,-71,11.93,-283,12.93,-282,12.93,-281,12.93,-280,12.93,-279,12.93,-278,12.93,-277,12.93,-272,12.93,-271,12.93,-270,12.93,-269,12.93,-252,12.93,-196,12.93,-195,12.93,-194,12.93,-193,12.93,-192,12.93,-191,12.93,-190,12.93,-189,12.93,-188,12.93,-187,12.93,-186,12.93,-185,12.93,-184,12.93,-183,12.93,-182,12.93,-181,12.93,-180,12.93,-179,12.93,-178,12.93,-177,12.93,-176,12.93,-175,12.93,-174,12.93,-173,12.93,-172,12.93,-171,12.93,-170,12.93,-169,12.93,-168,12.93,-167,12.93,-166,12.93,-165,12.93,-164,12.93,-163,12.93,-162,12.93,-161,12.93,-160,12.93,-159,12.93,-158,12.93,-157,12.93,-156,12.93,-155,12.93,-154,12.93,-153,12.93,-152,12.93,-151,12.93,-150,12.93,-149,12.93,-148,12.93,-147,12.93,-146,12.93,-145,12.93,-144,12.93,-138,12.93,-137,12.93,-136,12.93,-135,12.93,-134,12.93,-133,12.93,-132,12.93,-131,12.93,-130,12.93,-129,12.93,-128,12.93,-127,12.93,-126,12.93,-125,12.93,-107,12.93,-106,12.93,-105,12.93,-104,12.93,-103,12.93,-102,12.93,-101,12.93,-100,12.93,-99,12.93,-98,12.93,-97,12.93,-86,12.93,-85,12.93,-84,12.93,-83,12.93,-82,12.93,-81,12.93,-80,12.93,-79,12.93,-78,12.93,-77,12.93,-76,12.93,-75,12.93,-281,13.93,-280,13.93,-279,13.93,-278,13.93,-277,13.93,-276,13.93,-275,13.93,-274,13.93,-273,13.93,-272,13.93,-271,13.93,-270,13.93,-269,13.93,-196,13.93,-195,13.93,-194,13.93,-193,13.93,-192,13.93,-191,13.93,-190,13.93,-189,13.93,-188,13.93,-187,13.93,-186,13.93,-185,13.93,-184,13.93,-183,13.93,-182,13.93,-181,13.93,-180,13.93,-179,13.93,-178,13.93,-177,13.93,-176,13.93,-175,13.93,-174,13.93,-173,13.93,-172,13.93,-171,13.93,-170,13.93,-169,13.93,-168,13.93,-167,13.93,-166,13.93,-165,13.93,-164,13.93,-163,13.93,-162,13.93,-161,13.93,-160,13.93,-159,13.93,-158,13.93,-157,13.93,-156,13.93,-155,13.93,-154,13.93,-153,13.93,-152,13.93,-151,13.93,-150,13.93,-149,13.93,-148,13.93,-147,13.93,-146,13.93,-145,13.93,-144,13.93,-143,13.93,-137,13.93,-136,13.93,-135,13.93,-134,13.93,-133,13.93,-132,13.93,-131,13.93,-130,13.93,-129,13.93,-128,13.93,-127,13.93,-126,13.93,-106,13.93,-105,13.93,-104,13.93,-103,13.93,-102,13.93,-101,13.93,-100,13.93,-99,13.93,-98,13.93,-85,13.93,-84,13.93,-83,13.93,-82,13.93,-81,13.93,-80,13.93,-79,13.93,-78,13.93,-77,13.93,-76,13.93,-75,13.93,-74,13.93,-59,13.93,-278,14.93,-277,14.93,-276,14.93,-274,14.93,-273,14.93,-272,14.93,-271,14.93,-270,14.93,-196,14.93,-195,14.93,-194,14.93,-193,14.93,-192,14.93,-191,14.93,-190,14.93,-189,14.93,-188,14.93,-187,14.93,-186,14.93,-185,14.93,-184,14.93,-183,14.93,-182,14.93,-181,14.93,-180,14.93,-179,14.93,-178,14.93,-177,14.93,-176,14.93,-175,14.93,-174,14.93,-173,14.93,-172,14.93,-171,14.93,-170,14.93,-169,14.93,-168,14.93,-167,14.93,-166,14.93,-165,14.93,-164,14.93,-163,14.93,-162,14.93,-161,14.93,-160,14.93,-159,14.93,-158,14.93,-157,14.93,-156,14.93,-155,14.93,-154,14.93,-153,14.93,-152,14.93,-151,14.93,-150,14.93,-149,14.93,-148,14.93,-147,14.93,-146,14.93,-145,14.93,-144,14.93,-143,14.93,-142,14.93,-137,14.93,-136,14.93,-135,14.93,-134,14.93,-133,14.93,-132,14.93,-131,14.93,-130,14.93,-129,14.93,-106,14.93,-105,14.93,-104,14.93,-103,14.93,-102,14.93,-101,14.93,-100,14.93,-99,14.93,-85,14.93,-84,14.93,-83,14.93,-82,14.93,-81,14.93,-80,14.93,-79,14.93,-78,14.93,-77,14.93,-76,14.93,-75,14.93,-74,14.93,-59,14.93,-273,15.93,-272,15.93,-271,15.93,-270,15.93,-269,15.93,-196,15.93,-195,15.93,-194,15.93,-193,15.93,-192,15.93,-191,15.93,-190,15.93,-189,15.93,-188,15.93,-187,15.93,-186,15.93,-185,15.93,-184,15.93,-183,15.93,-182,15.93,-181,15.93,-180,15.93,-179,15.93,-178,15.93,-177,15.93,-176,15.93,-175,15.93,-174,15.93,-173,15.93,-172,15.93,-171,15.93,-170,15.93,-169,15.93,-168,15.93,-167,15.93,-166,15.93,-165,15.93,-164,15.93,-163,15.93,-162,15.93,-161,15.93,-160,15.93,-159,15.93,-158,15.93,-157,15.93,-156,15.93,-155,15.93,-154,15.93,-153,15.93,-152,15.93,-151,15.93,-150,15.93,-149,15.93,-148,15.93,-147,15.93,-146,15.93,-145,15.93,-144,15.93,-143,15.93,-142,15.93,-137,15.93,-136,15.93,-135,15.93,-134,15.93,-133,15.93,-132,15.93,-131,15.93,-130,15.93,-106,15.93,-105,15.93,-104,15.93,-103,15.93,-102,15.93,-101,15.93,-82,15.93,-81,15.93,-80,15.93,-79,15.93,-78,15.93,-77,15.93,-76,15.93,-75,15.93,-74,15.93,-73,15.93,-72,15.93,-60,15.93,-271,16.93,-270,16.93,-269,16.93,-268,16.93,-267,16.93,-266,16.93,-265,16.93,-197,16.93,-196,16.93,-195,16.93,-194,16.93,-193,16.93,-192,16.93,-191,16.93,-190,16.93,-189,16.93,-188,16.93,-187,16.93,-186,16.93,-185,16.93,-184,16.93,-183,16.93,-182,16.93,-181,16.93,-180,16.93,-179,16.93,-178,16.93,-177,16.93,-176,16.93,-175,16.93,-174,16.93,-173,16.93,-172,16.93,-171,16.93,-170,16.93,-169,16.93,-168,16.93,-167,16.93,-166,16.93,-165,16.93,-164,16.93,-163,16.93,-162,16.93,-161,16.93,-160,16.93,-159,16.93,-158,16.93,-157,16.93,-156,16.93,-155,16.93,-154,16.93,-153,16.93,-152,16.93,-151,16.93,-150,16.93,-149,16.93,-148,16.93,-147,16.93,-146,16.93,-145,16.93,-144,16.93,-143,16.93,-142,16.93,-141,16.93,-137,16.93,-136,16.93,-135,16.93,-134,16.93,-133,16.93,-105,16.93,-104,16.93,-103,16.93,-102,16.93,-101,16.93,-82,16.93,-81,16.93,-80,16.93,-79,16.93,-78,16.93,-77,16.93,-76,16.93,-75,16.93,-74,16.93,-73,16.93,-72,16.93,-59,16.93,-267,17.93,-266,17.93,-265,17.93,-196,17.93,-195,17.93,-194,17.93,-193,17.93,-192,17.93,-191,17.93,-190,17.93,-189,17.93,-188,17.93,-187,17.93,-186,17.93,-185,17.93,-184,17.93,-183,17.93,-182,17.93,-181,17.93,-180,17.93,-179,17.93,-178,17.93,-177,17.93,-176,17.93,-175,17.93,-174,17.93,-173,17.93,-172,17.93,-171,17.93,-170,17.93,-169,17.93,-168,17.93,-167,17.93,-166,17.93,-165,17.93,-164,17.93,-163,17.93,-162,17.93,-161,17.93,-160,17.93,-159,17.93,-158,17.93,-157,17.93,-156,17.93,-155,17.93,-154,17.93,-153,17.93,-152,17.93,-151,17.93,-150,17.93,-149,17.93,-148,17.93,-147,17.93,-146,17.93,-145,17.93,-144,17.93,-143,17.93,-142,17.93,-141,17.93,-140,17.93,-139,17.93,-136,17.93,-105,17.93,-104,17.93,-103,17.93,-102,17.93,-101,17.93,-81,17.93,-80,17.93,-79,17.93,-78,17.93,-77,17.93,-76,17.93,-75,17.93,-74,17.93,-73,17.93,-72,17.93,-59,17.93,-58,17.93,-266,18.93,-265,18.93,-196,18.93,-195,18.93,-194,18.93,-193,18.93,-192,18.93,-191,18.93,-190,18.93,-189,18.93,-188,18.93,-187,18.93,-186,18.93,-185,18.93,-184,18.93,-183,18.93,-182,18.93,-181,18.93,-180,18.93,-179,18.93,-178,18.93,-177,18.93,-176,18.93,-175,18.93,-174,18.93,-173,18.93,-172,18.93,-171,18.93,-170,18.93,-169,18.93,-168,18.93,-167,18.93,-166,18.93,-165,18.93,-164,18.93,-163,18.93,-162,18.93,-161,18.93,-160,18.93,-159,18.93,-158,18.93,-157,18.93,-156,18.93,-155,18.93,-154,18.93,-153,18.93,-152,18.93,-151,18.93,-150,18.93,-149,18.93,-148,18.93,-147,18.93,-146,18.93,-145,18.93,-144,18.93,-143,18.93,-142,18.93,-141,18.93,-140,18.93,-139,18.93,-138,18.93,-104,18.93,-103,18.93,-102,18.93,-101,18.93,-81,18.93,-77,18.93,-76,18.93,-75,18.93,-74,18.93,-73,18.93,-72,18.93,-59,18.93,-57,18.93,-265,19.93,-253,19.93,-252,19.93,-251,19.93,-196,19.93,-195,19.93,-194,19.93,-193,19.93,-192,19.93,-191,19.93,-190,19.93,-189,19.93,-188,19.93,-187,19.93,-186,19.93,-185,19.93,-184,19.93,-183,19.93,-182,19.93,-181,19.93,-180,19.93,-179,19.93,-178,19.93,-177,19.93,-176,19.93,-175,19.93,-174,19.93,-173,19.93,-172,19.93,-171,19.93,-170,19.93,-169,19.93,-168,19.93,-167,19.93,-166,19.93,-165,19.93,-164,19.93,-163,19.93,-162,19.93,-161,19.93,-160,19.93,-159,19.93,-158,19.93,-157,19.93,-156,19.93,-155,19.93,-154,19.93,-153,19.93,-152,19.93,-151,19.93,-150,19.93,-149,19.93,-148,19.93,-147,19.93,-146,19.93,-145,19.93,-144,19.93,-143,19.93,-142,19.93,-141,19.93,-140,19.93,-139,19.93,-138,19.93,-104,19.93,-103,19.93,-102,19.93,-101,19.93,-81,19.93,-76,19.93,-75,19.93,-74,19.93,-73,19.93,-72,19.93,-60,19.93,-57,19.93,-56,19.93,-265,20.93,-255,20.93,-254,20.93,-253,20.93,-252,20.93,-251,20.93,-250,20.93,-249,20.93,-194,20.93,-193,20.93,-192,20.93,-191,20.93,-190,20.93,-189,20.93,-188,20.93,-187,20.93,-186,20.93,-185,20.93,-184,20.93,-183,20.93,-182,20.93,-181,20.93,-180,20.93,-179,20.93,-178,20.93,-177,20.93,-176,20.93,-175,20.93,-174,20.93,-173,20.93,-172,20.93,-171,20.93,-170,20.93,-169,20.93,-168,20.93,-167,20.93,-166,20.93,-165,20.93,-164,20.93,-163,20.93,-162,20.93,-161,20.93,-160,20.93,-159,20.93,-158,20.93,-157,20.93,-156,20.93,-155,20.93,-154,20.93,-153,20.93,-152,20.93,-151,20.93,-150,20.93,-149,20.93,-148,20.93,-147,20.93,-146,20.93,-145,20.93,-144,20.93,-143,20.93,-142,20.93,-141,20.93,-140,20.93,-139,20.93,-138,20.93,-137,20.93,-134,20.93,-133,20.93,-132,20.93,-131,20.93,-130,20.93,-103,20.93,-102,20.93,-81,20.93,-75,20.93,-74,20.93,-57,20.93,-56,20.93,-264,21.93,-256,21.93,-255,21.93,-254,21.93,-253,21.93,-252,21.93,-251,21.93,-250,21.93,-249,21.93,-248,21.93,-247,21.93,-246,21.93,-245,21.93,-244,21.93,-243,21.93,-193,21.93,-192,21.93,-191,21.93,-190,21.93,-189,21.93,-188,21.93,-187,21.93,-186,21.93,-185,21.93,-184,21.93,-183,21.93,-182,21.93,-181,21.93,-180,21.93,-179,21.93,-178,21.93,-177,21.93,-176,21.93,-175,21.93,-174,21.93,-173,21.93,-172,21.93,-171,21.93,-170,21.93,-169,21.93,-168,21.93,-167,21.93,-166,21.93,-165,21.93,-164,21.93,-163,21.93,-162,21.93,-161,21.93,-160,21.93,-159,21.93,-158,21.93,-157,21.93,-156,21.93,-155,21.93,-154,21.93,-153,21.93,-152,21.93,-151,21.93,-150,21.93,-149,21.93,-148,21.93,-147,21.93,-146,21.93,-145,21.93,-144,21.93,-143,21.93,-142,21.93,-141,21.93,-140,21.93,-139,21.93,-138,21.93,-137,21.93,-136,21.93,-135,21.93,-134,21.93,-133,21.93,-132,21.93,-131,21.93,-130,21.93,-103,21.93,-102,21.93,-81,21.93,-75,21.93,-263,22.93,-262,22.93,-261,22.93,-260,22.93,-259,22.93,-258,22.93,-257,22.93,-256,22.93,-255,22.93,-254,22.93,-253,22.93,-252,22.93,-251,22.93,-250,22.93,-249,22.93,-248,22.93,-247,22.93,-246,22.93,-245,22.93,-244,22.93,-243,22.93,-242,22.93,-241,22.93,-193,22.93,-192,22.93,-191,22.93,-190,22.93,-189,22.93,-188,22.93,-187,22.93,-186,22.93,-185,22.93,-184,22.93,-183,22.93,-182,22.93,-181,22.93,-180,22.93,-179,22.93,-178,22.93,-177,22.93,-176,22.93,-175,22.93,-174,22.93,-173,22.93,-172,22.93,-171,22.93,-170,22.93,-169,22.93,-168,22.93,-167,22.93,-166,22.93,-165,22.93,-164,22.93,-163,22.93,-162,22.93,-161,22.93,-160,22.93,-159,22.93,-158,22.93,-157,22.93,-156,22.93,-155,22.93,-154,22.93,-153,22.93,-152,22.93,-151,22.93,-150,22.93,-149,22.93,-148,22.93,-147,22.93,-146,22.93,-145,22.93,-144,22.93,-143,22.93,-142,22.93,-141,22.93,-140,22.93,-139,22.93,-138,22.93,-137,22.93,-136,22.93,-135,22.93,-134,22.93,-133,22.93,-132,22.93,-131,22.93,-100,22.93,-81,22.93,-55,22.93,-258,23.93,-257,23.93,-256,23.93,-255,23.93,-254,23.93,-253,23.93,-252,23.93,-251,23.93,-250,23.93,-249,23.93,-248,23.93,-247,23.93,-246,23.93,-245,23.93,-244,23.93,-243,23.93,-242,23.93,-241,23.93,-240,23.93,-192,23.93,-191,23.93,-190,23.93,-189,23.93,-188,23.93,-187,23.93,-186,23.93,-185,23.93,-184,23.93,-183,23.93,-182,23.93,-181,23.93,-180,23.93,-179,23.93,-178,23.93,-177,23.93,-176,23.93,-175,23.93,-174,23.93,-173,23.93,-172,23.93,-171,23.93,-170,23.93,-169,23.93,-168,23.93,-167,23.93,-166,23.93,-165,23.93,-164,23.93,-163,23.93,-162,23.93,-161,23.93,-160,23.93,-159,23.93,-158,23.93,-157,23.93,-156,23.93,-155,23.93,-154,23.93,-153,23.93,-152,23.93,-151,23.93,-150,23.93,-149,23.93,-148,23.93,-147,23.93,-146,23.93,-145,23.93,-144,23.93,-143,23.93,-142,23.93,-141,23.93,-140,23.93,-139,23.93,-138,23.93,-137,23.93,-136,23.93,-135,23.93,-134,23.93,-133,23.93,-132,23.93,-100,23.93,-56,23.93,-55,23.93,-257,24.93,-256,24.93,-255,24.93,-254,24.93,-253,24.93,-252,24.93,-251,24.93,-250,24.93,-249,24.93,-248,24.93,-247,24.93,-246,24.93,-245,24.93,-244,24.93,-243,24.93,-242,24.93,-241,24.93,-240,24.93,-239,24.93,-190,24.93,-189,24.93,-188,24.93,-187,24.93,-186,24.93,-185,24.93,-184,24.93,-183,24.93,-182,24.93,-181,24.93,-180,24.93,-179,24.93,-175,24.93,-174,24.93,-173,24.93,-172,24.93,-171,24.93,-170,24.93,-169,24.93,-168,24.93,-167,24.93,-166,24.93,-165,24.93,-164,24.93,-163,24.93,-162,24.93,-161,24.93,-160,24.93,-159,24.93,-158,24.93,-157,24.93,-156,24.93,-155,24.93,-154,24.93,-153,24.93,-152,24.93,-151,24.93,-150,24.93,-149,24.93,-148,24.93,-147,24.93,-146,24.93,-145,24.93,-144,24.93,-143,24.93,-142,24.93,-141,24.93,-140,24.93,-139,24.93,-138,24.93,-137,24.93,-136,24.93,-135,24.93,-134,24.93,-133,24.93,-132,24.93,-100,24.93,-80,24.93,-64,24.93,-63,24.93,-257,25.93,-256,25.93,-255,25.93,-254,25.93,-253,25.93,-252,25.93,-251,25.93,-250,25.93,-249,25.93,-248,25.93,-247,25.93,-246,25.93,-245,25.93,-244,25.93,-243,25.93,-242,25.93,-241,25.93,-240,25.93,-239,25.93,-238,25.93,-237,25.93,-236,25.93,-235,25.93,-189,25.93,-188,25.93,-187,25.93,-186,25.93,-183,25.93,-182,25.93,-175,25.93,-174,25.93,-173,25.93,-172,25.93,-171,25.93,-170,25.93,-169,25.93,-168,25.93,-167,25.93,-166,25.93,-165,25.93,-164,25.93,-163,25.93,-162,25.93,-161,25.93,-160,25.93,-159,25.93,-158,25.93,-157,25.93,-156,25.93,-155,25.93,-154,25.93,-153,25.93,-152,25.93,-151,25.93,-150,25.93,-149,25.93,-148,25.93,-147,25.93,-146,25.93,-145,25.93,-144,25.93,-143,25.93,-142,25.93,-141,25.93,-140,25.93,-139,25.93,-138,25.93,-137,25.93,-136,25.93,-135,25.93,-134,25.93,-133,25.93,-79,25.93,-65,25.93,-64,25.93,-63,25.93,-257,26.93,-256,26.93,-255,26.93,-254,26.93,-253,26.93,-252,26.93,-251,26.93,-250,26.93,-249,26.93,-248,26.93,-247,26.93,-246,26.93,-245,26.93,-244,26.93,-243,26.93,-242,26.93,-241,26.93,-240,26.93,-239,26.93,-238,26.93,-237,26.93,-236,26.93,-235,26.93,-234,26.93,-233,26.93,-171,26.93,-170,26.93,-169,26.93,-168,26.93,-167,26.93,-166,26.93,-165,26.93,-164,26.93,-163,26.93,-162,26.93,-161,26.93,-160,26.93,-159,26.93,-158,26.93,-157,26.93,-156,26.93,-155,26.93,-154,26.93,-153,26.93,-152,26.93,-151,26.93,-150,26.93,-149,26.93,-148,26.93,-147,26.93,-146,26.93,-145,26.93,-144,26.93,-143,26.93,-142,26.93,-141,26.93,-140,26.93,-139,26.93,-138,26.93,-137,26.93,-136,26.93,-135,26.93,-134,26.93,-133,26.93,-84,26.93,-79,26.93,-78,26.93,-66,26.93,-65,26.93,-64,26.93,-63,26.93,-257,27.93,-256,27.93,-255,27.93,-254,27.93,-253,27.93,-252,27.93,-251,27.93,-250,27.93,-249,27.93,-248,27.93,-247,27.93,-246,27.93,-245,27.93,-244,27.93,-243,27.93,-242,27.93,-241,27.93,-240,27.93,-239,27.93,-238,27.93,-237,27.93,-236,27.93,-235,27.93,-234,27.93,-233,27.93,-232,27.93,-170,27.93,-169,27.93,-168,27.93,-167,27.93,-166,27.93,-165,27.93,-164,27.93,-163,27.93,-162,27.93,-161,27.93,-160,27.93,-159,27.93,-158,27.93,-157,27.93,-156,27.93,-155,27.93,-154,27.93,-153,27.93,-152,27.93,-151,27.93,-150,27.93,-149,27.93,-148,27.93,-147,27.93,-146,27.93,-145,27.93,-144,27.93,-143,27.93,-142,27.93,-141,27.93,-140,27.93,-139,27.93,-138,27.93,-137,27.93,-136,27.93,-135,27.93,-134,27.93,-83,27.93,-79,27.93,-78,27.93,-67,27.93,-66,27.93,-65,27.93,-64,27.93,-63,27.93,-258,28.93,-257,28.93,-256,28.93,-255,28.93,-254,28.93,-253,28.93,-252,28.93,-251,28.93,-250,28.93,-249,28.93,-248,28.93,-247,28.93,-246,28.93,-245,28.93,-244,28.93,-243,28.93,-242,28.93,-241,28.93,-240,28.93,-239,28.93,-238,28.93,-237,28.93,-236,28.93,-235,28.93,-234,28.93,-233,28.93,-232,28.93,-231,28.93,-170,28.93,-169,28.93,-168,28.93,-167,28.93,-166,28.93,-165,28.93,-164,28.93,-163,28.93,-162,28.93,-161,28.93,-160,28.93,-159,28.93,-158,28.93,-157,28.93,-156,28.93,-155,28.93,-154,28.93,-153,28.93,-152,28.93,-151,28.93,-150,28.93,-149,28.93,-148,28.93,-147,28.93,-146,28.93,-145,28.93,-144,28.93,-143,28.93,-142,28.93,-141,28.93,-140,28.93,-139,28.93,-138,28.93,-137,28.93,-136,28.93,-135,28.93,-82,28.93,-81,28.93,-79,28.93,-78,28.93,-77,28.93,-69,28.93,-68,28.93,-67,28.93,-66,28.93,-65,28.93,-64,28.93,-63,28.93,-259,29.93,-258,29.93,-257,29.93,-256,29.93,-255,29.93,-254,29.93,-253,29.93,-252,29.93,-251,29.93,-250,29.93,-249,29.93,-248,29.93,-247,29.93,-246,29.93,-245,29.93,-244,29.93,-243,29.93,-242,29.93,-241,29.93,-240,29.93,-239,29.93,-238,29.93,-237,29.93,-236,29.93,-235,29.93,-234,29.93,-233,29.93,-232,29.93,-231,29.93,-230,29.93,-170,29.93,-169,29.93,-168,29.93,-167,29.93,-166,29.93,-165,29.93,-164,29.93,-163,29.93,-162,29.93,-161,29.93,-160,29.93,-159,29.93,-158,29.93,-157,29.93,-156,29.93,-155,29.93,-154,29.93,-153,29.93,-152,29.93,-151,29.93,-150,29.93,-149,29.93,-148,29.93,-147,29.93,-146,29.93,-145,29.93,-144,29.93,-143,29.93,-142,29.93,-141,29.93,-140,29.93,-139,29.93,-138,29.93,-137,29.93,-81,29.93,-80,29.93,-79,29.93,-78,29.93,-77,29.93,-70,29.93,-69,29.93,-68,29.93,-67,29.93,-66,29.93,-65,29.93,-64,29.93,-63,29.93,-260,30.93,-259,30.93,-258,30.93,-257,30.93,-256,30.93,-255,30.93,-254,30.93,-253,30.93,-252,30.93,-251,30.93,-250,30.93,-249,30.93,-248,30.93,-247,30.93,-246,30.93,-245,30.93,-244,30.93,-243,30.93,-242,30.93,-241,30.93,-240,30.93,-239,30.93,-238,30.93,-237,30.93,-236,30.93,-235,30.93,-234,30.93,-233,30.93,-232,30.93,-231,30.93,-230,30.93,-229,30.93,-170,30.93,-169,30.93,-168,30.93,-167,30.93,-166,30.93,-165,30.93,-164,30.93,-163,30.93,-162,30.93,-161,30.93,-160,30.93,-159,30.93,-158,30.93,-157,30.93,-156,30.93,-155,30.93,-154,30.93,-153,30.93,-152,30.93,-151,30.93,-150,30.93,-149,30.93,-148,30.93,-146,30.93,-145,30.93,-144,30.93,-143,30.93,-142,30.93,-141,30.93,-140,30.93,-139,30.93,-138,30.93,-81,30.93,-80,30.93,-79,30.93,-78,30.93,-77,30.93,-71,30.93,-70,30.93,-69,30.93,-68,30.93,-67,30.93,-66,30.93,-65,30.93,-64,30.93,-260,31.93,-259,31.93,-258,31.93,-257,31.93,-256,31.93,-255,31.93,-254,31.93,-253,31.93,-252,31.93,-251,31.93,-250,31.93,-249,31.93,-248,31.93,-247,31.93,-246,31.93,-245,31.93,-244,31.93,-243,31.93,-242,31.93,-241,31.93,-240,31.93,-239,31.93,-238,31.93,-237,31.93,-236,31.93,-235,31.93,-234,31.93,-233,31.93,-232,31.93,-231,31.93,-230,31.93,-229,31.93,-228,31.93,-171,31.93,-170,31.93,-169,31.93,-168,31.93,-167,31.93,-166,31.93,-165,31.93,-164,31.93,-163,31.93,-162,31.93,-161,31.93,-160,31.93,-159,31.93,-158,31.93,-157,31.93,-156,31.93,-155,31.93,-154,31.93,-153,31.93,-152,31.93,-151,31.93,-150,31.93,-145,31.93,-144,31.93,-143,31.93,-142,31.93,-141,31.93,-140,31.93,-139,31.93,-80,31.93,-79,31.93,-78,31.93,-77,31.93,-71,31.93,-70,31.93,-69,31.93,-68,31.93,-67,31.93,-66,31.93,-65,31.93,-64,31.93,-261,32.93,-260,32.93,-259,32.93,-258,32.93,-257,32.93,-256,32.93,-255,32.93,-254,32.93,-253,32.93,-252,32.93,-251,32.93,-250,32.93,-249,32.93,-248,32.93,-247,32.93,-246,32.93,-245,32.93,-244,32.93,-243,32.93,-242,32.93,-241,32.93,-240,32.93,-239,32.93,-238,32.93,-237,32.93,-236,32.93,-235,32.93,-234,32.93,-233,32.93,-232,32.93,-231,32.93,-230,32.93,-229,32.93,-228,32.93,-227,32.93,-226,32.93,-171,32.93,-170,32.93,-169,32.93,-168,32.93,-167,32.93,-166,32.93,-165,32.93,-164,32.93,-163,32.93,-162,32.93,-161,32.93,-160,32.93,-159,32.93,-158,32.93,-157,32.93,-156,32.93,-155,32.93,-154,32.93,-153,32.93,-152,32.93,-151,32.93,-150,32.93,-146,32.93,-145,32.93,-144,32.93,-143,32.93,-142,32.93,-141,32.93,-140,32.93,-79,32.93,-78,32.93,-77,32.93,-76,32.93,-70,32.93,-69,32.93,-68,32.93,-67,32.93,-66,32.93,-65,32.93,-60,32.93,-50,32.93,-49,32.93,-48,32.93,-47,32.93,-261,33.93,-260,33.93,-259,33.93,-258,33.93,-257,33.93,-256,33.93,-255,33.93,-254,33.93,-253,33.93,-252,33.93,-251,33.93,-250,33.93,-249,33.93,-248,33.93,-247,33.93,-246,33.93,-245,33.93,-244,33.93,-243,33.93,-242,33.93,-241,33.93,-240,33.93,-239,33.93,-238,33.93,-237,33.93,-236,33.93,-235,33.93,-234,33.93,-233,33.93,-232,33.93,-231,33.93,-230,33.93,-229,33.93,-228,33.93,-227,33.93,-226,33.93,-225,33.93,-170,33.93,-169,33.93,-168,33.93,-167,33.93,-166,33.93,-165,33.93,-164,33.93,-163,33.93,-162,33.93,-161,33.93,-160,33.93,-159,33.93,-158,33.93,-157,33.93,-156,33.93,-155,33.93,-154,33.93,-153,33.93,-152,33.93,-151,33.93,-150,33.93,-146,33.93,-145,33.93,-144,33.93,-143,33.93,-142,33.93,-141,33.93,-78,33.93,-77,33.93,-76,33.93,-75,33.93,-70,33.93,-69,33.93,-68,33.93,-67,33.93,-66,33.93,-65,33.93,-60,33.93,-48,33.93,-47,33.93,-43,33.93,-42,33.93,-261,34.93,-260,34.93,-259,34.93,-258,34.93,-257,34.93,-256,34.93,-255,34.93,-254,34.93,-253,34.93,-252,34.93,-251,34.93,-250,34.93,-249,34.93,-248,34.93,-247,34.93,-246,34.93,-245,34.93,-244,34.93,-243,34.93,-242,34.93,-241,34.93,-240,34.93,-239,34.93,-238,34.93,-237,34.93,-236,34.93,-235,34.93,-234,34.93,-233,34.93,-232,34.93,-231,34.93,-230,34.93,-229,34.93,-228,34.93,-227,34.93,-226,34.93,-225,34.93,-224,34.93,-223,34.93,-222,34.93,-221,34.93,-169,34.93,-168,34.93,-167,34.93,-166,34.93,-165,34.93,-164,34.93,-163,34.93,-162,34.93,-161,34.93,-160,34.93,-159,34.93,-158,34.93,-157,34.93,-156,34.93,-155,34.93,-154,34.93,-153,34.93,-152,34.93,-151,34.93,-150,34.93,-149,34.93,-148,34.93,-147,34.93,-146,34.93,-145,34.93,-144,34.93,-143,34.93,-142,34.93,-141,34.93,-78,34.93,-77,34.93,-76,34.93,-75,34.93,-69,34.93,-66,34.93,-44,34.93,-43,34.93,-42,34.93,-41,34.93,-40,34.93,-39,34.93,-261,35.93,-260,35.93,-259,35.93,-258,35.93,-257,35.93,-256,35.93,-255,35.93,-254,35.93,-253,35.93,-252,35.93,-251,35.93,-250,35.93,-249,35.93,-248,35.93,-247,35.93,-246,35.93,-245,35.93,-244,35.93,-243,35.93,-242,35.93,-241,35.93,-240,35.93,-239,35.93,-238,35.93,-237,35.93,-236,35.93,-235,35.93,-234,35.93,-233,35.93,-232,35.93,-231,35.93,-230,35.93,-229,35.93,-228,35.93,-227,35.93,-226,35.93,-225,35.93,-224,35.93,-223,35.93,-222,35.93,-221,35.93,-220,35.93,-219,35.93,-168,35.93,-167,35.93,-166,35.93,-165,35.93,-164,35.93,-163,35.93,-162,35.93,-161,35.93,-160,35.93,-159,35.93,-158,35.93,-157,35.93,-156,35.93,-155,35.93,-154,35.93,-153,35.93,-152,35.93,-150,35.93,-149,35.93,-148,35.93,-147,35.93,-146,35.93,-145,35.93,-144,35.93,-143,35.93,-142,35.93,-76,35.93,-75,35.93,-58,35.93,-43,35.93,-42,35.93,-41,35.93,-40,35.93,-39,35.93,-38,35.93,-37,35.93,-36,35.93,-261,36.93,-260,36.93,-259,36.93,-258,36.93,-257,36.93,-256,36.93,-255,36.93,-254,36.93,-253,36.93,-252,36.93,-251,36.93,-250,36.93,-249,36.93,-248,36.93,-247,36.93,-246,36.93,-245,36.93,-244,36.93,-243,36.93,-242,36.93,-241,36.93,-240,36.93,-239,36.93,-238,36.93,-237,36.93,-236,36.93,-235,36.93,-234,36.93,-233,36.93,-232,36.93,-231,36.93,-230,36.93,-229,36.93,-228,36.93,-227,36.93,-226,36.93,-225,36.93,-224,36.93,-223,36.93,-222,36.93,-221,36.93,-220,36.93,-219,36.93,-218,36.93,-217,36.93,-168,36.93,-167,36.93,-166,36.93,-165,36.93,-164,36.93,-163,36.93,-162,36.93,-161,36.93,-160,36.93,-159,36.93,-158,36.93,-157,36.93,-156,36.93,-155,36.93,-154,36.93,-153,36.93,-152,36.93,-150,36.93,-149,36.93,-148,36.93,-147,36.93,-146,36.93,-145,36.93,-144,36.93,-143,36.93,-142,36.93,-42,36.93,-41,36.93,-40,36.93,-39,36.93,-38,36.93,-37,36.93,-36,36.93,-35,36.93,-260,37.93,-259,37.93,-258,37.93,-257,37.93,-256,37.93,-255,37.93,-254,37.93,-253,37.93,-252,37.93,-251,37.93,-250,37.93,-249,37.93,-248,37.93,-247,37.93,-246,37.93,-245,37.93,-244,37.93,-243,37.93,-242,37.93,-241,37.93,-240,37.93,-239,37.93,-238,37.93,-237,37.93,-236,37.93,-235,37.93,-234,37.93,-233,37.93,-232,37.93,-231,37.93,-230,37.93,-229,37.93,-228,37.93,-227,37.93,-226,37.93,-225,37.93,-224,37.93,-223,37.93,-222,37.93,-221,37.93,-220,37.93,-219,37.93,-218,37.93,-217,37.93,-216,37.93,-167,37.93,-166,37.93,-165,37.93,-164,37.93,-163,37.93,-162,37.93,-161,37.93,-160,37.93,-159,37.93,-158,37.93,-157,37.93,-156,37.93,-155,37.93,-154,37.93,-153,37.93,-152,37.93,-149,37.93,-148,37.93,-147,37.93,-146,37.93,-145,37.93,-144,37.93,-143,37.93,-142,37.93,-74,37.93,-73,37.93,-72,37.93,-41,37.93,-40,37.93,-39,37.93,-38,37.93,-37,37.93,-36,37.93,-35,37.93,-34,37.93,-259,38.93,-258,38.93,-257,38.93,-256,38.93,-255,38.93,-254,38.93,-253,38.93,-252,38.93,-251,38.93,-250,38.93,-249,38.93,-248,38.93,-247,38.93,-246,38.93,-245,38.93,-244,38.93,-243,38.93,-242,38.93,-241,38.93,-240,38.93,-239,38.93,-238,38.93,-237,38.93,-236,38.93,-235,38.93,-234,38.93,-233,38.93,-232,38.93,-231,38.93,-230,38.93,-229,38.93,-228,38.93,-227,38.93,-226,38.93,-225,38.93,-224,38.93,-223,38.93,-222,38.93,-221,38.93,-220,38.93,-219,38.93,-218,38.93,-217,38.93,-216,38.93,-167,38.93,-166,38.93,-165,38.93,-164,38.93,-163,38.93,-162,38.93,-161,38.93,-160,38.93,-159,38.93,-158,38.93,-157,38.93,-156,38.93,-155,38.93,-154,38.93,-153,38.93,-152,38.93,-151,38.93,-149,38.93,-148,38.93,-147,38.93,-146,38.93,-145,38.93,-144,38.93,-143,38.93,-142,38.93,-71,38.93,-70,38.93,-69,38.93,-42,38.93,-41,38.93,-40,38.93,-39,38.93,-38,38.93,-37,38.93,-36,38.93,-35,38.93,-34,38.93,-258,39.93,-257,39.93,-256,39.93,-255,39.93,-254,39.93,-253,39.93,-252,39.93,-251,39.93,-250,39.93,-249,39.93,-248,39.93,-247,39.93,-246,39.93,-245,39.93,-244,39.93,-243,39.93,-242,39.93,-241,39.93,-240,39.93,-239,39.93,-238,39.93,-237,39.93,-236,39.93,-235,39.93,-234,39.93,-233,39.93,-232,39.93,-231,39.93,-230,39.93,-229,39.93,-228,39.93,-227,39.93,-226,39.93,-225,39.93,-224,39.93,-223,39.93,-222,39.93,-221,39.93,-220,39.93,-219,39.93,-218,39.93,-217,39.93,-216,39.93,-166,39.93,-165,39.93,-164,39.93,-163,39.93,-162,39.93,-161,39.93,-160,39.93,-159,39.93,-158,39.93,-157,39.93,-156,39.93,-155,39.93,-154,39.93,-153,39.93,-152,39.93,-151,39.93,-149,39.93,-148,39.93,-147,39.93,-146,39.93,-145,39.93,-144,39.93,-143,39.93,-142,39.93,-40,39.93,-39,39.93,-38,39.93,-37,39.93,-33,39.93,-258,40.93,-257,40.93,-256,40.93,-255,40.93,-254,40.93,-253,40.93,-252,40.93,-251,40.93,-250,40.93,-249,40.93,-248,40.93,-247,40.93,-246,40.93,-245,40.93,-244,40.93,-243,40.93,-242,40.93,-241,40.93,-240,40.93,-239,40.93,-238,40.93,-237,40.93,-236,40.93,-235,40.93,-234,40.93,-233,40.93,-232,40.93,-231,40.93,-230,40.93,-229,40.93,-228,40.93,-227,40.93,-226,40.93,-225,40.93,-224,40.93,-223,40.93,-222,40.93,-221,40.93,-220,40.93,-219,40.93,-218,40.93,-217,40.93,-167,40.93,-166,40.93,-165,40.93,-164,40.93,-163,40.93,-162,40.93,-161,40.93,-160,40.93,-159,40.93,-158,40.93,-157,40.93,-156,40.93,-155,40.93,-154,40.93,-153,40.93,-152,40.93,-151,40.93,-150,40.93,-149,40.93,-148,40.93,-147,40.93,-146,40.93,-145,40.93,-144,40.93,-143,40.93,-142,40.93,-39,40.93,-38,40.93,-32,40.93,-31,40.93,-257,41.93,-256,41.93,-255,41.93,-254,41.93,-253,41.93,-252,41.93,-251,41.93,-250,41.93,-249,41.93,-248,41.93,-247,41.93,-246,41.93,-245,41.93,-244,41.93,-243,41.93,-242,41.93,-241,41.93,-240,41.93,-239,41.93,-238,41.93,-237,41.93,-236,41.93,-235,41.93,-234,41.93,-233,41.93,-232,41.93,-231,41.93,-230,41.93,-229,41.93,-228,41.93,-227,41.93,-226,41.93,-225,41.93,-224,41.93,-223,41.93,-222,41.93,-221,41.93,-220,41.93,-219,41.93,-218,41.93,-166,41.93,-165,41.93,-164,41.93,-163,41.93,-162,41.93,-161,41.93,-160,41.93,-159,41.93,-158,41.93,-157,41.93,-156,41.93,-155,41.93,-154,41.93,-153,41.93,-152,41.93,-151,41.93,-150,41.93,-149,41.93,-148,41.93,-147,41.93,-145,41.93,-144,41.93,-143,41.93,-142,41.93,-141,41.93,-257,42.93,-256,42.93,-255,42.93,-254,42.93,-253,42.93,-252,42.93,-251,42.93,-250,42.93,-249,42.93,-248,42.93,-247,42.93,-246,42.93,-245,42.93,-244,42.93,-243,42.93,-242,42.93,-241,42.93,-240,42.93,-239,42.93,-238,42.93,-237,42.93,-236,42.93,-235,42.93,-234,42.93,-233,42.93,-232,42.93,-231,42.93,-230,42.93,-229,42.93,-228,42.93,-227,42.93,-226,42.93,-225,42.93,-224,42.93,-223,42.93,-222,42.93,-221,42.93,-220,42.93,-219,42.93,-166,42.93,-165,42.93,-164,42.93,-163,42.93,-162,42.93,-161,42.93,-160,42.93,-159,42.93,-158,42.93,-157,42.93,-156,42.93,-155,42.93,-154,42.93,-153,42.93,-152,42.93,-151,42.93,-150,42.93,-149,42.93,-148,42.93,-147,42.93,-145,42.93,-144,42.93,-143,42.93,-142,42.93,-141,42.93,-256,43.93,-255,43.93,-254,43.93,-253,43.93,-252,43.93,-251,43.93,-250,43.93,-249,43.93,-248,43.93,-247,43.93,-246,43.93,-245,43.93,-244,43.93,-243,43.93,-242,43.93,-241,43.93,-240,43.93,-239,43.93,-238,43.93,-237,43.93,-236,43.93,-235,43.93,-234,43.93,-233,43.93,-232,43.93,-231,43.93,-230,43.93,-229,43.93,-228,43.93,-227,43.93,-226,43.93,-225,43.93,-224,43.93,-223,43.93,-222,43.93,-221,43.93,-220,43.93,-219,43.93,-166,43.93,-165,43.93,-164,43.93,-163,43.93,-162,43.93,-161,43.93,-160,43.93,-159,43.93,-158,43.93,-157,43.93,-156,43.93,-155,43.93,-154,43.93,-153,43.93,-152,43.93,-151,43.93,-150,43.93,-149,43.93,-148,43.93,-147,43.93,-145,43.93,-144,43.93,-143,43.93,-142,43.93,-141,43.93,-49,43.93,-48,43.93,-47,43.93,-46,43.93,-45,43.93,-38,43.93,-256,44.93,-255,44.93,-254,44.93,-253,44.93,-252,44.93,-251,44.93,-250,44.93,-249,44.93,-248,44.93,-247,44.93,-246,44.93,-245,44.93,-244,44.93,-243,44.93,-242,44.93,-241,44.93,-240,44.93,-239,44.93,-238,44.93,-237,44.93,-236,44.93,-235,44.93,-234,44.93,-233,44.93,-232,44.93,-231,44.93,-230,44.93,-229,44.93,-228,44.93,-227,44.93,-226,44.93,-225,44.93,-224,44.93,-223,44.93,-222,44.93,-221,44.93,-220,44.93,-167,44.93,-166,44.93,-165,44.93,-164,44.93,-163,44.93,-162,44.93,-161,44.93,-160,44.93,-159,44.93,-158,44.93,-157,44.93,-156,44.93,-155,44.93,-154,44.93,-153,44.93,-152,44.93,-151,44.93,-150,44.93,-149,44.93,-148,44.93,-147,44.93,-145,44.93,-144,44.93,-143,44.93,-142,44.93,-141,44.93,-131,44.93,-49,44.93,-48,44.93,-47,44.93,-46,44.93,-45,44.93,-38,44.93,-255,45.93,-254,45.93,-253,45.93,-252,45.93,-251,45.93,-250,45.93,-249,45.93,-248,45.93,-247,45.93,-246,45.93,-245,45.93,-244,45.93,-243,45.93,-242,45.93,-241,45.93,-240,45.93,-239,45.93,-238,45.93,-237,45.93,-236,45.93,-235,45.93,-234,45.93,-233,45.93,-232,45.93,-231,45.93,-230,45.93,-229,45.93,-228,45.93,-227,45.93,-226,45.93,-225,45.93,-224,45.93,-223,45.93,-222,45.93,-221,45.93,-220,45.93,-167,45.93,-166,45.93,-165,45.93,-164,45.93,-163,45.93,-162,45.93,-161,45.93,-160,45.93,-159,45.93,-158,45.93,-157,45.93,-156,45.93,-155,45.93,-154,45.93,-153,45.93,-152,45.93,-151,45.93,-150,45.93,-149,45.93,-148,45.93,-147,45.93,-146,45.93,-145,45.93,-144,45.93,-143,45.93,-142,45.93,-141,45.93,-132,45.93,-131,45.93,-54,45.93,-50,45.93,-49,45.93,-48,45.93,-47,45.93,-46,45.93,-45,45.93,-38,45.93,-37,45.93,-254,46.93,-253,46.93,-252,46.93,-251,46.93,-250,46.93,-249,46.93,-248,46.93,-247,46.93,-246,46.93,-245,46.93,-244,46.93,-243,46.93,-242,46.93,-241,46.93,-240,46.93,-239,46.93,-238,46.93,-237,46.93,-236,46.93,-235,46.93,-234,46.93,-233,46.93,-232,46.93,-231,46.93,-230,46.93,-229,46.93,-228,46.93,-227,46.93,-226,46.93,-225,46.93,-224,46.93,-223,46.93,-222,46.93,-221,46.93,-220,46.93,-168,46.93,-167,46.93,-166,46.93,-165,46.93,-164,46.93,-163,46.93,-162,46.93,-161,46.93,-160,46.93,-159,46.93,-158,46.93,-157,46.93,-156,46.93,-155,46.93,-154,46.93,-153,46.93,-152,46.93,-151,46.93,-150,46.93,-149,46.93,-148,46.93,-147,46.93,-146,46.93,-145,46.93,-144,46.93,-143,46.93,-142,46.93,-141,46.93,-133,46.93,-132,46.93,-131,46.93,-55,46.93,-54,46.93,-53,46.93,-52,46.93,-51,46.93,-50,46.93,-49,46.93,-48,46.93,-47,46.93,-46,46.93,-45,46.93,-38,46.93,-37,46.93,-36,46.93,-252,47.93,-251,47.93,-250,47.93,-249,47.93,-248,47.93,-247,47.93,-246,47.93,-245,47.93,-244,47.93,-243,47.93,-242,47.93,-241,47.93,-240,47.93,-239,47.93,-238,47.93,-237,47.93,-236,47.93,-235,47.93,-234,47.93,-233,47.93,-232,47.93,-231,47.93,-230,47.93,-229,47.93,-228,47.93,-227,47.93,-226,47.93,-225,47.93,-224,47.93,-223,47.93,-222,47.93,-221,47.93,-220,47.93,-168,47.93,-167,47.93,-166,47.93,-165,47.93,-164,47.93,-163,47.93,-162,47.93,-161,47.93,-160,47.93,-159,47.93,-158,47.93,-157,47.93,-156,47.93,-155,47.93,-154,47.93,-153,47.93,-152,47.93,-151,47.93,-150,47.93,-149,47.93,-148,47.93,-147,47.93,-146,47.93,-145,47.93,-144,47.93,-143,47.93,-142,47.93,-136,47.93,-135,47.93,-134,47.93,-133,47.93,-132,47.93,-56,47.93,-55,47.93,-54,47.93,-53,47.93,-52,47.93,-51,47.93,-50,47.93,-49,47.93,-48,47.93,-47,47.93,-46,47.93,-45,47.93,-44,47.93,-39,47.93,-38,47.93,-37,47.93,-36,47.93,-251,48.93,-250,48.93,-249,48.93,-248,48.93,-247,48.93,-246,48.93,-245,48.93,-244,48.93,-243,48.93,-242,48.93,-241,48.93,-240,48.93,-239,48.93,-238,48.93,-237,48.93,-236,48.93,-235,48.93,-234,48.93,-233,48.93,-232,48.93,-231,48.93,-230,48.93,-229,48.93,-228,48.93,-227,48.93,-226,48.93,-225,48.93,-224,48.93,-223,48.93,-222,48.93,-221,48.93,-220,48.93,-168,48.93,-167,48.93,-166,48.93,-165,48.93,-164,48.93,-163,48.93,-162,48.93,-161,48.93,-160,48.93,-159,48.93,-158,48.93,-157,48.93,-156,48.93,-155,48.93,-154,48.93,-153,48.93,-152,48.93,-151,48.93,-150,48.93,-149,48.93,-148,48.93,-147,48.93,-146,48.93,-145,48.93,-144,48.93,-136,48.93,-135,48.93,-134,48.93,-133,48.93,-132,48.93,-57,48.93,-56,48.93,-55,48.93,-54,48.93,-53,48.93,-52,48.93,-51,48.93,-50,48.93,-49,48.93,-48,48.93,-47,48.93,-46,48.93,-45,48.93,-44,48.93,-43,48.93,-42,48.93,-41,48.93,-40,48.93,-39,48.93,-38,48.93,-37,48.93,-36,48.93,-35,48.93,-250,49.93,-249,49.93,-248,49.93,-247,49.93,-246,49.93,-245,49.93,-244,49.93,-243,49.93,-242,49.93,-241,49.93,-240,49.93,-239,49.93,-238,49.93,-237,49.93,-236,49.93,-235,49.93,-234,49.93,-233,49.93,-232,49.93,-231,49.93,-230,49.93,-229,49.93,-228,49.93,-227,49.93,-226,49.93,-225,49.93,-224,49.93,-223,49.93,-222,49.93,-221,49.93,-167,49.93,-166,49.93,-165,49.93,-164,49.93,-163,49.93,-162,49.93,-161,49.93,-160,49.93,-159,49.93,-158,49.93,-157,49.93,-156,49.93,-155,49.93,-154,49.93,-153,49.93,-152,49.93,-151,49.93,-150,49.93,-149,49.93,-148,49.93,-147,49.93,-146,49.93,-145,49.93,-136,49.93,-135,49.93,-134,49.93,-133,49.93,-132,49.93,-58,49.93,-57,49.93,-56,49.93,-55,49.93,-54,49.93,-53,49.93,-52,49.93,-51,49.93,-50,49.93,-49,49.93,-48,49.93,-47,49.93,-46,49.93,-45,49.93,-44,49.93,-43,49.93,-42,49.93,-41,49.93,-40,49.93,-39,49.93,-38,49.93,-37,49.93,-36,49.93,-35,49.93,-250,50.93,-249,50.93,-248,50.93,-247,50.93,-246,50.93,-245,50.93,-244,50.93,-243,50.93,-242,50.93,-241,50.93,-240,50.93,-239,50.93,-238,50.93,-237,50.93,-236,50.93,-235,50.93,-234,50.93,-233,50.93,-232,50.93,-231,50.93,-230,50.93,-229,50.93,-228,50.93,-227,50.93,-226,50.93,-225,50.93,-224,50.93,-223,50.93,-222,50.93,-221,50.93,-167,50.93,-166,50.93,-165,50.93,-164,50.93,-163,50.93,-162,50.93,-161,50.93,-160,50.93,-159,50.93,-158,50.93,-157,50.93,-156,50.93,-155,50.93,-154,50.93,-153,50.93,-152,50.93,-151,50.93,-150,50.93,-149,50.93,-148,50.93,-147,50.93,-146,50.93,-136,50.93,-135,50.93,-134,50.93,-133,50.93,-58,50.93,-57,50.93,-56,50.93,-55,50.93,-54,50.93,-53,50.93,-52,50.93,-51,50.93,-50,50.93,-49,50.93,-48,50.93,-47,50.93,-46,50.93,-45,50.93,-44,50.93,-43,50.93,-42,50.93,-41,50.93,-40,50.93,-39,50.93,-38,50.93,-37,50.93,-36,50.93,-35,50.93,-34,50.93,-250,51.93,-249,51.93,-248,51.93,-247,51.93,-246,51.93,-245,51.93,-244,51.93,-243,51.93,-242,51.93,-241,51.93,-240,51.93,-239,51.93,-238,51.93,-237,51.93,-236,51.93,-235,51.93,-234,51.93,-233,51.93,-232,51.93,-231,51.93,-230,51.93,-229,51.93,-228,51.93,-227,51.93,-226,51.93,-225,51.93,-224,51.93,-223,51.93,-222,51.93,-166,51.93,-165,51.93,-164,51.93,-163,51.93,-162,51.93,-161,51.93,-160,51.93,-159,51.93,-158,51.93,-157,51.93,-156,51.93,-155,51.93,-154,51.93,-153,51.93,-152,51.93,-151,51.93,-150,51.93,-149,51.93,-148,51.93,-147,51.93,-136,51.93,-135,51.93,-134,51.93,-133,51.93,-61,51.93,-60,51.93,-59,51.93,-58,51.93,-57,51.93,-56,51.93,-55,51.93,-54,51.93,-53,51.93,-52,51.93,-51,51.93,-50,51.93,-49,51.93,-48,51.93,-47,51.93,-46,51.93,-45,51.93,-44,51.93,-43,51.93,-42,51.93,-41,51.93,-40,51.93,-39,51.93,-38,51.93,-37,51.93,-36,51.93,-35,51.93,-34,51.93,-33,51.93,-250,52.93,-249,52.93,-248,52.93,-247,52.93,-246,52.93,-245,52.93,-244,52.93,-243,52.93,-242,52.93,-241,52.93,-240,52.93,-239,52.93,-238,52.93,-237,52.93,-236,52.93,-235,52.93,-234,52.93,-233,52.93,-232,52.93,-231,52.93,-230,52.93,-229,52.93,-228,52.93,-227,52.93,-226,52.93,-225,52.93,-224,52.93,-223,52.93,-222,52.93,-166,52.93,-165,52.93,-164,52.93,-163,52.93,-162,52.93,-161,52.93,-160,52.93,-159,52.93,-158,52.93,-157,52.93,-156,52.93,-155,52.93,-154,52.93,-153,52.93,-152,52.93,-151,52.93,-150,52.93,-149,52.93,-148,52.93,-147,52.93,-146,52.93,-136,52.93,-135,52.93,-134,52.93,-133,52.93,-64,52.93,-63,52.93,-62,52.93,-61,52.93,-60,52.93,-59,52.93,-58,52.93,-57,52.93,-56,52.93,-55,52.93,-54,52.93,-53,52.93,-52,52.93,-51,52.93,-50,52.93,-49,52.93,-48,52.93,-47,52.93,-46,52.93,-45,52.93,-44,52.93,-43,52.93,-42,52.93,-41,52.93,-40,52.93,-39,52.93,-38,52.93,-37,52.93,-36,52.93,-35,52.93,-34,52.93,-33,52.93,-32,52.93,-250,53.93,-249,53.93,-248,53.93,-247,53.93,-246,53.93,-245,53.93,-244,53.93,-243,53.93,-242,53.93,-241,53.93,-240,53.93,-239,53.93,-238,53.93,-237,53.93,-236,53.93,-235,53.93,-234,53.93,-233,53.93,-232,53.93,-231,53.93,-230,53.93,-229,53.93,-228,53.93,-227,53.93,-226,53.93,-165,53.93,-164,53.93,-163,53.93,-162,53.93,-161,53.93,-160,53.93,-159,53.93,-158,53.93,-157,53.93,-156,53.93,-155,53.93,-154,53.93,-153,53.93,-152,53.93,-151,53.93,-150,53.93,-149,53.93,-148,53.93,-147,53.93,-146,53.93,-136,53.93,-135,53.93,-134,53.93,-133,53.93,-65,53.93,-64,53.93,-63,53.93,-62,53.93,-61,53.93,-60,53.93,-59,53.93,-58,53.93,-57,53.93,-56,53.93,-55,53.93,-54,53.93,-53,53.93,-52,53.93,-51,53.93,-50,53.93,-49,53.93,-48,53.93,-47,53.93,-46,53.93,-45,53.93,-44,53.93,-43,53.93,-42,53.93,-41,53.93,-40,53.93,-39,53.93,-38,53.93,-37,53.93,-36,53.93,-35,53.93,-34,53.93,-33,53.93,-32,53.93,-31,53.93,-250,54.93,-249,54.93,-248,54.93,-247,54.93,-246,54.93,-245,54.93,-244,54.93,-243,54.93,-242,54.93,-241,54.93,-240,54.93,-239,54.93,-238,54.93,-237,54.93,-236,54.93,-235,54.93,-234,54.93,-233,54.93,-232,54.93,-231,54.93,-230,54.93,-229,54.93,-228,54.93,-165,54.93,-164,54.93,-163,54.93,-162,54.93,-161,54.93,-160,54.93,-159,54.93,-158,54.93,-157,54.93,-156,54.93,-155,54.93,-154,54.93,-153,54.93,-152,54.93,-151,54.93,-150,54.93,-149,54.93,-148,54.93,-147,54.93,-146,54.93,-136,54.93,-135,54.93,-134,54.93,-66,54.93,-65,54.93,-64,54.93,-63,54.93,-62,54.93,-61,54.93,-60,54.93,-59,54.93,-58,54.93,-57,54.93,-56,54.93,-55,54.93,-54,54.93,-53,54.93,-52,54.93,-51,54.93,-50,54.93,-49,54.93,-48,54.93,-47,54.93,-46,54.93,-45,54.93,-44,54.93,-43,54.93,-42,54.93,-41,54.93,-40,54.93,-39,54.93,-38,54.93,-37,54.93,-36,54.93,-35,54.93,-34,54.93,-33,54.93,-32,54.93,-31,54.93,-30,54.93,-250,55.93,-249,55.93,-248,55.93,-247,55.93,-246,55.93,-245,55.93,-244,55.93,-243,55.93,-242,55.93,-241,55.93,-240,55.93,-239,55.93,-238,55.93,-237,55.93,-236,55.93,-235,55.93,-234,55.93,-233,55.93,-232,55.93,-231,55.93,-230,55.93,-229,55.93,-165,55.93,-164,55.93,-163,55.93,-162,55.93,-161,55.93,-160,55.93,-159,55.93,-158,55.93,-157,55.93,-156,55.93,-155,55.93,-154,55.93,-153,55.93,-152,55.93,-151,55.93,-150,55.93,-149,55.93,-148,55.93,-147,55.93,-146,55.93,-136,55.93,-135,55.93,-134,55.93,-67,55.93,-66,55.93,-65,55.93,-64,55.93,-63,55.93,-62,55.93,-61,55.93,-60,55.93,-59,55.93,-58,55.93,-57,55.93,-56,55.93,-55,55.93,-54,55.93,-53,55.93,-52,55.93,-51,55.93,-50,55.93,-49,55.93,-48,55.93,-47,55.93,-46,55.93,-45,55.93,-44,55.93,-43,55.93,-42,55.93,-41,55.93,-40,55.93,-39,55.93,-38,55.93,-37,55.93,-36,55.93,-35,55.93,-34,55.93,-33,55.93,-32,55.93,-31,55.93,-30,55.93,-29,55.93,-250,56.93,-249,56.93,-248,56.93,-247,56.93,-246,56.93,-245,56.93,-244,56.93,-243,56.93,-242,56.93,-241,56.93,-240,56.93,-239,56.93,-238,56.93,-237,56.93,-236,56.93,-235,56.93,-234,56.93,-233,56.93,-232,56.93,-231,56.93,-230,56.93,-165,56.93,-164,56.93,-163,56.93,-162,56.93,-161,56.93,-160,56.93,-159,56.93,-158,56.93,-157,56.93,-156,56.93,-155,56.93,-154,56.93,-153,56.93,-152,56.93,-151,56.93,-150,56.93,-149,56.93,-148,56.93,-135,56.93,-67,56.93,-66,56.93,-65,56.93,-64,56.93,-63,56.93,-62,56.93,-61,56.93,-60,56.93,-59,56.93,-58,56.93,-57,56.93,-56,56.93,-55,56.93,-54,56.93,-53,56.93,-52,56.93,-51,56.93,-50,56.93,-49,56.93,-48,56.93,-47,56.93,-46,56.93,-45,56.93,-44,56.93,-43,56.93,-42,56.93,-41,56.93,-40,56.93,-39,56.93,-38,56.93,-37,56.93,-36,56.93,-35,56.93,-34,56.93,-33,56.93,-32,56.93,-31,56.93,-30,56.93,-29,56.93,-28,56.93,-250,57.93,-249,57.93,-248,57.93,-247,57.93,-246,57.93,-245,57.93,-244,57.93,-243,57.93,-242,57.93,-241,57.93,-240,57.93,-239,57.93,-238,57.93,-237,57.93,-236,57.93,-235,57.93,-234,57.93,-233,57.93,-232,57.93,-231,57.93,-230,57.93,-165,57.93,-164,57.93,-163,57.93,-162,57.93,-161,57.93,-160,57.93,-159,57.93,-158,57.93,-157,57.93,-156,57.93,-155,57.93,-154,57.93,-153,57.93,-152,57.93,-151,57.93,-150,57.93,-149,57.93,-148,57.93,-67,57.93,-66,57.93,-65,57.93,-64,57.93,-63,57.93,-62,57.93,-61,57.93,-60,57.93,-59,57.93,-58,57.93,-57,57.93,-56,57.93,-55,57.93,-54,57.93,-53,57.93,-52,57.93,-51,57.93,-50,57.93,-49,57.93,-48,57.93,-47,57.93,-46,57.93,-45,57.93,-44,57.93,-43,57.93,-42,57.93,-41,57.93,-40,57.93,-39,57.93,-38,57.93,-37,57.93,-36,57.93,-35,57.93,-34,57.93,-33,57.93,-32,57.93,-31,57.93,-30,57.93,-29,57.93,-28,57.93,-251,58.93,-250,58.93,-249,58.93,-248,58.93,-247,58.93,-246,58.93,-245,58.93,-244,58.93,-243,58.93,-242,58.93,-241,58.93,-240,58.93,-239,58.93,-238,58.93,-237,58.93,-236,58.93,-235,58.93,-234,58.93,-233,58.93,-232,58.93,-231,58.93,-230,58.93,-164,58.93,-163,58.93,-162,58.93,-161,58.93,-160,58.93,-159,58.93,-158,58.93,-157,58.93,-156,58.93,-155,58.93,-154,58.93,-153,58.93,-152,58.93,-151,58.93,-150,58.93,-149,58.93,-66,58.93,-65,58.93,-64,58.93,-63,58.93,-62,58.93,-61,58.93,-60,58.93,-59,58.93,-58,58.93,-57,58.93,-56,58.93,-55,58.93,-54,58.93,-53,58.93,-52,58.93,-51,58.93,-50,58.93,-49,58.93,-48,58.93,-47,58.93,-46,58.93,-45,58.93,-44,58.93,-43,58.93,-42,58.93,-41,58.93,-40,58.93,-39,58.93,-38,58.93,-37,58.93,-36,58.93,-35,58.93,-34,58.93,-33,58.93,-32,58.93,-31,58.93,-30,58.93,-29,58.93,-28,58.93,-251,59.93,-250,59.93,-249,59.93,-248,59.93,-247,59.93,-246,59.93,-245,59.93,-244,59.93,-243,59.93,-242,59.93,-241,59.93,-240,59.93,-239,59.93,-238,59.93,-237,59.93,-236,59.93,-235,59.93,-234,59.93,-233,59.93,-232,59.93,-231,59.93,-163,59.93,-162,59.93,-161,59.93,-160,59.93,-159,59.93,-158,59.93,-157,59.93,-156,59.93,-155,59.93,-154,59.93,-153,59.93,-152,59.93,-151,59.93,-150,59.93,-149,59.93,-66,59.93,-65,59.93,-64,59.93,-63,59.93,-62,59.93,-61,59.93,-60,59.93,-59,59.93,-58,59.93,-57,59.93,-56,59.93,-55,59.93,-54,59.93,-53,59.93,-52,59.93,-51,59.93,-50,59.93,-49,59.93,-48,59.93,-47,59.93,-46,59.93,-45,59.93,-44,59.93,-43,59.93,-42,59.93,-41,59.93,-40,59.93,-39,59.93,-38,59.93,-37,59.93,-36,59.93,-35,59.93,-34,59.93,-33,59.93,-32,59.93,-31,59.93,-30,59.93,-29,59.93,-28,59.93,-251,60.93,-250,60.93,-249,60.93,-248,60.93,-247,60.93,-246,60.93,-245,60.93,-244,60.93,-243,60.93,-242,60.93,-241,60.93,-240,60.93,-239,60.93,-238,60.93,-237,60.93,-236,60.93,-235,60.93,-234,60.93,-233,60.93,-232,60.93,-231,60.93,-163,60.93,-162,60.93,-161,60.93,-160,60.93,-159,60.93,-158,60.93,-157,60.93,-156,60.93,-155,60.93,-154,60.93,-153,60.93,-152,60.93,-151,60.93,-150,60.93,-65,60.93,-64,60.93,-63,60.93,-62,60.93,-61,60.93,-60,60.93,-59,60.93,-58,60.93,-57,60.93,-56,60.93,-55,60.93,-54,60.93,-53,60.93,-52,60.93,-51,60.93,-50,60.93,-49,60.93,-48,60.93,-47,60.93,-46,60.93,-45,60.93,-44,60.93,-43,60.93,-42,60.93,-41,60.93,-40,60.93,-39,60.93,-38,60.93,-37,60.93,-36,60.93,-35,60.93,-34,60.93,-33,60.93,-32,60.93,-31,60.93,-30,60.93,-29,60.93,-28,60.93,-251,61.93,-250,61.93,-249,61.93,-248,61.93,-247,61.93,-246,61.93,-245,61.93,-244,61.93,-243,61.93,-242,61.93,-241,61.93,-240,61.93,-239,61.93,-238,61.93,-237,61.93,-236,61.93,-235,61.93,-234,61.93,-233,61.93,-232,61.93,-162,61.93,-161,61.93,-160,61.93,-159,61.93,-158,61.93,-157,61.93,-156,61.93,-155,61.93,-154,61.93,-153,61.93,-152,61.93,-151,61.93,-65,61.93,-64,61.93,-63,61.93,-62,61.93,-61,61.93,-60,61.93,-59,61.93,-58,61.93,-57,61.93,-56,61.93,-55,61.93,-54,61.93,-53,61.93,-52,61.93,-51,61.93,-50,61.93,-49,61.93,-48,61.93,-47,61.93,-46,61.93,-45,61.93,-44,61.93,-43,61.93,-42,61.93,-41,61.93,-40,61.93,-39,61.93,-38,61.93,-37,61.93,-36,61.93,-35,61.93,-34,61.93,-33,61.93,-32,61.93,-31,61.93,-30,61.93,-29,61.93,-28,61.93,-251,62.93,-250,62.93,-249,62.93,-248,62.93,-247,62.93,-246,62.93,-245,62.93,-244,62.93,-243,62.93,-242,62.93,-241,62.93,-240,62.93,-239,62.93,-238,62.93,-237,62.93,-236,62.93,-235,62.93,-234,62.93,-233,62.93,-162,62.93,-161,62.93,-160,62.93,-159,62.93,-158,62.93,-157,62.93,-156,62.93,-155,62.93,-154,62.93,-153,62.93,-152,62.93,-64,62.93,-63,62.93,-62,62.93,-61,62.93,-60,62.93,-59,62.93,-58,62.93,-57,62.93,-56,62.93,-55,62.93,-54,62.93,-53,62.93,-48,62.93,-47,62.93,-46,62.93,-45,62.93,-44,62.93,-43,62.93,-42,62.93,-41,62.93,-40,62.93,-39,62.93,-38,62.93,-37,62.93,-36,62.93,-35,62.93,-34,62.93,-33,62.93,-32,62.93,-31,62.93,-30,62.93,-29,62.93,-28,62.93,-251,63.93,-250,63.93,-249,63.93,-248,63.93,-247,63.93,-246,63.93,-245,63.93,-244,63.93,-243,63.93,-242,63.93,-241,63.93,-240,63.93,-239,63.93,-238,63.93,-237,63.93,-236,63.93,-235,63.93,-234,63.93,-161,63.93,-160,63.93,-159,63.93,-158,63.93,-157,63.93,-156,63.93,-155,63.93,-154,63.93,-153,63.93,-64,63.93,-63,63.93,-62,63.93,-61,63.93,-60,63.93,-59,63.93,-58,63.93,-57,63.93,-46,63.93,-45,63.93,-44,63.93,-43,63.93,-42,63.93,-41,63.93,-40,63.93,-39,63.93,-38,63.93,-37,63.93,-36,63.93,-35,63.93,-34,63.93,-33,63.93,-32,63.93,-31,63.93,-30,63.93,-29,63.93,-251,64.93,-250,64.93,-249,64.93,-248,64.93,-247,64.93,-246,64.93,-245,64.93,-244,64.93,-243,64.93,-242,64.93,-241,64.93,-240,64.93,-239,64.93,-238,64.93,-237,64.93,-236,64.93,-235,64.93,-161,64.93,-160,64.93,-159,64.93,-158,64.93,-156,64.93,-65,64.93,-64,64.93,-63,64.93,-62,64.93,-61,64.93,-60,64.93,-59,64.93,-58,64.93,-45,64.93,-44,64.93,-43,64.93,-42,64.93,-41,64.93,-40,64.93,-39,64.93,-38,64.93,-37,64.93,-36,64.93,-35,64.93,-34,64.93,-33,64.93,-32,64.93,-31,64.93,-30,64.93,-252,65.93,-251,65.93,-250,65.93,-249,65.93,-248,65.93,-247,65.93,-246,65.93,-245,65.93,-244,65.93,-243,65.93,-242,65.93,-241,65.93,-240,65.93,-239,65.93,-238,65.93,-237,65.93,-64,65.93,-63,65.93,-62,65.93,-44,65.93,-43,65.93,-42,65.93,-41,65.93,-40,65.93,-39,65.93,-38,65.93,-37,65.93,-36,65.93,-35,65.93,-34,65.93,-33,65.93,-32,65.93,-31,65.93,-30,65.93,-252,66.93,-251,66.93,-250,66.93,-249,66.93,-248,66.93,-247,66.93,-246,66.93,-245,66.93,-244,66.93,-243,66.93,-242,66.93,-241,66.93,-240,66.93,-239,66.93,-238,66.93,-43,66.93,-41,66.93,-40,66.93,-39,66.93,-38,66.93,-37,66.93,-36,66.93,-35,66.93,-34,66.93,-33,66.93,-32,66.93,-31,66.93,-253,67.93,-252,67.93,-251,67.93,-250,67.93,-249,67.93,-248,67.93,-247,67.93,-246,67.93,-245,67.93,-244,67.93,-243,67.93,-242,67.93,-241,67.93,-240,67.93,-239,67.93,-238,67.93,-40,67.93,-39,67.93,-38,67.93,-37,67.93,-36,67.93,-35,67.93,-34,67.93,-33,67.93,-32,67.93,-31,67.93,-6,67.93,-253,68.93,-252,68.93,-251,68.93,-250,68.93,-249,68.93,-248,68.93,-247,68.93,-246,68.93,-245,68.93,-244,68.93,-243,68.93,-242,68.93,-241,68.93,-240,68.93,-239,68.93,-39,68.93,-38,68.93,-37,68.93,-36,68.93,-35,68.93,-34,68.93,-33,68.93,-32,68.93,-5,68.93,-253,69.93,-252,69.93,-251,69.93,-250,69.93,-249,69.93,-248,69.93,-247,69.93,-246,69.93,-245,69.93,-244,69.93,-243,69.93,-242,69.93,-34,69.93,-33,69.93,-5,69.93,-4,69.93,-3,69.93,-253,70.93,-252,70.93,-251,70.93,-250,70.93,-249,70.93,-248,70.93,-247,70.93,-246,70.93,-245,70.93,-244,70.93,-243,70.93,-5,70.93,-4,70.93,-254,71.93,-253,71.93,-252,71.93,-251,71.93,-250,71.93,-249,71.93,-248,71.93,-247,71.93,-246,71.93,-244,71.93,-5,71.93,-254,72.93,-253,72.93,-252,72.93,-251,72.93,-250,72.93,-249,72.93,-248,72.93,-247,72.93,-35,72.93,-34,72.93,-33,72.93,-8,72.93,-254,73.93,-253,73.93,-252,73.93,-251,73.93,-250,73.93,-249,73.93,-248,73.93,-247,73.93,-246,73.93,-34,73.93,-33,73.93,-9,73.93,-8,73.93,-254,74.93,-253,74.93,-252,74.93,-251,74.93,-250,74.93,-249,74.93,-248,74.93,-247,74.93,-10,74.93,-9,74.93,-255,75.93,-254,75.93,-253,75.93,-252,75.93,-251,75.93,-250,75.93,-249,75.93,-248,75.93,-247,75.93,-11,75.93,-10,75.93,-255,76.93,-254,76.93,-253,76.93,-252,76.93,-251,76.93,-250,76.93,-249,76.93,-13,76.93,-12,76.93,-11,76.93,-10,76.93,-255,77.93,-254,77.93,-253,77.93,-252,77.93,-251,77.93,-250,77.93,-249,77.93,-254,78.93,-253,78.93,-252,78.93,-251,78.93,-250,78.93,-249,78.93,-248,78.93,-255,79.93,-254,79.93,-253,79.93,-252,79.93,-251,79.93,-250,79.93,-249,79.93,-248,79.93,-255,80.93,-254,80.93,-253,80.93,-252,80.93,-251,80.93,-250,80.93,-249,80.93,-255,81.93,-254,81.93,-253,81.93,-252,81.93,-251,81.93,-250,81.93,-249,81.93,-255,82.93,-254,82.93,-253,82.93,-252,82.93,-251,82.93,-250,82.93,-249,82.93,-255,83.93,-254,83.93,-253,83.93,-252,83.93,-251,83.93,-250,83.93,-249,83.93,-254,84.93,-253,84.93,-252,84.93,-251,84.93,-250,84.93,-249,84.93,-252,85.93,-251,85.93,-250,85.93,-249,85.93,-248,85.93,-248,86.93];var El=class{constructor(r,t){Dt(this,"target");Dt(this,"name");Dt(this,"intersected");Dt(this,"wasIntersected",!1);Dt(this,"distance");this.target=r,this.name=t,this.intersected=!1,this.distance=0}},$e=class{constructor(r,t=null){Dt(this,"type");Dt(this,"cancelBubble");Dt(this,"originalEvent");Dt(this,"coords",new it(0,0));Dt(this,"distance",0);Dt(this,"intersected",!1);this.cancelBubble=!1,this.type=r,this.originalEvent=t}stopPropagation(){this.cancelBubble=!0}},lm=class{constructor(r,t,e,n){Dt(this,"renderer");Dt(this,"camera");Dt(this,"domElement");Dt(this,"bindEventsOnBodyElement");Dt(this,"autoAdd");Dt(this,"scene");Dt(this,"mouse");Dt(this,"supportsPointerEvents");Dt(this,"interactiveObjects");Dt(this,"closestObject");Dt(this,"raycaster");Dt(this,"treatTouchEventsAsMouseEvents");Dt(this,"dispose",()=>{this.domElement.removeEventListener("click",this.onMouseClick),this.supportsPointerEvents&&(this.bindEventsOnBodyElement?this.domElement.ownerDocument.removeEventListener("pointermove",this.onDocumentPointerMove):this.domElement.removeEventListener("pointermove",this.onDocumentPointerMove),this.domElement.removeEventListener("pointerdown",this.onPointerDown),this.domElement.removeEventListener("pointerup",this.onPointerUp)),this.bindEventsOnBodyElement?this.domElement.ownerDocument.removeEventListener("mousemove",this.onDocumentMouseMove):this.domElement.removeEventListener("mousemove",this.onDocumentMouseMove),this.domElement.removeEventListener("mousedown",this.onMouseDown),this.domElement.removeEventListener("mouseup",this.onMouseUp),this.domElement.removeEventListener("touchstart",this.onTouchStart),this.domElement.removeEventListener("touchmove",this.onTouchMove),this.domElement.removeEventListener("touchend",this.onTouchEnd)});Dt(this,"add",(r,t=[])=>{if(r&&!this.interactiveObjects.find(e=>e.target===r))if(t.length>0)t.forEach(e=>{let n=r.getObjectByName(e);if(n){let i=new El(n,e);this.interactiveObjects.push(i)}});else{let e=new El(r,r.name);this.interactiveObjects.push(e)}});Dt(this,"remove",(r,t=[])=>{!r||(t.length>0?t.forEach(e=>{let n=r.getObjectByName(e);n&&(this.interactiveObjects=this.interactiveObjects.filter(i=>i.target!==n))}):this.interactiveObjects=this.interactiveObjects.filter(e=>e.target!==r))});Dt(this,"update",()=>{this.raycaster.setFromCamera(this.mouse,this.camera),this.interactiveObjects.forEach(n=>{n.target&&this.checkIntersection(n)}),this.interactiveObjects.sort(function(n,i){return n.distance-i.distance});let r=this.interactiveObjects.find(n=>n.intersected)??null;if(r!=this.closestObject){if(this.closestObject){let n=new $e("mouseout");this.dispatch(this.closestObject,n)}if(r){let n=new $e("mouseover");this.dispatch(r,n)}this.closestObject=r}let t;this.interactiveObjects.forEach(n=>{!n.intersected&&n.wasIntersected&&(t||(t=new $e("mouseleave")),this.dispatch(n,t))});let e;this.interactiveObjects.forEach(n=>{n.intersected&&!n.wasIntersected&&(e||(e=new $e("mouseenter")),this.dispatch(n,e))})});Dt(this,"checkIntersection",r=>{let t=this.raycaster.intersectObjects([r.target],!0);if(r.wasIntersected=r.intersected,t.length>0){let e=t[0].distance;t.forEach(n=>{n.distance<e&&(e=n.distance)}),r.intersected=!0,r.distance=e}else r.intersected=!1});Dt(this,"onDocumentMouseMove",r=>{this.mapPositionToPoint(this.mouse,r.clientX,r.clientY);let t=new $e("mousemove",r);this.interactiveObjects.forEach(e=>{this.dispatch(e,t)})});Dt(this,"onDocumentPointerMove",r=>{this.mapPositionToPoint(this.mouse,r.clientX,r.clientY);let t=new $e("pointermove",r);this.interactiveObjects.forEach(e=>{this.dispatch(e,t)})});Dt(this,"onTouchMove",r=>{r.touches.length>0&&this.mapPositionToPoint(this.mouse,r.touches[0].clientX,r.touches[0].clientY);let t=new $e(this.treatTouchEventsAsMouseEvents?"mousemove":"touchmove",r);this.interactiveObjects.forEach(e=>{this.dispatch(e,t)})});Dt(this,"onMouseClick",r=>{this.update();let t=new $e("click",r);this.interactiveObjects.forEach(e=>{e.intersected&&this.dispatch(e,t)})});Dt(this,"onMouseDown",r=>{this.mapPositionToPoint(this.mouse,r.clientX,r.clientY),this.update();let t=new $e("mousedown",r);this.interactiveObjects.forEach(e=>{e.intersected&&this.dispatch(e,t)})});Dt(this,"onPointerDown",r=>{this.mapPositionToPoint(this.mouse,r.clientX,r.clientY),this.update();let t=new $e("pointerdown",r);this.interactiveObjects.forEach(e=>{e.intersected&&this.dispatch(e,t)})});Dt(this,"onTouchStart",r=>{r.touches.length>0&&this.mapPositionToPoint(this.mouse,r.touches[0].clientX,r.touches[0].clientY),this.update();let t=new $e(this.treatTouchEventsAsMouseEvents?"mousedown":"touchstart",r);this.interactiveObjects.forEach(e=>{e.intersected&&this.dispatch(e,t)})});Dt(this,"onMouseUp",r=>{let t=new $e("mouseup",r);this.interactiveObjects.forEach(e=>{this.dispatch(e,t)})});Dt(this,"onPointerUp",r=>{let t=new $e("pointerup",r);this.interactiveObjects.forEach(e=>{this.dispatch(e,t)})});Dt(this,"onTouchEnd",r=>{r.touches.length>0&&this.mapPositionToPoint(this.mouse,r.touches[0].clientX,r.touches[0].clientY),this.update();let t=new $e(this.treatTouchEventsAsMouseEvents?"mouseup":"touchend",r);this.interactiveObjects.forEach(e=>{this.dispatch(e,t)})});Dt(this,"dispatch",(r,t)=>{r.target&&!t.cancelBubble&&(t.coords=this.mouse,t.distance=r.distance,t.intersected=r.intersected,r.target.dispatchEvent(t))});Dt(this,"mapPositionToPoint",(r,t,e)=>{let n=this.renderer.domElement.getBoundingClientRect();r.x=(t-n.left)/n.width*2-1,r.y=-((e-n.top)/n.height)*2+1});this.renderer=r,this.camera=t,this.domElement=e,this.bindEventsOnBodyElement=n&&typeof n.bindEventsOnBodyElement<"u"?n.bindEventsOnBodyElement:!0,this.scene=n&&typeof n.scene<"u"?n.scene:null,this.scene&&(this.scene.onBeforeRender=()=>{this.autoAdd&&this.scene!==null&&this.scene.traverse(i=>{this.add(i),i.addEventListener("removed",s=>{this.remove(s.target)})}),this.update()}),this.autoAdd=n&&typeof n.autoAdd<"u"?n.autoAdd:!1,this.autoAdd&&this.scene===null&&console.error("Attention: Options.scene needs to be set when using options.autoAdd"),this.mouse=new it(-1,1),this.supportsPointerEvents=!!window.PointerEvent,this.interactiveObjects=[],this.closestObject=null,this.raycaster=new zp,e.addEventListener("click",this.onMouseClick),this.supportsPointerEvents&&(this.bindEventsOnBodyElement?e.ownerDocument.addEventListener("pointermove",this.onDocumentPointerMove):e.addEventListener("pointermove",this.onDocumentPointerMove),e.addEventListener("pointerdown",this.onPointerDown),e.addEventListener("pointerup",this.onPointerUp)),this.bindEventsOnBodyElement?e.ownerDocument.addEventListener("mousemove",this.onDocumentMouseMove):e.addEventListener("mousemove",this.onDocumentMouseMove),e.addEventListener("mousedown",this.onMouseDown),e.addEventListener("mouseup",this.onMouseUp),e.addEventListener("touchstart",this.onTouchStart,{passive:!0}),e.addEventListener("touchmove",this.onTouchMove,{passive:!0}),e.addEventListener("touchend",this.onTouchEnd,{passive:!0}),this.treatTouchEventsAsMouseEvents=!0}};const Ne=6;var Yt,Yr,jr,Hs,Vs,Ws,Zr,_i,Zt,Xs,qs,Kr,Vi,$o,m6,Ys,O0;class cm extends Ae{constructor(){super(...arguments);Be(this,$o);Be(this,Ys);Dt(this,"isMeshLineGeometry",!0);Dt(this,"type","MeshLineGeometry");Be(this,Yt,new Float32Array);Be(this,Yr,new Float32Array);Be(this,jr,new Float32Array);Be(this,Hs,new Float32Array);Be(this,Vs,new Float32Array);Be(this,Ws,new Float32Array);Be(this,Zr,new Uint16Array);Be(this,_i,new Float32Array);Dt(this,"widthCallback",null);Be(this,Zt,null);Be(this,Xs,[]);Be(this,qs,null);Be(this,Kr,0);Be(this,Vi,0)}get points(){return yt(this,Xs)}set points(e){this.setPoints(e,this.widthCallback)}setPoints(e,n=null,i=!0){if(Oe(this,Xs,e),Oe(this,qs,this.widthCallback),this.widthCallback=n,!("length"in e))throw new Error("not a Vector3 Array, or not a number Array or Float32Array with 3 numbers per point");if(!e.length){this.dispose(),Oe(this,Vi,0),Oe(this,Kr,0);return}const s=um(e);if(s)Oe(this,Vi,e.length);else{if(e.length%3!==0)throw new Error("The array should consist of number triplets, 3 number per point.");Oe(this,Vi,e.length/3)}const o=yt(this,Vi),a=yt(this,Kr)!==o,l=yt(this,qs)!==this.widthCallback;(!yt(this,Zt)||a)&&eo(this,$o,m6).call(this,o),Oe(this,Kr,o);let c,u=0,h=0,f=0,d=0,g=0,_=0,m=0,p=0,M=0,v=0,x=0;if(s)for(let T=0;T<e.length;T++){const E=e[T];if(!E)throw new Error("point missing");({x:u,y:h,z:f}=E),Cr(yt(this,Yt),d,u,h,f),d+=Ne;const A=T/e.length;yt(this,_i)[g+0]=A,yt(this,_i)[g+1]=A,g+=2}else for(let T=0;T<e.length;T+=3){const E=e[T+0],A=e[T+1],y=e[T+2];if(E==null||A==null||y==null)throw new Error("point missing");Cr(yt(this,Yt),d,E,A,y),d+=Ne;const b=T/e.length;yt(this,_i)[g+0]=b,yt(this,_i)[g+1]=b,g+=2}let S=0;if(eo(this,Ys,O0).call(this,0,o-1)?(S=(o-2)*Ne,u=yt(this,Yt)[S+0],h=yt(this,Yt)[S+1],f=yt(this,Yt)[S+2]):(S=0,u=yt(this,Yt)[S+0],h=yt(this,Yt)[S+1],f=yt(this,Yt)[S+2]),u==null||h==null||f==null)throw new Error("point missing");Cr(yt(this,Yr),_,u,h,f),_+=6;for(let T=0;T<o;T++){if(a&&(Tl(yt(this,Hs),p,1,-1),p+=2),(l||a)&&(this.widthCallback?c=this.widthCallback(T/(o-1)):c=1,Tl(yt(this,Vs),M,c,c),M+=2),a&&(hm(yt(this,Ws),x,T/(o-1),0,T/(o-1),1),x+=4),T<o-1){if(S=T*Ne,u=yt(this,Yt)[S+0],h=yt(this,Yt)[S+1],f=yt(this,Yt)[S+2],u==null||h==null||f==null)throw new Error("point missing");if(Cr(yt(this,Yr),_,u,h,f),_+=6,a){const E=T*2;bl(yt(this,Zr),v,E+0,E+1,E+2),bl(yt(this,Zr),v+3,E+2,E+1,E+3),v+=6}}if(T>0){if(S=T*Ne,u=yt(this,Yt)[S+0],h=yt(this,Yt)[S+1],f=yt(this,Yt)[S+2],u==null||h==null||f==null)throw new Error("point missing");Cr(yt(this,jr),m,u,h,f),m+=6}}if(eo(this,Ys,O0).call(this,o-1,0)?(S=1*Ne,u=yt(this,Yt)[S+0],h=yt(this,Yt)[S+1],f=yt(this,Yt)[S+2]):(S=(o-1)*Ne,u=yt(this,Yt)[S+0],h=yt(this,Yt)[S+1],f=yt(this,Yt)[S+2]),u==null||h==null||f==null)throw new Error("point missing");if(Cr(yt(this,jr),m,u,h,f),!yt(this,Zt))throw new Error("missing attributes");yt(this,Zt).position.needsUpdate=!0,yt(this,Zt).previous.needsUpdate=!0,yt(this,Zt).next.needsUpdate=!0,yt(this,Zt).side.needsUpdate=a,yt(this,Zt).width.needsUpdate=a,yt(this,Zt).uv.needsUpdate=a,yt(this,Zt).index.needsUpdate=a,i&&(this.computeBoundingSphere(),this.computeBoundingBox())}advance(e){if(!yt(this,Zt))throw new Error("Call setPoints first.");const n=yt(this,Zt).position.array,i=yt(this,Zt).previous.array,s=yt(this,Zt).next.array,o=n.length;n0(n,0,i,0,o),n0(n,Ne,n,0,o-Ne),n[o-6]=e.x,n[o-5]=e.y,n[o-4]=e.z,n[o-3]=e.x,n[o-2]=e.y,n[o-1]=e.z,n0(n,Ne,s,0,o-Ne),s[o-6]=e.x,s[o-5]=e.y,s[o-4]=e.z,s[o-3]=e.x,s[o-2]=e.y,s[o-1]=e.z,yt(this,Zt).position.needsUpdate=!0,yt(this,Zt).previous.needsUpdate=!0,yt(this,Zt).next.needsUpdate=!0}}Yt=new WeakMap,Yr=new WeakMap,jr=new WeakMap,Hs=new WeakMap,Vs=new WeakMap,Ws=new WeakMap,Zr=new WeakMap,_i=new WeakMap,Zt=new WeakMap,Xs=new WeakMap,qs=new WeakMap,Kr=new WeakMap,Vi=new WeakMap,$o=new WeakSet,m6=function(e){this.dispose(),Oe(this,Zt,{position:new oe(Oe(this,Yt,new Float32Array(e*Ne)),3),previous:new oe(Oe(this,Yr,new Float32Array(e*Ne)),3),next:new oe(Oe(this,jr,new Float32Array(e*Ne)),3),side:new oe(Oe(this,Hs,new Float32Array(e*2)),1),width:new oe(Oe(this,Vs,new Float32Array(e*2)),1),uv:new oe(Oe(this,Ws,new Float32Array(e*4)),2),counters:new oe(Oe(this,_i,new Float32Array(e*2)),1),index:new oe(Oe(this,Zr,new Uint16Array((e-1)*Ne)),1)}),this.setAttribute("position",yt(this,Zt).position),this.setAttribute("previous",yt(this,Zt).previous),this.setAttribute("next",yt(this,Zt).next),this.setAttribute("side",yt(this,Zt).side),this.setAttribute("width",yt(this,Zt).width),this.setAttribute("uv",yt(this,Zt).uv),this.setAttribute("counters",yt(this,Zt).counters),this.setIndex(yt(this,Zt).index)},Ys=new WeakSet,O0=function(e,n){const i=e*Ne,s=n*Ne;return yt(this,Yt)[i+0]===yt(this,Yt)[s+0]&&yt(this,Yt)[i+1]===yt(this,Yt)[s+1]&&yt(this,Yt)[i+2]===yt(this,Yt)[s+2]};function um(r){return!!(r.length&&r[0]instanceof P)}function n0(r,t,e,n,i){if(n+i>e.length)throw new Error("Not enough space to copy from src to dst.");for(let s=0,o=t+i;s+t<o;s++){const a=r[s+t];if(a==null)throw new Error("missing src value");e[s+n]=a}}function Tl(r,t,e,n){r[t+0]=e,r[t+1]=n}function bl(r,t,e,n,i){r[t+0]=e,r[t+1]=n,r[t+2]=i}function Cr(r,t,e,n,i){r[t+0]=e,r[t+1]=n,r[t+2]=i,r[t+3]=e,r[t+4]=n,r[t+5]=i}function hm(r,t,e,n,i,s){r[t+0]=e,r[t+1]=n,r[t+2]=i,r[t+3]=s}At.meshline_vert=`
	${At.logdepthbuf_pars_vertex}
	${At.fog_pars_vertex}
	
	attribute vec3 previous;
	attribute vec3 next;
	attribute float side;
	attribute float width;
	attribute float counters;
	
	uniform vec2 resolution;
	uniform float lineWidth;
	uniform vec3 color;
	uniform float opacity;
	uniform float sizeAttenuation;
	
	varying vec2 vUV;
	varying vec4 vColor;
	varying float vCounters;
	
	vec2 fix( vec4 i, float aspect ) {
	
	    vec2 res = i.xy / i.w;
	    res.x *= aspect;
		 vCounters = counters;
	    return res;
        
	}
	
	void main() {
	
	    float aspect = resolution.x / resolution.y;
	
	    vColor = vec4( color, opacity );
	    vUV = uv;
	
	    mat4 m = projectionMatrix * modelViewMatrix;
	    vec4 finalPosition = m * vec4( position, 1.0 );
	    vec4 prevPos = m * vec4( previous, 1.0 );
	    vec4 nextPos = m * vec4( next, 1.0 );
	
	    vec2 currentP = fix( finalPosition, aspect );
	    vec2 prevP = fix( prevPos, aspect );
	    vec2 nextP = fix( nextPos, aspect );
	
	    float w = lineWidth * width;
	
	    vec2 dir;
	    if( nextP == currentP ) dir = normalize( currentP - prevP );
	    else if( prevP == currentP ) dir = normalize( nextP - currentP );
	    else {
	        vec2 dir1 = normalize( currentP - prevP );
	        vec2 dir2 = normalize( nextP - currentP );
	        dir = normalize( dir1 + dir2 );
	
	        vec2 perp = vec2( -dir1.y, dir1.x );
	        vec2 miter = vec2( -dir.y, dir.x );
	        //w = clamp( w / dot( miter, perp ), 0., 4. * lineWidth * width );
	
	    }
	
	    //vec2 normal = ( cross( vec3( dir, 0. ), vec3( 0., 0., 1. ) ) ).xy;
	    vec4 normal = vec4( -dir.y, dir.x, 0., 1. );
	    normal.xy *= .5 * w;
	    normal *= projectionMatrix;
	    if( sizeAttenuation == 0. ) {
	        normal.xy *= finalPosition.w;
	        normal.xy /= ( vec4( resolution, 0., 1. ) * projectionMatrix ).xy;
	    }
	
	    finalPosition.xy += normal.xy * side;
	
	    gl_Position = finalPosition;
	
        ${At.logdepthbuf_vertex}
        ${At.fog_vertex&&"vec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );"}
        ${At.fog_vertex}
	}
`;At.meshline_frag=`
	${At.fog_pars_fragment}
	${At.logdepthbuf_pars_fragment}
	
	uniform sampler2D map;
	uniform sampler2D alphaMap;
	uniform float useMap;
	uniform float useAlphaMap;
	uniform float useDash;
	uniform float dashArray;
	uniform float dashOffset;
	uniform float dashRatio;
	uniform float visibility;
	uniform float alphaTest;
	uniform vec2 repeat;

	varying vec2 vUV;
	varying vec4 vColor;
	varying float vCounters;
	
	void main() {
        ${At.logdepthbuf_fragment}

	    vec4 c = vColor;
	    if( useMap == 1. ) c *= texture2D( map, vUV * repeat );
	    if( useAlphaMap == 1. ) c.a *= texture2D( alphaMap, vUV * repeat ).a;
	    if( c.a < alphaTest ) discard;
	    if( useDash == 1. ){
	        c.a *= ceil(mod(vCounters + dashOffset, dashArray) - (dashArray * dashRatio));
	    }
	    gl_FragColor = c;
	    gl_FragColor.a *= step(vCounters, visibility);
	
        ${At.fog_fragment}
	}
`;class fm extends oi{constructor(e){super({uniforms:Object.assign({},pt.fog,{lineWidth:{value:1},map:{value:null},useMap:{value:!1},alphaMap:{value:null},useAlphaMap:{value:!1},color:{value:new qt(16777215)},opacity:{value:1},resolution:{value:new it(1,1)},sizeAttenuation:{value:!0},dashArray:{value:0},dashOffset:{value:0},dashRatio:{value:.5},useDash:{value:!1},visibility:{value:1},alphaTest:{value:0},repeat:{value:new it(1,1)}}),vertexShader:At.meshline_vert,fragmentShader:At.meshline_frag});Dt(this,"isMeshLineMaterial",!0);Dt(this,"type","MeshLineMaterial");Object.defineProperties(this,{fogColor:{enumerable:!0,get:()=>this.uniforms.fogColor.value,set:n=>{this.uniforms.fogColor.value=n}},fogDensity:{enumerable:!0,get:()=>this.uniforms.fogDensity.value,set:n=>{this.uniforms.fogDensity.value=n}},fogNear:{enumerable:!0,get:()=>this.uniforms.fogNear.value,set:n=>{this.uniforms.fogNear.value=n}},fogFar:{enumerable:!0,get:()=>this.uniforms.fogFar.value,set:n=>{this.uniforms.fogFar.value=n}},lineWidth:{enumerable:!0,get:()=>this.uniforms.lineWidth.value,set:n=>{this.uniforms.lineWidth.value=n}},map:{enumerable:!0,get:()=>this.uniforms.map.value,set:n=>{this.uniforms.map.value=n}},useMap:{enumerable:!0,get:()=>this.uniforms.useMap.value,set:n=>{this.uniforms.useMap.value=n}},alphaMap:{enumerable:!0,get:()=>this.uniforms.alphaMap.value,set:n=>{this.uniforms.alphaMap.value=n}},useAlphaMap:{enumerable:!0,get:()=>this.uniforms.useAlphaMap.value,set:n=>{this.uniforms.useAlphaMap.value=n}},color:{enumerable:!0,get:()=>this.uniforms.color.value,set:n=>{this.uniforms.color.value=n}},opacity:{enumerable:!0,get:()=>this.uniforms.opacity.value,set:n=>{this.uniforms.opacity.value=n}},resolution:{enumerable:!0,get:()=>this.uniforms.resolution.value,set:n=>{this.uniforms.resolution.value.copy(n)}},sizeAttenuation:{enumerable:!0,get:()=>this.uniforms.sizeAttenuation.value,set:n=>{this.uniforms.sizeAttenuation.value=n}},dashArray:{enumerable:!0,get:()=>this.uniforms.dashArray.value,set:n=>{this.uniforms.dashArray.value=n,this.useDash=n!==0}},dashOffset:{enumerable:!0,get:()=>this.uniforms.dashOffset.value,set:n=>{this.uniforms.dashOffset.value=n}},dashRatio:{enumerable:!0,get:()=>this.uniforms.dashRatio.value,set:n=>{this.uniforms.dashRatio.value=n}},useDash:{enumerable:!0,get:()=>this.uniforms.useDash.value,set:n=>{this.uniforms.useDash.value=n}},visibility:{enumerable:!0,get:()=>this.uniforms.visibility.value,set:n=>{this.uniforms.visibility.value=n}},alphaTest:{enumerable:!0,get:()=>this.uniforms.alphaTest.value,set:n=>{this.uniforms.alphaTest.value=n}},repeat:{enumerable:!0,get:()=>this.uniforms.repeat.value,set:n=>{this.uniforms.repeat.value.copy(n)}}}),this.setValues(e)}copy(e){return super.copy(this),this.fogColor=e.fogColor,this.fogDensity=e.fogDensity,this.fogNear=e.fogNear,this.fogFar=e.fogFar,this.lineWidth=e.lineWidth,this.map=e.map,this.useMap=e.useMap,this.alphaMap=e.alphaMap,this.useAlphaMap=e.useAlphaMap,this.color.copy(e.color),this.opacity=e.opacity,this.resolution.copy(e.resolution),this.sizeAttenuation=e.sizeAttenuation,this.dashArray=e.dashArray,this.dashOffset=e.dashOffset,this.dashRatio=e.dashRatio,this.useDash=e.useDash,this.visibility=e.visibility,this.alphaTest=e.alphaTest,this.repeat.copy(e.repeat),this}}class dm extends me{constructor(){super(...arguments);Dt(this,"isMeshLine",!0);Dt(this,"type","MeshLine")}raycast(e,n){const i=new ge,s=new Ks,o=new Zs,a=new P,l=this.geometry;if(l.boundingSphere||l.computeBoundingSphere(),o.copy(l.boundingSphere),o.applyMatrix4(this.matrixWorld),!e.ray.intersectSphere(o,a))return;i.copy(this.matrixWorld).invert(),s.copy(e.ray).applyMatrix4(i);const c=new P,u=new P,h=new P,f=this instanceof $9?2:1,d=l.index,g=l.attributes;if(d!==null){const _=d.array,m=g.position.array,p=g.width.array;for(let M=0,v=_.length-1;M<v;M+=f){const x=_[M],S=_[M+1];if(x==null||S==null)throw new Error("missing index");c.fromArray(m,x*3),u.fromArray(m,S*3);const T=p[Math.floor(M/3)]!==void 0?p[Math.floor(M/3)]:1;if(T==null)throw new Error("missing width");e.params.Line=e.params.Line??{threshold:1};const E=e.params.Line.threshold+this.material.lineWidth*T/2,A=E*E;if(s.distanceSqToSegment(c,u,a,h)>A)continue;a.applyMatrix4(this.matrixWorld);const b=e.ray.origin.distanceTo(a);b<e.near||b>e.far||(n.push({distance:b,point:h.clone().applyMatrix4(this.matrixWorld),index:M,face:null,faceIndex:void 0,object:this}),M=v)}}}}/**
 * @description Loop Subdivision Surface
 * @about       Smooth subdivision surface modifier for use with three.js BufferGeometry.
 * @author      Stephens Nunnally <@stevinz>
 * @license     MIT - Copyright (c) 2022 Stephens Nunnally
 * @source      https://github.com/stevinz/three-subdivide
 */const pm=2,Dn=new P,xe=new P,Le=new P,i0=new P,jo=new P,$t=new P,Jt=new P,Qt=new P,Pr=new P,Lr=new P,Dr=new P,Co=[new P,new P,new P],ye=[new P,new P,new P],mm=new Mn;class ii{static modify(t,e=1,n={}){if(arguments.length>3&&console.warn("LoopSubdivision.modify() now uses a parameter object. See readme for more info!"),typeof n!="object"&&(n={}),n.split===void 0&&(n.split=!0),n.uvSmooth===void 0&&(n.uvSmooth=!1),n.preserveEdges===void 0&&(n.preserveEdges=!1),n.flatOnly===void 0&&(n.flatOnly=!1),n.maxTriangles===void 0&&(n.maxTriangles=1/0),n.weight===void 0&&(n.weight=1),(isNaN(n.weight)||!isFinite(n.weight))&&(n.weight=1),n.weight=Math.max(0,Math.min(1,n.weight)),!Po(t))return t;let i=t.clone();if(n.split){const s=ii.edgeSplit(i);i.dispose(),i=s}for(let s=0;s<e;s++)if(i.attributes.position.count/3<n.maxTriangles){let a;n.flatOnly?a=ii.flat(i,n):a=ii.smooth(i,n),i.groups.forEach(l=>{a.addGroup(l.start*4,l.count*4,l.materialIndex)}),i.dispose(),i=a}return i}static edgeSplit(t){if(!Po(t))return t;const e=t.index!==null?t.toNonIndexed():t.clone(),n=new Ae,i=s0(e),s=e.attributes.position.count,o=e.getAttribute("position"),a=e.getAttribute("normal"),l={},c=[],u={},h=[];for(let g=0;g<s;g+=3){$t.fromBufferAttribute(o,g+0),Jt.fromBufferAttribute(o,g+1),Qt.fromBufferAttribute(o,g+2),i0.fromBufferAttribute(a,g);const _=un($t),m=un(Jt),p=un(Qt),M=mm.set($t,Jt,Qt).getArea();if(h.push(!_m(M,0)),!h[g/3]){c.push([]);continue}xm(i0,$t,Jt,Qt);const v=un(i0),x=[`${_}_${m}_${v}`,`${m}_${_}_${v}`,`${m}_${p}_${v}`,`${p}_${m}_${v}`,`${p}_${_}_${v}`,`${_}_${p}_${v}`],S=g/3;for(let T=0;T<x.length;T++)l[x[T]]||(l[x[T]]=[]),l[x[T]].push(S),u[x[T]]||((T===0||T===1)&&(u[x[T]]=$t.distanceTo(Jt)),(T===2||T===3)&&(u[x[T]]=Jt.distanceTo(Qt)),(T===4||T===5)&&(u[x[T]]=Qt.distanceTo($t)));c.push([x[0],x[2],x[4]])}i.forEach(g=>{const _=e.getAttribute(g);if(!_)return;const m=d(_,g);n.setAttribute(g,new oe(m,_.itemSize))});const f=e.morphAttributes;for(const g in f){const _=[],m=f[g];for(let p=0,M=m.length;p<M;p++){if(m[p].count!==s)continue;const v=d(m[p],g,!0);_.push(new oe(v,m[p].itemSize))}n.morphAttributes[g]=_}return n.morphTargetsRelative=e.morphTargetsRelative,e.dispose(),n;function d(g,_,m=!1){const M=s*g.itemSize*4,v=new g.array.constructor(M),x=_==="position"&&!m&&e.groups.length>0;let S,T,E=0,A=0,y=g.itemSize;for(let z=0;z<s;z+=3){if(!h[z/3]){A+=3;continue}$t.fromBufferAttribute(g,z+0),Jt.fromBufferAttribute(g,z+1),Qt.fromBufferAttribute(g,z+2);const I=z/3,O=c[I][0],N=c[I][1],X=c[I][2],k=l[O].length,Y=l[N].length,Q=l[X].length,$=k+Y+Q-3,B=E*3/y/3;if($===0)re(v,E,y,$t,Jt,Qt),E+=y*3;else{const V=u[O],ht=u[N],ct=u[X];(V>ht||Y<=1)&&(V>ct||Q<=1)&&k>1?(xe.copy($t).add(Jt).divideScalar(2),Q>1?(Le.copy(Qt).add($t).divideScalar(2),re(v,E,y,$t,xe,Le),E+=y*3,re(v,E,y,xe,Qt,Le),E+=y*3):(re(v,E,y,$t,xe,Qt),E+=y*3),Y>1?(Le.copy(Jt).add(Qt).divideScalar(2),re(v,E,y,xe,Jt,Le),E+=y*3,re(v,E,y,Le,Qt,xe),E+=y*3):(re(v,E,y,Jt,Qt,xe),E+=y*3)):(ht>ct||Q<=1)&&Y>1?(xe.copy(Jt).add(Qt).divideScalar(2),k>1?(Le.copy($t).add(Jt).divideScalar(2),re(v,E,y,xe,Le,Jt),E+=y*3,re(v,E,y,Le,xe,$t),E+=y*3):(re(v,E,y,Jt,xe,$t),E+=y*3),Q>1?(Le.copy(Qt).add($t).divideScalar(2),re(v,E,y,xe,Qt,Le),E+=y*3,re(v,E,y,Le,$t,xe),E+=y*3):(re(v,E,y,Qt,$t,xe),E+=y*3)):Q>1?(xe.copy(Qt).add($t).divideScalar(2),Y>1?(Le.copy(Jt).add(Qt).divideScalar(2),re(v,E,y,Qt,xe,Le),E+=y*3,re(v,E,y,xe,Jt,Le),E+=y*3):(re(v,E,y,Qt,xe,Jt),E+=y*3),k>1?(Le.copy($t).add(Jt).divideScalar(2),re(v,E,y,$t,Le,xe),E+=y*3,re(v,E,y,Le,Jt,xe),E+=y*3):(re(v,E,y,$t,Jt,xe),E+=y*3)):(re(v,E,y,$t,Jt,Qt),E+=y*3)}x&&e.groups.forEach(V=>{V.start===z-A&&(S!==void 0&&T!==void 0&&n.addGroup(S,B-S,T),S=B,T=V.materialIndex)}),A=0}const b=E*3/y,F=new g.array.constructor(b);for(let z=0;z<b;z++)F[z]=v[z];return x&&S!==void 0&&T!==void 0&&n.addGroup(S,E*3/y/3-S,T),F}}static flat(t,e={}){if(!Po(t))return t;const n=t.index!==null?t.toNonIndexed():t.clone(),i=new Ae,s=s0(n),o=n.attributes.position.count;s.forEach(l=>{const c=n.getAttribute(l);c&&i.setAttribute(l,ii.flatAttribute(c,o,e))});const a=n.morphAttributes;for(const l in a){const c=[],u=a[l];for(let h=0,f=u.length;h<f;h++)u[h].count===o&&c.push(ii.flatAttribute(u[h],o,e));i.morphAttributes[l]=c}return i.morphTargetsRelative=n.morphTargetsRelative,n.dispose(),i}static flatAttribute(t,e,n={}){const s=e*t.itemSize*4,o=new t.array.constructor(s);let a=0,l=t.itemSize;for(let c=0;c<e;c+=3)$t.fromBufferAttribute(t,c+0),Jt.fromBufferAttribute(t,c+1),Qt.fromBufferAttribute(t,c+2),Pr.copy($t).add(Jt).divideScalar(2),Lr.copy(Jt).add(Qt).divideScalar(2),Dr.copy(Qt).add($t).divideScalar(2),re(o,a,l,$t,Pr,Dr),a+=l*3,re(o,a,l,Jt,Lr,Pr),a+=l*3,re(o,a,l,Qt,Dr,Lr),a+=l*3,re(o,a,l,Pr,Lr,Dr),a+=l*3;return new oe(o,t.itemSize)}static smooth(t,e={}){if(typeof e!="object"&&(e={}),e.uvSmooth===void 0&&(e.uvSmooth=!1),e.preserveEdges===void 0&&(e.preserveEdges=!1),!Po(t))return t;const n=t.index!==null?t.toNonIndexed():t.clone(),i=ii.flat(n,e),s=new Ae,o=s0(n),a=n.attributes.position.count,l=n.getAttribute("position"),c=i.getAttribute("position"),u={},h={},f={},d={};function g(v,x,S){h[v]||(h[v]={}),h[v][x]||(h[v][x]=[]),h[v][x].push(S)}function _(v,x){f[v]||(f[v]=[]),f[v].push(x)}function m(v,x){d[v]||(d[v]=new Set),d[v].add(x)}for(let v=0;v<a;v+=3){const x=un(ye[0].fromBufferAttribute(l,v+0)),S=un(ye[1].fromBufferAttribute(l,v+1)),T=un(ye[2].fromBufferAttribute(l,v+2));g(x,S,v+1),g(x,T,v+2),g(S,x,v+0),g(S,T,v+2),g(T,x,v+0),g(T,S,v+1),Pr.copy(ye[0]).add(ye[1]).divideScalar(2),Lr.copy(ye[1]).add(ye[2]).divideScalar(2),Dr.copy(ye[2]).add(ye[0]).divideScalar(2);const E=un(Pr),A=un(Lr),y=un(Dr);_(E,v+2),_(A,v+0),_(y,v+1),m(x,E),m(x,y),m(S,E),m(S,A),m(T,A),m(T,y)}for(let v=0;v<i.attributes.position.count;v++){const x=un(jo.fromBufferAttribute(c,v));u[x]||(u[x]=[]),u[x].push(v)}o.forEach(v=>{const x=n.getAttribute(v),S=i.getAttribute(v);if(x===void 0||S===void 0)return;const T=M(v,x,S);s.setAttribute(v,new oe(T,S.itemSize))});const p=n.morphAttributes;for(const v in p){const x=[],S=p[v];for(let T=0,E=S.length;T<E;T++){if(S[T].count!==a)continue;const A=S[T],y=ii.flatAttribute(S[T],S[T].count,e),b=M(v,A,y);x.push(new oe(b,y.itemSize))}s.morphAttributes[v]=x}return s.morphTargetsRelative=n.morphTargetsRelative,i.dispose(),n.dispose(),s;function M(v,x,S){const T=i.attributes.position.count*S.itemSize,E=new x.array.constructor(T);let A=0;for(let y=0;y<i.attributes.position.count;y+=3){for(let b=0;b<3;b++)if(v==="uv"&&!e.uvSmooth)ye[b].fromBufferAttribute(S,y+b);else if(v==="normal"){Co[b].fromBufferAttribute(c,y+b);const F=un(Co[b]),z=u[F],I=Object.keys(z).length,O=.75/I,N=1-O*I;ye[b].fromBufferAttribute(S,y+b),ye[b].multiplyScalar(N),z.forEach(X=>{Dn.fromBufferAttribute(S,X),Dn.multiplyScalar(O),ye[b].add(Dn)})}else{ye[b].fromBufferAttribute(S,y+b),Co[b].fromBufferAttribute(c,y+b);const F=un(Co[b]),z=h[F],I=f[F];if(z){if(e.preserveEdges){const Q=d[F];let $=!0;for(const B of Q)f[B].length%2!==0&&($=!1);if(!$)continue}const O=Object.keys(z).length,N=1/O*(5/8-Math.pow(3/8+1/4*Math.cos(2*Math.PI/O),2)),X=1/O/O,k=gm(X,N,e.weight),Y=1-k*O;ye[b].multiplyScalar(Y);for(let Q in z){const $=z[Q];Dn.set(0,0,0);for(let B=0;B<$.length;B++)Dn.add(jo.fromBufferAttribute(x,$[B]));Dn.divideScalar($.length),Dn.multiplyScalar(k),ye[b].add(Dn)}}else if(I&&I.length===2){const O=I.length,N=.125,X=1-N*O;ye[b].multiplyScalar(X),I.forEach(k=>{Dn.fromBufferAttribute(x,k),Dn.multiplyScalar(N),ye[b].add(Dn)})}}re(E,A,S.itemSize,ye[0],ye[1],ye[2]),A+=S.itemSize*3}return E}}}const _6=Math.pow(10,pm);function _m(r,t,e=1e-5){return r<t+e&&r>t-e}function r0(r,t=_6){let e=vm(r*t);return e==0&&(e=0),`${e}`}function un(r,t=_6){return`${r0(r.x,t)},${r0(r.y,t)},${r0(r.z,t)}`}function gm(r,t,e){return(1-e)*r+e*t}function vm(r){return r+(r>0?.5:-.5)<<0}function xm(r,t,e,n){jo.subVectors(t,e),r.subVectors(e,n),r.cross(jo).normalize()}function s0(r){const t=["position","normal","uv"],e=Object.keys(r.attributes);return Array.from(new Set(t.concat(e)))}function re(r,t,e,n,i,s){e>=1&&(r[t+0+e*0]=n.x,r[t+0+e*1]=i.x,r[t+0+e*2]=s.x),e>=2&&(r[t+1+e*0]=n.y,r[t+1+e*1]=i.y,r[t+1+e*2]=s.y),e>=3&&(r[t+2+e*0]=n.z,r[t+2+e*1]=i.z,r[t+2+e*2]=s.z),e>=4&&(r[t+3+e*0]=n.w,r[t+3+e*1]=i.w,r[t+3+e*2]=s.w)}function Po(r){return r===void 0?(console.warn("LoopSubdivision: Geometry provided is undefined"),!1):r.isBufferGeometry?r.attributes.position===void 0?(console.warn("LoopSubdivision: Geometry provided missing required 'position' attribute"),!1):(r.attributes.normal===void 0&&r.computeVertexNormals(),!0):(console.warn("LoopSubdivision: Geometry provided is not 'BufferGeometry' type"),!1)}var qr=Object.freeze({Linear:Object.freeze({None:function(r){return r},In:function(r){return this.None(r)},Out:function(r){return this.None(r)},InOut:function(r){return this.None(r)}}),Quadratic:Object.freeze({In:function(r){return r*r},Out:function(r){return r*(2-r)},InOut:function(r){return(r*=2)<1?.5*r*r:-.5*(--r*(r-2)-1)}}),Cubic:Object.freeze({In:function(r){return r*r*r},Out:function(r){return--r*r*r+1},InOut:function(r){return(r*=2)<1?.5*r*r*r:.5*((r-=2)*r*r+2)}}),Quartic:Object.freeze({In:function(r){return r*r*r*r},Out:function(r){return 1- --r*r*r*r},InOut:function(r){return(r*=2)<1?.5*r*r*r*r:-.5*((r-=2)*r*r*r-2)}}),Quintic:Object.freeze({In:function(r){return r*r*r*r*r},Out:function(r){return--r*r*r*r*r+1},InOut:function(r){return(r*=2)<1?.5*r*r*r*r*r:.5*((r-=2)*r*r*r*r+2)}}),Sinusoidal:Object.freeze({In:function(r){return 1-Math.sin((1-r)*Math.PI/2)},Out:function(r){return Math.sin(r*Math.PI/2)},InOut:function(r){return .5*(1-Math.sin(Math.PI*(.5-r)))}}),Exponential:Object.freeze({In:function(r){return r===0?0:Math.pow(1024,r-1)},Out:function(r){return r===1?1:1-Math.pow(2,-10*r)},InOut:function(r){return r===0?0:r===1?1:(r*=2)<1?.5*Math.pow(1024,r-1):.5*(-Math.pow(2,-10*(r-1))+2)}}),Circular:Object.freeze({In:function(r){return 1-Math.sqrt(1-r*r)},Out:function(r){return Math.sqrt(1- --r*r)},InOut:function(r){return(r*=2)<1?-.5*(Math.sqrt(1-r*r)-1):.5*(Math.sqrt(1-(r-=2)*r)+1)}}),Elastic:Object.freeze({In:function(r){return r===0?0:r===1?1:-Math.pow(2,10*(r-1))*Math.sin((r-1.1)*5*Math.PI)},Out:function(r){return r===0?0:r===1?1:Math.pow(2,-10*r)*Math.sin((r-.1)*5*Math.PI)+1},InOut:function(r){return r===0?0:r===1?1:(r*=2,r<1?-.5*Math.pow(2,10*(r-1))*Math.sin((r-1.1)*5*Math.PI):.5*Math.pow(2,-10*(r-1))*Math.sin((r-1.1)*5*Math.PI)+1)}}),Back:Object.freeze({In:function(r){var t=1.70158;return r===1?1:r*r*((t+1)*r-t)},Out:function(r){var t=1.70158;return r===0?0:--r*r*((t+1)*r+t)+1},InOut:function(r){var t=2.5949095;return(r*=2)<1?.5*(r*r*((t+1)*r-t)):.5*((r-=2)*r*((t+1)*r+t)+2)}}),Bounce:Object.freeze({In:function(r){return 1-qr.Bounce.Out(1-r)},Out:function(r){return r<1/2.75?7.5625*r*r:r<2/2.75?7.5625*(r-=1.5/2.75)*r+.75:r<2.5/2.75?7.5625*(r-=2.25/2.75)*r+.9375:7.5625*(r-=2.625/2.75)*r+.984375},InOut:function(r){return r<.5?qr.Bounce.In(r*2)*.5:qr.Bounce.Out(r*2-1)*.5+.5}}),generatePow:function(r){return r===void 0&&(r=4),r=r<Number.EPSILON?Number.EPSILON:r,r=r>1e4?1e4:r,{In:function(t){return Math.pow(t,r)},Out:function(t){return 1-Math.pow(1-t,r)},InOut:function(t){return t<.5?Math.pow(t*2,r)/2:(1-Math.pow(2-t*2,r))/2+.5}}}}),Br=function(){return performance.now()},g6=function(){function r(){this._tweens={},this._tweensAddedDuringUpdate={}}return r.prototype.getAll=function(){var t=this;return Object.keys(this._tweens).map(function(e){return t._tweens[e]})},r.prototype.removeAll=function(){this._tweens={}},r.prototype.add=function(t){this._tweens[t.getId()]=t,this._tweensAddedDuringUpdate[t.getId()]=t},r.prototype.remove=function(t){delete this._tweens[t.getId()],delete this._tweensAddedDuringUpdate[t.getId()]},r.prototype.update=function(t,e){t===void 0&&(t=Br()),e===void 0&&(e=!1);var n=Object.keys(this._tweens);if(n.length===0)return!1;for(;n.length>0;){this._tweensAddedDuringUpdate={};for(var i=0;i<n.length;i++){var s=this._tweens[n[i]],o=!e;s&&s.update(t,o)===!1&&!e&&delete this._tweens[n[i]]}n=Object.keys(this._tweensAddedDuringUpdate)}return!0},r}(),Hi={Linear:function(r,t){var e=r.length-1,n=e*t,i=Math.floor(n),s=Hi.Utils.Linear;return t<0?s(r[0],r[1],n):t>1?s(r[e],r[e-1],e-n):s(r[i],r[i+1>e?e:i+1],n-i)},Bezier:function(r,t){for(var e=0,n=r.length-1,i=Math.pow,s=Hi.Utils.Bernstein,o=0;o<=n;o++)e+=i(1-t,n-o)*i(t,o)*r[o]*s(n,o);return e},CatmullRom:function(r,t){var e=r.length-1,n=e*t,i=Math.floor(n),s=Hi.Utils.CatmullRom;return r[0]===r[e]?(t<0&&(i=Math.floor(n=e*(1+t))),s(r[(i-1+e)%e],r[i],r[(i+1)%e],r[(i+2)%e],n-i)):t<0?r[0]-(s(r[0],r[0],r[1],r[1],-n)-r[0]):t>1?r[e]-(s(r[e],r[e],r[e-1],r[e-1],n-e)-r[e]):s(r[i?i-1:0],r[i],r[e<i+1?e:i+1],r[e<i+2?e:i+2],n-i)},Utils:{Linear:function(r,t,e){return(t-r)*e+r},Bernstein:function(r,t){var e=Hi.Utils.Factorial;return e(r)/e(t)/e(r-t)},Factorial:function(){var r=[1];return function(t){var e=1;if(r[t])return r[t];for(var n=t;n>1;n--)e*=n;return r[t]=e,e}}(),CatmullRom:function(r,t,e,n,i){var s=(e-r)*.5,o=(n-t)*.5,a=i*i,l=i*a;return(2*t-2*e+s+o)*l+(-3*t+3*e-2*s-o)*a+s*i+t}}},_3=function(){function r(){}return r.nextId=function(){return r._nextId++},r._nextId=0,r}(),N0=new g6,ym=function(){function r(t,e){e===void 0&&(e=N0),this._object=t,this._group=e,this._isPaused=!1,this._pauseStart=0,this._valuesStart={},this._valuesEnd={},this._valuesStartRepeat={},this._duration=1e3,this._isDynamic=!1,this._initialRepeat=0,this._repeat=0,this._yoyo=!1,this._isPlaying=!1,this._reversed=!1,this._delayTime=0,this._startTime=0,this._easingFunction=qr.Linear.None,this._interpolationFunction=Hi.Linear,this._chainedTweens=[],this._onStartCallbackFired=!1,this._onEveryStartCallbackFired=!1,this._id=_3.nextId(),this._isChainStopped=!1,this._propertiesAreSetUp=!1,this._goToEnd=!1}return r.prototype.getId=function(){return this._id},r.prototype.isPlaying=function(){return this._isPlaying},r.prototype.isPaused=function(){return this._isPaused},r.prototype.to=function(t,e){if(e===void 0&&(e=1e3),this._isPlaying)throw new Error("Can not call Tween.to() while Tween is already started or paused. Stop the Tween first.");return this._valuesEnd=t,this._propertiesAreSetUp=!1,this._duration=e,this},r.prototype.duration=function(t){return t===void 0&&(t=1e3),this._duration=t,this},r.prototype.dynamic=function(t){return t===void 0&&(t=!1),this._isDynamic=t,this},r.prototype.start=function(t,e){if(t===void 0&&(t=Br()),e===void 0&&(e=!1),this._isPlaying)return this;if(this._group&&this._group.add(this),this._repeat=this._initialRepeat,this._reversed){this._reversed=!1;for(var n in this._valuesStartRepeat)this._swapEndStartRepeatValues(n),this._valuesStart[n]=this._valuesStartRepeat[n]}if(this._isPlaying=!0,this._isPaused=!1,this._onStartCallbackFired=!1,this._onEveryStartCallbackFired=!1,this._isChainStopped=!1,this._startTime=t,this._startTime+=this._delayTime,!this._propertiesAreSetUp||e){if(this._propertiesAreSetUp=!0,!this._isDynamic){var i={};for(var s in this._valuesEnd)i[s]=this._valuesEnd[s];this._valuesEnd=i}this._setupProperties(this._object,this._valuesStart,this._valuesEnd,this._valuesStartRepeat,e)}return this},r.prototype.startFromCurrentValues=function(t){return this.start(t,!0)},r.prototype._setupProperties=function(t,e,n,i,s){for(var o in n){var a=t[o],l=Array.isArray(a),c=l?"array":typeof a,u=!l&&Array.isArray(n[o]);if(!(c==="undefined"||c==="function")){if(u){var h=n[o];if(h.length===0)continue;for(var f=[a],d=0,g=h.length;d<g;d+=1){var _=this._handleRelativeValue(a,h[d]);if(isNaN(_)){u=!1,console.warn("Found invalid interpolation list. Skipping.");break}f.push(_)}u&&(n[o]=f)}if((c==="object"||l)&&a&&!u){e[o]=l?[]:{};var m=a;for(var p in m)e[o][p]=m[p];i[o]=l?[]:{};var h=n[o];if(!this._isDynamic){var M={};for(var p in h)M[p]=h[p];n[o]=h=M}this._setupProperties(m,e[o],h,i[o],s)}else(typeof e[o]>"u"||s)&&(e[o]=a),l||(e[o]*=1),u?i[o]=n[o].slice().reverse():i[o]=e[o]||0}}},r.prototype.stop=function(){return this._isChainStopped||(this._isChainStopped=!0,this.stopChainedTweens()),this._isPlaying?(this._group&&this._group.remove(this),this._isPlaying=!1,this._isPaused=!1,this._onStopCallback&&this._onStopCallback(this._object),this):this},r.prototype.end=function(){return this._goToEnd=!0,this.update(1/0),this},r.prototype.pause=function(t){return t===void 0&&(t=Br()),this._isPaused||!this._isPlaying?this:(this._isPaused=!0,this._pauseStart=t,this._group&&this._group.remove(this),this)},r.prototype.resume=function(t){return t===void 0&&(t=Br()),!this._isPaused||!this._isPlaying?this:(this._isPaused=!1,this._startTime+=t-this._pauseStart,this._pauseStart=0,this._group&&this._group.add(this),this)},r.prototype.stopChainedTweens=function(){for(var t=0,e=this._chainedTweens.length;t<e;t++)this._chainedTweens[t].stop();return this},r.prototype.group=function(t){return t===void 0&&(t=N0),this._group=t,this},r.prototype.delay=function(t){return t===void 0&&(t=0),this._delayTime=t,this},r.prototype.repeat=function(t){return t===void 0&&(t=0),this._initialRepeat=t,this._repeat=t,this},r.prototype.repeatDelay=function(t){return this._repeatDelayTime=t,this},r.prototype.yoyo=function(t){return t===void 0&&(t=!1),this._yoyo=t,this},r.prototype.easing=function(t){return t===void 0&&(t=qr.Linear.None),this._easingFunction=t,this},r.prototype.interpolation=function(t){return t===void 0&&(t=Hi.Linear),this._interpolationFunction=t,this},r.prototype.chain=function(){for(var t=[],e=0;e<arguments.length;e++)t[e]=arguments[e];return this._chainedTweens=t,this},r.prototype.onStart=function(t){return this._onStartCallback=t,this},r.prototype.onEveryStart=function(t){return this._onEveryStartCallback=t,this},r.prototype.onUpdate=function(t){return this._onUpdateCallback=t,this},r.prototype.onRepeat=function(t){return this._onRepeatCallback=t,this},r.prototype.onComplete=function(t){return this._onCompleteCallback=t,this},r.prototype.onStop=function(t){return this._onStopCallback=t,this},r.prototype.update=function(t,e){if(t===void 0&&(t=Br()),e===void 0&&(e=!0),this._isPaused)return!0;var n,i,s=this._startTime+this._duration;if(!this._goToEnd&&!this._isPlaying){if(t>s)return!1;e&&this.start(t,!0)}if(this._goToEnd=!1,t<this._startTime)return!0;this._onStartCallbackFired===!1&&(this._onStartCallback&&this._onStartCallback(this._object),this._onStartCallbackFired=!0),this._onEveryStartCallbackFired===!1&&(this._onEveryStartCallback&&this._onEveryStartCallback(this._object),this._onEveryStartCallbackFired=!0),i=(t-this._startTime)/this._duration,i=this._duration===0||i>1?1:i;var o=this._easingFunction(i);if(this._updateProperties(this._object,this._valuesStart,this._valuesEnd,o),this._onUpdateCallback&&this._onUpdateCallback(this._object,i),i===1)if(this._repeat>0){isFinite(this._repeat)&&this._repeat--;for(n in this._valuesStartRepeat)!this._yoyo&&typeof this._valuesEnd[n]=="string"&&(this._valuesStartRepeat[n]=this._valuesStartRepeat[n]+parseFloat(this._valuesEnd[n])),this._yoyo&&this._swapEndStartRepeatValues(n),this._valuesStart[n]=this._valuesStartRepeat[n];return this._yoyo&&(this._reversed=!this._reversed),this._repeatDelayTime!==void 0?this._startTime=t+this._repeatDelayTime:this._startTime=t+this._delayTime,this._onRepeatCallback&&this._onRepeatCallback(this._object),this._onEveryStartCallbackFired=!1,!0}else{this._onCompleteCallback&&this._onCompleteCallback(this._object);for(var a=0,l=this._chainedTweens.length;a<l;a++)this._chainedTweens[a].start(this._startTime+this._duration,!1);return this._isPlaying=!1,!1}return!0},r.prototype._updateProperties=function(t,e,n,i){for(var s in n)if(e[s]!==void 0){var o=e[s]||0,a=n[s],l=Array.isArray(t[s]),c=Array.isArray(a),u=!l&&c;u?t[s]=this._interpolationFunction(a,i):typeof a=="object"&&a?this._updateProperties(t[s],o,a,i):(a=this._handleRelativeValue(o,a),typeof a=="number"&&(t[s]=o+(a-o)*i))}},r.prototype._handleRelativeValue=function(t,e){return typeof e!="string"?e:e.charAt(0)==="+"||e.charAt(0)==="-"?t+parseFloat(e):parseFloat(e)},r.prototype._swapEndStartRepeatValues=function(t){var e=this._valuesStartRepeat[t],n=this._valuesEnd[t];typeof n=="string"?this._valuesStartRepeat[t]=this._valuesStartRepeat[t]+parseFloat(n):this._valuesStartRepeat[t]=this._valuesEnd[t],this._valuesEnd[t]=e},r}(),Mm="21.0.0",Sm=_3.nextId,Wn=N0,Em=Wn.getAll.bind(Wn),Tm=Wn.removeAll.bind(Wn),bm=Wn.add.bind(Wn),wm=Wn.remove.bind(Wn),Am=Wn.update.bind(Wn),rr={Easing:qr,Group:g6,Interpolation:Hi,now:Br,Sequence:_3,nextId:Sm,Tween:ym,VERSION:Mm,getAll:Em,removeAll:Tm,add:bm,remove:wm,update:Am};const Zo=document.querySelector(".globes"),sr=new nc({canvas:Zo});sr.setSize(window.innerWidth,window.innerHeight);sr.setPixelRatio(2);sr.setClearColor("#000",1);const Xn=new Sn(12,window.innerWidth/window.innerHeight,.1,45);Xn.position.set(-10.4,3,0);Xn.setViewOffset(10,10,-2,.5,9,9);Xn.aspect=window.innerWidth/window.innerHeight;Xn.updateProjectionMatrix();const g3=new Gp(Xn,Zo);g3.enableDamping=!0;g3.enablePan=!1;const Ke=new K9,Qi=new lm(sr,Xn,sr.domElement),aa=new pe,v3=new pc(16777215,2);v3.position.set(-1.5,1.7,.7);aa.add(v3);const Rm=new pc(16777215,2);v3.position.set(-1.5,.3,.7);aa.add(Rm);const Qe=new me(new $0(1,2),new kn({opacity:1,transparent:!0,side:ze,visible:!1})),Cm=new me(new J0(1.0499,64,36),new Cp({color:new qt(597594)}));Ke.add(Qe);Ke.add(Cm);Ke.add(aa);function v6(r,t,e,n){const i=[];let s=1;if(n)for(let o=0;o<n;o++)s*=10;return r.forEach((o,a)=>{switch(e){case"add":i.push(n?Math.floor((o+t[a])*s)/s:o+t[a]);break;case"min":i.push(n?Math.floor((o-t[a])*s)/s:o-t[a]);break;case"sub":i.push(n?Math.floor(o*t[a]*s)/s:o*t[a]);break;case"div":i.push(n?Math.floor(o/t[a]*s)/s:o/t[a]);break}}),i}function x6(r){const{main:t,position1:e,position2:n,geometry1:i,geometry2:s,event1:o,event2:a,event3:l}=r,c=t?8831993:36347,u=new me(new na(...i||t?[.004,.004,.3,12]:[.004,.004,.2,12]),new kn({color:c}));u.position.set(...e),Ke.add(u),Qe.add(u),o&&(Qi.add(u),u.addEventListener("click",d=>o(d,u)));const h=new me(new zo(...s||t?[.02,24,0,10]:[.015,24,0,10]),new kn({color:c,side:fn}));h.position.set(...n),h.lookAt(new P),Ke.add(h),Qe.add(h),a&&(Qi.add(h),h.addEventListener("click",d=>a(d,h)));let f={};return l&&(f=new me(new zo(...s||t?[.02,24,0,10]:[.015,24,0,10]),new kn({visible:!1,side:ze})),f.position.set(...n),f.lookAt(new P),f.scale.set(5,5,5),Ke.add(f),Qe.add(f),Qi.add(f),f.addEventListener("mouseover",()=>Zo.style.cursor="pointer"),f.addEventListener("mouseout",()=>Zo.style.cursor="auto"),f.addEventListener("click",d=>l(d,f))),{body:u,base:h,trigger:f}}const Pm=async function(r){const{msg:t,szBx:e,szTxt:n,bvlThk:i,pos:s,gr:o}=r,a=2,l={split:!0,uvSmooth:!0,preserveEdges:!0,flatOnly:!1,maxTriangles:1/0},c=ii.modify(new os(.0345,.15,e||.3,6),a,l);c.computeVertexNormals();const u=new me(c,new $1({side:wn})),h={text:t||"Wow!",pos:s?s.txt:[-.0146,-.0319,-.127],rot:[0,-1.85,0],size:n||.075,bvlThk:i||.005,bevelSize:4e-4,color:8696799,parent:Qe},f=await F0(h);f.rotation.copy(u.rotation),f.rotateY(-1.57);const d=new me(new j0(.023,.07,4,1),new $1);d.position.set(...s?s.cn:[0,-.0896,-.102]),d.rotation.set(3.6,.77,6.3);const g=new gs;return g.add(u,f,d),Ke.add(g),Qe.add(g),g.position.set(...o.pos),g.rotation.set(...o.rot),g},mi=p6.timeline({defaults:{duration:2}}),Ko=[-.9012,.4558,-.3452],Lm=new nm;function F0(r){const t=r.font?r.font:"./assets/fonts/font-roboto.json";let{text:e,pos:n,rot:i,size:s,bvlThk:o,bevelSize:a,color:l=16777215,height:c=.004,curve:u=2,parent:h=!1,event:f}=r;return new Promise(d=>{Lm.load(t,g=>{const _=new me(new om(e,{font:g,size:s,height:c,curveSegments:u,bevelEnabled:!!o,bevelThickness:o,bevelSize:a||.01}),new kn({color:l,side:wn}));n&&_.position.set(...n),i&&_.rotation.set(...i),Ke.add(_),h&&h.add(_),f&&(Qi.add(_),_.addEventListener("click",m=>f(m,_))),d(_)})})}const Dm=new dc;function Um(r){const{imgSrc:t,size:e,pos:n,rot:i,alpha:s=.5,parent:o=!1,event:a}=r,l=Dm.load(t),c=new me(new ji(...e),new kn({map:l,side:fn,alphaTest:s}));return n&&c.position.set(...n),i&&c.rotation.set(...i),Ke.add(c),o&&o.add(c),a&&(Qi.add(c),c.addEventListener("click",u=>a(u,c))),c}const Im={imgSrc:"assets/images/pine-tree.png",size:[.235,.235],pos:[-.9552,.6326,-.1938],rot:[0,-1.85,0],parent:Qe},wl="./images/map(1).png";function Om(r){if(typeof r=="string"){new dc().load(wl,function(s){const o=new kn({map:s,side:fn,alphaTest:.5}),a=new me(new ji(.235,.235),o);a.position.set(.62,1,-.37),a.rotation.set(0,1.95,0),a.scale.set(0,0,0),Ke.add(a),Qe.add(a)},void 0,function(s){console.error(s)});const e=[[.662,.775,-.28],[.63,.84,-.13],[.89,.55,-.2139],[.54,.75,.5],[-.2138805,.773827135,.692131996],[-.7738271,.69213199,.21388055],[.25,.33,-.968],[.53,-.02,-.92]];let n=null;const i={};i.w=360,i.h=180,i.d=document,i.c=i.d.createElement("canvas"),i.cnt=i.c.getContext("2d"),i.c.width=i.w,i.c.height=i.h,i.c.classList.add("tmpCanvas"),i.d.body.appendChild(i.c),i.s=i.d.createElement("style"),i.s.innerText=".tmpCanvas{position:absolute;z-index:-9;width:0;height:0;overflow:hidden}",i.d.body.appendChild(i.s),i.img=new Image,i.img.src=wl,i.img.onload=()=>{i.cnt.drawImage(i.img,0,0,i.w,i.h),i.data=i.cnt.getImageData(0,0,i.w,i.h),i.data=i.data.data,i.ar=[];const s=[];for(let m=0;m<e.length;m++)s.push({impactPosition:new P(e[m][0],e[m][1],e[m][2]),impactMaxRadius:1e-4+Math.random()*2e-4,impactRatio:.01});let o={impacts:{value:s}};for(let m=0;m<i.w;m++)for(let p=0;p<i.w;p++)i.data[(i.w*m+p)*4+3]>200&&i.ar.push([p-i.w,m-i.w/6.2]);const a=new pe;Ke.add(a);const l=new pe;a.add(l);const c=new pe;c.position.z=.5,l.add(c);const u=new pe;u.position.z=.5,c.add(u);const h=Math.PI*.5,f=Math.PI*-.135,d=[];i.nAr=[],i.counter=0,i.counter2=0;let g=new kn({color:16777215,side:wn,onBeforeCompile:m=>{m.uniforms.impacts=o.impacts,m.vertexShader=`
          struct impact {
            vec3 impactPosition;
            float impactMaxRadius;
            float impactRatio;
          };
          uniform impact impacts[${e.length}];
          attribute vec3 center;
          ${m.vertexShader}
        `.replace("#include <begin_vertex>",`#include <begin_vertex>
          float finalStep = 0.0;
          for (int i = 0; i < ${e.length};i++){
  
            float dist = distance(center, impacts[i].impactPosition);
            float curRadius = impacts[i].impactMaxRadius * impacts[i].impactRatio/2.;
            float sstep = smoothstep(0., curRadius*1.8, dist) - smoothstep(curRadius - ( .8 * impacts[i].impactRatio ), curRadius, dist);
            sstep *= 1. - impacts[i].impactRatio;
            finalStep += sstep;
  
          }
          finalStep = clamp(finalStep*.5, 0., 1.);
          transformed += normal * finalStep * 0.25;
          `),m.fragmentShader=m.fragmentShader.replace("vec4 diffuseColor = vec4( diffuse, opacity );",`
          if (length(vUv - 0.5) > 0.5) discard;
          vec4 diffuseColor = vec4( vec3(.7,.7,.7), .1 );
          `)}});g.defines={USE_UV:""},i.ar.map(m=>{i.counter2++;const p=new ji(.005,.005);a.rotation.y=ms.degToRad(m[0])+h+15;const M=l.rotation.x=ms.degToRad(m[1])+f;M-i.prewLatX===0&&(u.updateWorldMatrix(!0,!1),p.applyMatrix4(u.matrixWorld),p.setAttribute("center",new le(p.attributes.position.array,3)),d.push(p)),i.prewLatX=M});const _=Ml(d,!1);n=new me(_,g),Ke.add(n),Qe.add(n),n.scale.set(1.051,1.051,1.051),i.c.remove(),i.s.remove()}}else{let t=[];const e=[],n=new oi({side:wn,vertexShader:`
        varying vec2 vUv;
          
          void main() {
            vUv = uv;
            gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.0);
          }
        `,fragmentShader:`
          varying vec2 vUv;
          
          void main() {
            float radius = 0.5; // Радиус круга
            vec2 center = vec2(0.5, 0.5); // Координаты центра круга
            
            float distance = length(vUv - center);
            
            if (distance > radius) {
              discard; // Отбросить фрагмент, если он находится за пределами круга
            }
            
            gl_FragColor = vec4(1.0); // Цвет круга
          }
        `});for(let o=0;o<29192;o++){const a=r[o];if(t.push(a),t.length===2){const l=ms.degToRad(t[1]),c=ms.degToRad(t[0]),u=Math.PI/1.7-l,h=2*Math.PI-c,f=new ji(.005,.005,1,1),d=new me(f,n);d.position.setFromSphericalCoords(1.06,u,h),d.lookAt(...Qe.position.toArray()),d.lookAt(...Qe.position.toArray()),f.applyMatrix4(d.matrixWorld),e.push(f),t.length=0}}const i=Ml(e,!1),s=new me(i,n).rotateZ(Math.PI);return s.material.side=ze,Ke.add(s),s}}Om(am);const Nm=r=>{const t=[];for(let e=0;e<r.length-1;e++){const n=r[e],i=r[e+1];t.push(n.x,n.y,n.z),t.push(i.x,i.y,i.z)}return t},Al=r=>new P(r[0],r[1],r[2]);function Fm(r){const{from:t,to:e,middle:n,color:i,width:s,animation:o,length:a,dashArray:l,dashOffset:c,dashRatio:u,event:h}=r;function f(x){const{f:S,t:T,m:E}=x;return new ac(new P(...S),new P(...E),new P(...T)).getPoints(24)}const d=t||Ko||[0,-1.5,0],g=e||[0,1.5,0],_=new P;_.addVectors(Al(d),Al(g)).multiplyScalar(.7);const m=n||[..._],M=[...f({f:d,t:g,m})];if(a){const x=a>20?10:a<.8?.8:a;M.length=Math.floor(x*2.5)}let v;if(s){const x=new cm;x.setPoints(Nm(M)),v=new dm(x,new fm({transparent:!0,lineWidth:s||1,color:new qt(i||16777215),dashArray:l||2,dashOffset:c||0,dashRatio:u||.5}))}else v=new rc(new Ae().setFromPoints(M),new ic({transparent:!0,color:i||16777215,side:fn}));if(Ke.add(v),Qe.add(v),h&&(Qi.add(v),v.addEventListener("click",x=>h(x,v))),o){let x=function(){v.material.uniforms.dashOffset.value-=.01,requestAnimationFrame(x)};x()}return v}const zm=async()=>{const r={main:!0,position1:v6(Ko,[.002,.1553,0],"add"),position2:Ko,geometry1:[.004,.004,.3,12],geometry2:[.02,24,0,10]},t=x6(r);mi.fromTo(t.base.scale,{x:0,y:0,z:0},{x:1,y:1,z:1,ease:"power1.out",delay:.4}),mi.fromTo(t.body.scale,{x:0,y:0,z:0},{x:1,y:1,z:1,ease:"power1.out",delay:.4});const e={text:"One",pos:[-.9266,.6378,-.2552],rot:[0,-1.85,0],size:.05,parent:Qe},n={text:"Test",pos:[-.9266,.5278,-.2552],rot:[0,-1.85,0],size:.05,color:8696799,parent:Qe},i=await F0(e),s=await F0(n);mi.fromTo(i.scale,{x:0,y:0,z:0},{x:1,y:1,z:1,ease:"power1.out",delay:.1,duration:1},5),mi.fromTo(s.scale,{x:0,y:0,z:0},{x:1,y:1,z:1,ease:"power1.out",duration:1},5.5);const o=Um(Im);mi.fromTo(o.scale,{x:0,y:0,z:0},{x:.7,y:.7,z:1,ease:"power1.out",duration:1},6)};zm();const Bm=[[[-1,.2292,-.2822],[-1.027,.3412,-.1766],[0,-.18,0]],[[-.5284,.6614,-.6456],[-.6072,.7838,-.5634],[0,-.75,0]],[[-.6562,.3793,.7484],[-.5734,.496,.8274],[0,.85,0]],[[.0329,.647,-.8432],[-.0774,.762,-.8274],[0,-1.4,0]],[[.9618,.4299,-.2006],[.9469,.5541,-.3184],[0,-3,0]],[[-.135,.7684,-.7336],[-.244,.885,-.6904],[0,-1.2,0]]],ps=[];let di=null;const o0=function(r,t){r.forEach(e=>{new rr.Tween(e.scale).to({x:0,y:0,z:0},t).easing(rr.Easing.Quadratic.InOut).start()})},a0=function(r,t){r.forEach(e=>{new rr.Tween(e.scale).to({x:1,y:1,z:1},t).easing(rr.Easing.Quadratic.InOut).start()})};Bm.forEach(async(r,t)=>{const e=await Pm({gr:{pos:r[1],rot:r[2]}}),n=Fm({from:Ko,to:r[0],width:.007,dashOffset:-.1,dashArray:2,dashRatio:.85,animation:!0}),i=x6({position1:v6(r[0],[.002,.113,0],"add"),position2:r[0],event3(){(di||di!==null)&&(a0([ps[di].point.body],1e3),o0([ps[di].msg],1e3)),o0([i.body],1e3),a0([e],1e3),di==t&&(a0([ps[di].point.body],1e3),o0([ps[di].msg],1e3)),di=t}});ps.push({line:n,point:i,msg:e}),mi.fromTo(i.base.scale,{x:0,y:0,z:0},{x:1,y:1,z:1,ease:"power1.out",delay:0},2),mi.fromTo(i.body.scale,{x:0,y:0,z:0},{x:1,y:1,z:1,ease:"power1.out",delay:0},3),mi.fromTo(n.scale,{x:0,y:0,z:0},{x:1,y:1,z:1,ease:"power1.out",delay:0},4.2),e.scale.set(0,0,0)});window.addEventListener("resize",()=>{sr.setSize(window.innerWidth,window.innerHeight),Xn.aspect=window.innerWidth/window.innerHeight,Xn.updateProjectionMatrix()});function y6(){aa.position.copy(Xn.position),g3.update(),rr.update(),Qi.update(),sr.render(Ke,Xn),requestAnimationFrame(y6)}y6()});export default km();
